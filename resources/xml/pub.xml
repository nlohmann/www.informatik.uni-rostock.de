<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE bibtex:file PUBLIC
"-//BibTeXML//DTD XML for BibTeX v1.0//EN"
"bibtexml.dtd" >
<bibtex:file xmlns:bibtex="http://bibtexml.sf.net/">

  <bibtex:entry id="WimmelW_2011_tacas">
    <bibtex:inproceedings>
      <bibtex:abstract>We propose a reachability verification technique that combines the Petri net state equation (a linear algebraic overapproximation of the set of reach- able states) with the concept of counterexample guided abstraction refinement. In essence, we replace the search through the set of reachable states by a search through the space of solutions of the state equation. We demonstrate the excellent performance of the technique on several real-world examples. The technique is particularly useful in those cases where the reachability query yields a negative result: While state space based techniques need to fully expand the state space in this case, our technique often terminates promptly. In addition, we can derive some diagnostic information in case of unreachability while state space methods can only provide witness paths in the case of reachability.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Harro Wimmel</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Tools and Algorithms for the Construction and Analysis of Systems, 17th International Conference, TACAS 2010, Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2011, Saarbr&#252;cken, Germany, March 26-April 3, 2011. Proceedings</bibtex:booktitle>
      <bibtex:date-added>2010-12-17 13:30:54 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-12-17 16:54:06 +0100</bibtex:date-modified>
      <bibtex:note>(Accepted for publication)</bibtex:note>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Applying CEGAR to the Petri Net State Equation</bibtex:title>
      <bibtex:year>2011</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="FahlandFJKLVW_2011_dke">
    <bibtex:article>
      <bibtex:abstract>We report on a case study on control-flow analysis of business process models. We checked 735 industrial business process models from financial services, telecommunications, and other domains. We investigated these models for soundness (absence of deadlock and lack of synchronization) using three different approaches: the business process verification tool Woflan, the Petri net model checker LoLA, and a recently developed technique based on SESE decomposition. We evaluate the various techniques used by these approaches in terms of their ability of accelerating the check. Our results show that industrial business process models can be checked in a few milliseconds, which enables tight integration of modeling with control-flow analysis. We also briefly compare the diagnostic information delivered by the different approaches and report some first insights from industrial applications.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Dirk Fahland</bibtex:person>
        <bibtex:person>C&#233;dric Favre</bibtex:person>
        <bibtex:person>Jana Koehler</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Hagen V&#246;lzer</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2010-12-17 13:27:58 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-12-19 11:53:55 +0100</bibtex:date-modified>
      <bibtex:journal>Data Knowl. Eng.</bibtex:journal>
      <bibtex:note>(Accepted for publication in December 2010)</bibtex:note>
      <bibtex:title>Analysis on Demand: Instantaneous Soundness Checking of Industrial Business Process Models</bibtex:title>
      <bibtex:year>2011</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2010_phd">
    <bibtex:phdthesis>
      <bibtex:abstract>Service-oriented computing (SOC) is an emerging paradigm of system design and aims at replacing complex monolithic systems by a composition of interacting systems, called services. A service encapsulates self-contained functionality and offers it over a well-defined, standardized interface.  This modularization may reduce both complexity and cost. At the same time, new challenges arise with the distributed execution of services in dynamic compositions. In particular, the correctness of a service composition depends not only on the local correctness of each participating service, but also on the correct interaction between them. Unlike in a centralized monolithic system, services may change and are not completely controlled by a single party.  We study correctness of services and their composition and investigate how the design of correct service compositions can be systematically supported. We thereby focus on the communication protocol of the service and approach these questions using formal methods and make contributions to three scenarios of SOC.  The correctness of a service composition depends on the correctness of the participating services. To this end, we (1) study correctness criteria which can be expressed and checked with respect to a single service. We validate services against behavioral specifications and verify their satisfaction in any possible service composition. In case a service is incorrect, we provide diagnostic information to locate and fix the error.  In case every participating service of a service composition is correct, their interaction can still introduce problems. We (2) automatically verify correctness of service compositions. We further support the design phase of service compositions and present algorithms to automatically complete partially specified compositions and to fix incorrect compositions.  A service composition can also be derived from a specification, called choreography. A choreography globally specifies the observable behavior of a composition. We (3) present an algorithm to deduce local service descriptions from the choreography which - by design - conforms to the specification.  All results have been expressed in terms of a unifying formal model. This not only allows to formally prove correctness, but also makes results independent of the specifics of concrete service description languages. Furthermore, all presented algorithms have been prototypically implemented and validated in experiments based on case studies involving industrial services.</bibtex:abstract>
      <bibtex:address>Rostock, Germany / Eindhoven, The Netherlands</bibtex:address>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:date-added>2010-11-03 12:55:56 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-11-03 13:07:18 +0100</bibtex:date-modified>
      <bibtex:month>September</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2010_phd.pdf</bibtex:pdf>
      <bibtex:school>Universit&#228;t Rostock / Technische Universiteit Eindhoven</bibtex:school>
      <bibtex:title>Correctness of services and their composition</bibtex:title>
      <bibtex:year>2010</bibtex:year>
    </bibtex:phdthesis>
  </bibtex:entry>

  <bibtex:entry id="LohmannMS_2010_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>This paper introduces the Petri Net API, a C++ library of Petri net-related functions. The Petri Net API is currently used in more than a dozen Petri net tools, ranging from compilers to verification tools.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Stephan Mennicke</bibtex:person>
        <bibtex:person>Christian Sura</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 17th German Workshop on Algorithms and Tools for Petri Nets (AWPN 2010), Cottbus, Germany, October 7-8, 2010</bibtex:booktitle>
      <bibtex:date-added>2010-09-10 23:32:30 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-06 23:17:25 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Martin Schwarick</bibtex:person>
        <bibtex:person>Monika Heiner</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>148-155</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannMS_2010_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>The Petri Net API: A collection of Petri net-related functions</bibtex:title>
      <bibtex:volume>643</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Kaschner_2010_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Whendevelopinganexistingservicefurther,newfunctionalitiescan be added or existing functionalities can be changed or removed. Consequently, also test cases have to be added to or removed from the existing test suite. In this paper, we present an idea how a test suite can be adjusted to these changes. Thereby, we focus on modifications concerning the communication behavior of a service.</bibtex:abstract>
      <bibtex:author>Kathrin Kaschner</bibtex:author>
      <bibtex:booktitle>Proceedings of the 17th German Workshop on Algorithms and Tools for Petri Nets (AWPN 2010), Cottbus, Germany, October 7-8, 2010</bibtex:booktitle>
      <bibtex:date-added>2010-09-10 23:32:02 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-06 23:17:36 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Martin Schwarick</bibtex:person>
        <bibtex:person>Monika Heiner</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>142-147</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Kaschner_2010_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Managing test suites for services</bibtex:title>
      <bibtex:volume>643</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="GierdsL_2010_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Service-oriented computing aims at composing independent services to achieve a common goal. Although very flexible, this indepen- dence may result in incompatibilities. A pragmatic approach to overcome such incompatibilities offer adapters. An adapter is again a service which reorganizes the message exchange in a service composition to avoid in- compatibilities.  Given a set of domain-specific message transformation rules, adapters can be generated fully automatically. This paper presents a graphical user interface to support the systematic design of these transformation rules.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Christian Gierds</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 17th German Workshop on Algorithms and Tools for Petri Nets (AWPN 2010), Cottbus, Germany, October 7-8, 2010</bibtex:booktitle>
      <bibtex:date-added>2010-09-10 23:31:29 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-06 23:18:14 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Martin Schwarick</bibtex:person>
        <bibtex:person>Monika Heiner</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>136-141</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/GierdsL_2010_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>A graphical user interface for service adaptation</bibtex:title>
      <bibtex:volume>643</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Wolf_2010_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>We sketch an undecidability result concerning the decentralized controllability problem of open nets and discuss some consequences.</bibtex:abstract>
      <bibtex:author>Karsten Wolf</bibtex:author>
      <bibtex:booktitle>Proceedings of the 17th German Workshop on Algorithms and Tools for Petri Nets (AWPN 2010), Cottbus, Germany, October 7-8, 2010</bibtex:booktitle>
      <bibtex:date-added>2010-09-10 23:31:02 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-06 23:17:01 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Martin Schwarick</bibtex:person>
        <bibtex:person>Monika Heiner</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>124-129</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Wolf_2010_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Decidability Issues for Decentralized Controllability of Open Nets</bibtex:title>
      <bibtex:volume>643</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="WimmelW_2010_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Exploitation of the structure of a Petri net is widely believed to be an inefficient approach to solving the reachability problem. We show that structure analysis can be combined with integer programming and partial order reduction to obtain a fast reachability solver.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Harro Wimmel</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 17th German Workshop on Algorithms and Tools for Petri Nets (AWPN 2010), Cottbus, Germany, October 7-8, 2010</bibtex:booktitle>
      <bibtex:date-added>2010-09-10 23:30:32 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-06 23:17:46 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Martin Schwarick</bibtex:person>
        <bibtex:person>Monika Heiner</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>118-123</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/WimmelW_2010_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Reachability Analysis via Net Structure</bibtex:title>
      <bibtex:volume>643</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Wimmel_2010_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Since the state space explosion is a common problem when analysing Petri nets several ways to deal with this problem leading to a smaller - reduced - state space have been invented. One of them is finding symmetries, an equivalence relation on places and transitions of a Petri net, and only evaluating one object from each equivalence class. All other objects in the same class are then known to yield the same information. Finding symmetries by brute force is known to be expensive, it is even unclear if it can be done in polynomial time due to the inclusion of the graph isomorphism problem. While a first few symmetries need to be found by brute force, later ones might also be generated. We show how to generate new symmetries from known ones efficiently, how to tell if the brute force algorithm enters a branch not containing symmetries, and how to reduce the symmetries themselves to move towards orthogonality.</bibtex:abstract>
      <bibtex:author>Harro Wimmel</bibtex:author>
      <bibtex:booktitle>Proceedings of the 17th German Workshop on Algorithms and Tools for Petri Nets (AWPN 2010), Cottbus, Germany, October 7-8, 2010</bibtex:booktitle>
      <bibtex:date-added>2010-09-10 23:29:39 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-06 23:17:11 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Martin Schwarick</bibtex:person>
        <bibtex:person>Monika Heiner</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>112-117</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Wimmel_2010_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Optimised Calculation of Symmetries for State Space Reduction</bibtex:title>
      <bibtex:volume>643</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannW_2010_icsoc">
    <bibtex:inproceedings>
      <bibtex:abstract>Classical notations for service collaborations focus either on the control flow of participating services (interacting models) or the order in which messages are exchanged (interaction models). None of these approaches emphasizes the evolution of data involved in the collaboration. In contrast, artifact-centric models pursue the converse strategy and begin with a specification of data objects.  This paper extends existing concepts for artifact-centric business process models with the concepts of agents and locations. By making explicit who is accessing an artifact and where the artifact is located, we are able to automatically generate an interaction model that can serve as a contract between the agents and by construction makes sure that specified global goal states on the involved artifacts are reached.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>8th International Conference on Service Oriented Computing, ICSOC 2010, December 7-10, 2010, San Francisco, California, USA, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2010-07-22 12:26:00 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-12-19 12:39:05 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-17358-5_3</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Paul Maglio</bibtex:person>
        <bibtex:person>Mathias Weske</bibtex:person>
        <bibtex:person>Jian Yang</bibtex:person>
        <bibtex:person>Marcelo Fantinato</bibtex:person>
      </bibtex:editor>
      <bibtex:month>December</bibtex:month>
      <bibtex:pages>32-46</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannW_2010_icsoc.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Artifact-Centric Choreographies</bibtex:title>
      <bibtex:volume>6470</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="OaneaSW_2010_icsoc">
    <bibtex:inproceedings>
      <bibtex:abstract>A request to a service registry must be answered with a service that fits in several regards, including semantic compatibility, non-functional compatibility, and interface compatibility. In the case of stateful services, there is the additional need to check behavioral (i.e. protocol) compatibility. This paper is concerned with the latter aspect. An apparant approach to establishing behavioral compatibility would be to apply the well-known technology of model checking to a composition of the provided service and the requesting service. However, this procedure must potentially be repeated for all provided services in the registry which may unprohibitively slow down the response time of the broker. Hence, we propose to insert a preprocessing step. It consists of computing an abstraction of the behavior for each published service that we call communication fingerprint. Upon request, we use the fingerprint to rule out as many as possible incompatible services thus reducing the number of candidates that need to be model checked for behavioral compatibility. The technique is based on linear programming and is thus extremely efficient. We validate our approach on a large set of services that we cut out of real world business processes.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Jan S&#252;rmeli</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>8th International Conference on Service Oriented Computing, ICSOC 2010, December 7-10, 2010, San Francisco, California, USA, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2010-07-21 20:01:03 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-12-19 12:40:00 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-17358-5_46</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Paul Maglio</bibtex:person>
        <bibtex:person>Mathias Weske</bibtex:person>
        <bibtex:person>Jian Yang</bibtex:person>
        <bibtex:person>Marcelo Fantinato</bibtex:person>
      </bibtex:editor>
      <bibtex:month>December</bibtex:month>
      <bibtex:pages>612-618</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Service Discovery Using Communication Fingerprints</bibtex:title>
      <bibtex:volume>6470</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="GierdsMW_2010_tcs">
    <bibtex:article>
      <bibtex:abstract>Service-oriented computing aims to create complex systems by composing less-complex systems, called services. Since services can be developed independently, the integration of services requires an adaptation mechanism for bridging any incompatibilities. Behavioral adapters aim to adjust the communication between some services to be composed in order to establish proper interaction between them. We present a novel approach for specifying such adapters, based on domain-specific transformation rules that reflect the elementary operations that adapters can perform. We also present a novel way to synthesize complex adapters that adhere to these rules, viz., by consistently separating data and control, and by using existing controller-synthesis algorithms. Our approach has been implemented, and we discuss some example applications, including real business processes in WS-BPEL.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Christian Gierds</bibtex:person>
        <bibtex:person>Arjan J. Mooij</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2010-07-12 19:39:38 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-09-25 22:20:16 +0200</bibtex:date-modified>
      <bibtex:journal>IEEE T. Services Computing</bibtex:journal>
      <bibtex:note>(Accepted for publication in July 2010)</bibtex:note>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/GierdsMW_2010_tcs.pdf</bibtex:pdf>
      <bibtex:title>Reducing adapter synthesis to controller synthesis</bibtex:title>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/GierdsMW_2010_tcs.pdf</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2010_bpmdemo">
    <bibtex:inproceedings>
      <bibtex:abstract>In many fields of science, the quality and applicability of presented approaches heavily relies on experimental results. At the same time, such experiments are only described briefly and are often boiled down to a single diagram or table. To maintain high scientific standards, experiments need to be transparent and repeatable. This not only provides a deeper understanding in the used tools, but also facilitates the improvement and comparison of approaches.  This paper introduces service-technology.org/live, a Web site which allows to replay experiments in a Web browser. This gives colleagues and reviewers the possibility to get detailed information on the experimental setup without the need of actually installing tools. The Web site further offers the used tools and the input data for download together with information on how to repeat the experiments locally.</bibtex:abstract>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:booktitle>Proceedings of the Business Process Management 2010 Demonstration Track (BPMDemos-2010), Hoboken, NJ, USA, September 14-16, 2010</bibtex:booktitle>
      <bibtex:date-added>2010-07-01 09:57:31 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-01 22:23:35 +0200</bibtex:date-modified>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:editor>Marcello La Rosa</bibtex:editor>
      <bibtex:month>July</bibtex:month>
      <bibtex:pages>64-68</bibtex:pages>
      <bibtex:pdf>http://CEUR-WS.org/Vol-615/paper23.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>service-technology.org/live - Replaying tool experiments in a Web browser</bibtex:title>
      <bibtex:volume>615</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannW_2010_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>During the previous years,we presented several results concerned with various issues related to the correctness of models for business processes and services (i. e., inter-organizational business processes). For most of the results, we presented tools and experimental evidence for the computational capabilities of our approaches. Over the time, the implementations grew to a consistent and interoperable family of tools, which we call service-technology.org.  This paper aims at presenting this tool family service-technology.org as a whole. We briefly sketch the underlying formalisms and covered problem settings and describe the functionality of the participating tools. Furthermore, we discuss several lessons that we learned from the development and use of this tool family. We believe that the lessons are interesting for other academic tool development.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Business Process Management, 8th International Conference, BPM 2010, Hoboken, NJ, USA, September 14-16, 2010, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2010-05-16 10:11:11 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-01 22:22:48 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-15618-2_7</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Rick Hull</bibtex:person>
        <bibtex:person>Jan Mendling</bibtex:person>
        <bibtex:person>Stefan Tai</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>61-77</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannW_2010_bpm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>How to Implement a Theory of Correctness in the Area of Business Processes and Services</bibtex:title>
      <bibtex:volume>6336</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-15618-2_7</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="AalstLLX_2010_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>A configurable process model describes a family of similar process models in a given domain. Such a model can be configured to obtain a specific process model that is subsequently used to handle individual cases, for instance, to process customer orders. Process configuration is notoriously difficult as there may be all kinds of interdependencies between configuration decisions. In fact, an incorrect configuration may lead to behavioral issues such as deadlocks and livelocks. To address this problem, we present a new verification approach inspired by the "operating guidelines" used for partner synthesis. We view the configuration process as an external service, and compute a characterization of all such services which meet particular requirements via the notion of configuration guideline. As a result, we can characterize all feasible configurations (i. e., configurations without behavioral problems) at design time, instead of repeatedly checking each individual configuration while configuring a process model.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Wil M. P. van der Aalst</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Marcello La Rosa</bibtex:person>
        <bibtex:person>Jingxin Xu</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Business Process Management, 8th International Conference, BPM 2010, Hoboken, NJ, USA, September 14-16, 2010, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2010-05-16 10:07:32 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-03 21:47:17 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-15618-2_9</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Rick Hull</bibtex:person>
        <bibtex:person>Jan Mendling</bibtex:person>
        <bibtex:person>Stefan Tai</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>95-111</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/AalstLLX_2010_bpm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Correctness Ensuring Process Configuration: An Approach Based on Partner Synthesis</bibtex:title>
      <bibtex:volume>6336</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/0.1007/978-3-642-15618-2_9</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="WolfSWOD_2010_fi">
    <bibtex:article>
      <bibtex:abstract>A big issue in the paradigm of Service Oriented Architectures (SOA) is the service discovery. Enterprises publish their services via the Internet. These published services can then be automatically found and used by other services, meaning, the services are composed. A fundamental property of a service composition is weak termination which guarantees the absence of both deadlocks and livelocks. In principle, weak termination can be verified by inspecting the state space of the composition of (public views of) the involved services.  We propose a methodology to build that state space from pre-computed fragments which are computed upon publishing a service. That way, we shift computation effort from the resource critical 'find' phase to the less critical 'publish' phase. Interestingly, our setting enables state space reduction methods that are intrinsically different from traditional state space reductions. We further show the positive impact of our approach to the computational effort of service discovery.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Karsten Wolf</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Daniela Weinberg</bibtex:person>
        <bibtex:person>Janine Ott</bibtex:person>
        <bibtex:person>Robert Danitz</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2010-04-28 13:23:43 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-04-28 13:25:26 +0200</bibtex:date-modified>
      <bibtex:journal>Fundam. Inform.</bibtex:journal>
      <bibtex:note>(Accepted for publication in April 2010)</bibtex:note>
      <bibtex:title>Guaranteeing Weak Termination in Service Discovery</bibtex:title>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1109/ACSD.2009.16</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Lehmann_2010_sa">
    <bibtex:mastersthesis>
      <bibtex:abstract>In dem Paper 'Petrifying Operating Guidelines for Services' [LW10b] wurde eine implizite Formeldarstellung von Bedienungsanleitungen (englisch Operating Guidelines) vorgestellt. Eine Bedienungsanleitung zu einem Service (zum Beispiel Buchen eines Fluges) beschreibt eine Menge von Services (zum Beispiel Reiseb&#252;ros), die diesen nutzen ko&#246;nnen. Zu dieser neuen Repra&#228;sentation von Bedienungsanleitungen wurden grob Algorithmen skizziert, zum Beispiel f&#252;r das Matching. Ein Service C passt (matcht) zu einer Bedienungsanleitung, wenn C zu der Bedienungsanleitung geh&#246;rt (Element der Menge ist).  In dieser Arbeit soll es darum gehen, f&#252;r die Aufgaben Matching, Accordance (ist eine Bedienungsanleitung Teilmenge einer anderen) und \"Aquivalenz (beide Bedienungsanleitungen/Mengen sind identisch) effiziente Algorithmen zu finden und diese zu implementieren.</bibtex:abstract>
      <bibtex:address>Rostock, Germany</bibtex:address>
      <bibtex:author>Andreas Lehmann</bibtex:author>
      <bibtex:date-added>2010-04-20 17:32:44 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-04-20 17:36:01 +0200</bibtex:date-modified>
      <bibtex:month>March</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lehmann_2010_sa.pdf</bibtex:pdf>
      <bibtex:school>Universit&#228;t Rostock</bibtex:school>
      <bibtex:title>Effiziente Implementierung und Validierung der Basisalgorithmen f&#252;r Bedienungsanleitungen mit impliziter Formelrepr&#228;sentation</bibtex:title>
      <bibtex:type>Studienarbeit</bibtex:type>
      <bibtex:year>2010</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="SuermeliW_2009_zeus">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Jan S&#252;rmeli</bibtex:person>
        <bibtex:person>Daniela Weinberg</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 1st Central-European Workshop on Services and their Composition, ZEUS 2009, Stuttgart, Germany, March 2-3, 2009</bibtex:booktitle>
      <bibtex:date-added>2010-04-12 13:06:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-04 18:56:22 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Oliver Kopp</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>74-80</bibtex:pages>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pdf>http://CEUR-WS.org/Vol-438/paper12.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Creating Message Profiles of Open Nets</bibtex:title>
      <bibtex:volume>438</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://CEUR-WS.org/Vol-438/paper12.pdf</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="MassutheW_2008_awpn">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Daniela Weinberg</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 15th German Workshop on Algorithms and Tools for Petri Nets, AWPN 2008, Rostock, Germany, September 26-27, 2008</bibtex:booktitle>
      <bibtex:date-added>2010-04-12 13:06:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-04-12 13:06:24 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>99-104</bibtex:pages>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pdf>http://CEUR-WS.org/Vol-380/paper16.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Fiona: A Tool to Analyze Interacting Open Nets</bibtex:title>
      <bibtex:volume>380</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Weinberg_2008_wsfm">
    <bibtex:inproceedings>
      <bibtex:abstract>A service is designed to interact with other services. If the service interaction is stateful and asynchronous, the interaction protocol can become quite complex. A service may be able to interact with a lot of possible partner services, one partner or no partner at all. Having no partner surely is not intended by the designer. But the stateful interaction between services can be formalized and thus analyzed at design time.  We present a formalization which is centered around a graph data structure that we call interaction graph, which represents feasible runs of a partner service according to the interaction protocol. As interaction graphs suffer from state explosion, we introduce a set of suitable reduction rules to alleviate the complexity of our approach. As our case studies show we are able to analyze the interaction behavior of a service efficiently.</bibtex:abstract>
      <bibtex:author>Daniela Weinberg</bibtex:author>
      <bibtex:booktitle>Web Services and Formal Methods, Fifth International Workshop, WS-FM 2008, Milan, Italy, September 4-5, 2008, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2010-04-12 13:06:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-04-12 13:06:24 +0200</bibtex:date-modified>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:editor>
        <bibtex:person>Roberto Bruni</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Efficient Controllability Analysis of Open Nets</bibtex:title>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Weinberg2006_hub_tr198">
    <bibtex:techreport>
      <bibtex:abstract>The internet today has grown to be more than just being a basis for exchanging information. It steadily becomes a platform for processing business processes. Many companies distribute their service with the help of web services or integrate other web services into their own workflow. However, before a web service gets published it should be examined well. We will introduce a way of examining the controllability of a web service. That means, we study whether a controller can actually use the functionality provided by the web service. We propose the interaction graph of a web service, that is modelled by an open workflow net. To verify whether such a net is controllable or not it is sufficient to construct a reduced interaction graph. We will define reduction rules that minimize the size of the graph greatly. The analysis using the interaction graph as well as the reduction rules shown in this paper are implemented and have been integrated into an analysis tool kit for web services.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Daniela Weinberg</bibtex:author>
      <bibtex:date-added>2010-04-12 13:06:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-04-12 13:10:41 +0200</bibtex:date-modified>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>February</bibtex:month>
      <bibtex:number>198</bibtex:number>
      <bibtex:pdf>http://www.informatik.hu-berlin.de/top/download/publications/Weinberg2006_hub_tr198.pdf</bibtex:pdf>
      <bibtex:title>Reduction Rules for Interaction Graphs</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2006</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="StuermerWC2005_icse">
    <bibtex:inproceedings>
      <bibtex:abstract>Code generators are increasingly used in an industrial context to translate graphical models into executable code. Since the code is often deployed in safety-related environments, the quality of the code generators is of paramount importance. In this paper, we will present and discuss state-of-the-art techniques for safeguarding automatic code generation applied in model-based development.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Ingo St&#252;rmer</bibtex:person>
        <bibtex:person>Daniela Weinberg</bibtex:person>
        <bibtex:person>Mirko Conrad</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>SEAS '05: Proceedings of the Second International Workshop on Software Engineering for Automotive Systems</bibtex:booktitle>
      <bibtex:date-added>2010-04-12 13:06:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-04-12 13:10:18 +0200</bibtex:date-modified>
      <bibtex:doi>10.1145/1083190.1083192</bibtex:doi>
      <bibtex:pages>1-6</bibtex:pages>
      <bibtex:publisher>ACM Press</bibtex:publisher>
      <bibtex:title>Overview of Existing Safeguarding Techniques for Automatically Generated Code</bibtex:title>
      <bibtex:year>2005</bibtex:year>
      <bibtex:bdsk-url-1>http://doi.acm.org/10.1145/1083190.1083192</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="MartensSWFH2004_hub_tr169">
    <bibtex:techreport>
      <bibtex:abstract>Moderne Systeme der Informationstechnik bestehen zumeist aus einer Vielzahl von Komponenten, die in einem Netzwerk auf verteilten Knoten ausgef&#252;hrt werden. Mit dem Web-Service-Ansatz k&#246;nnen solche Systeme einfacher und flexibler entwickelt werden. Diese Arbeit befasst sich mit der Modellierung, Visualisierung und Analyse von Web Services. Ein Web Service kapselt eine Anwendung und stellt diese &#252;ber ein wohldefiniertes Interface der Au\ssenwelt zur Verf&#252;gung. Im Gegensatz zu fr&#252;heren Ans&#228;tzen dienen eine Reihe zusammenh&#228;ngender Technologien zur Beschreibung eines Web Service. Diese Arbeit besch&#228;ftigt sich vor allem mit der internen Struktur eines Web Service, beschrieben mit Hilfe der Business Process Execution Language for Web Services (BPEL4WS) [ACD+02]. Der Web-Service-Ansatz bietet ein homogenes Konzept von Komponenten und ihrer Komposition ber einem heterogenen Netzwerk. Damit ist die syntaktische Grundlage f&#252;r die Entwicklung verteilter Systeme gelegt. Wesentlich f&#252;r den Erfolg der Web Services ist jedoch die Beantwortung der semantischen Fragestellungen: Passen zwei gegebene Web Services inhaltlich zusammen? Kann in einem verteilten System ein gegebener Web Service durch einen anderen ersetzt werden? Entspricht ein konkreter Web Service einer gegebenen abstrakten Spezifikation? Diese Arbeit befasst sich mit der Beantwortung dieser und weiterer Fragestellungen im Web-Service-Ansatz: In einem ersten Schritt entwickeln wir eine formale Semantik f&#252;r die Sprache BPEL4WS. Darauf aufbauend werden Methoden zur Analyse verteilter Systeme auf die konkreten Anforderungen bertragen und neue Verfahren entwickelt. F&#252;r die Diskussion der Modelle und Eigenschaften entwickeln wir eine intuitive graphische Repr&#228;sentation der Sprache BPEL4WS. Das Ziel der Forschungen ist die Umsetzung der Methoden in einem integrierten Entwicklungswerkzeug f&#252;r BPEL4WS. Die vorliegende Arbeit beschreibt die ersten Ergebnisse in einem laufenden Projekt.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Axel Martens</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Daniela Weinberg</bibtex:person>
        <bibtex:person>Dirk Fahland</bibtex:person>
        <bibtex:person>Thomas Heidinger</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2010-04-12 13:06:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-04-12 13:11:23 +0200</bibtex:date-modified>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>July</bibtex:month>
      <bibtex:number>169</bibtex:number>
      <bibtex:pdf>http://www.informatik.hu-berlin.de/top/download/publications/MartensSWFH2004_hub_tr169.pdf</bibtex:pdf>
      <bibtex:title>Business Process Execution Language for Web Services - Semantik, Analyse und Visualisierung</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2004</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Weinberg2004_da">
    <bibtex:mastersthesis>
      <bibtex:abstract>Das heutige Internet w&#228;chst zunehmend von einer Plattform als Informationsquelle hin zu einer Basis f&#252;r die Abwicklung von Gesch&#228;ftsprozessen. Zahlreiche Firmen stellen ihre Dienste bereits mit Hilfe von Web-Services zur Verf&#252;gung oder integrieren andere bereitgestellte Web-Services in ihren Gesch&#228;ftsablauf. Nach Studien einiger Forschungsinstitute geht der Trend in der heutigen IT-Branche stark zum Einsatz solcher verteilter Gesch&#228;ftsprozesse. Es werden Schlagworte wie out-tasking, plug-and-play und Lego-Wirtschaft gepr&#228;gt. Bevor ein Gesch&#228;ftsprozess in Form eines Web-Services jedoch ver&#246;ffentlicht wird, sollte dieser geeignet untersucht werden. Wir werden uns in dieser Arbeit diesem Thema mit Hilfe von Petri-Netz-Modulen n&#228;hern. Sie modellieren gerade die interne Struktur von Gesch&#228;ftsprozessen und erm&#246;glichen es, den Prozess geeignet zu analysieren. Uns interessiert bei der Analyse, ob die Funktionalit&#228;t, die ein Web-Service bereitstellen soll, auch wirklich genutzt werden kann. Wir sprechen in diesem Zusammenhang von Bedienbarkeit. F&#252;r die Analyse definieren wir den Interaktionsgraphen eines Workflow-Moduls, welcher die Zust&#228;nde des Moduls und dessen Interaktion mit einer Umgebung veranschaulicht. Auf dieser Grundlage k&#246;nnen wir dann eine Bedienstrategie definieren, durch die das Modul bedient werden kann. Das hei¼t, wenn eine Umgebung das Modul so bedienen kann, dass dieses ordentlich terminiert, finden wir eine Bedienstrategie in dem Interaktionsgraphen des Moduls. Dar&#252;ber hinaus bieten die Graphen dem Modellierer die M&#246;glichkeit, einen Blick auf die Abl&#228;ufe seines Moduls zu werfen und genau erkennen zu k&#246;nnen, welche Zust&#228;nde des Moduls bei welcher Interaktion mit der Umgebung eingenommen werden. Auf Grundlage dieser Analyse kann der Modellierer seinen Prozess &#252;berarbeiten, anpassen etc. Um die Bedienbarkeit der Workflow-Module durch den Interaktionsgraphen zu verifizieren, reicht es aus, einen reduzierten Graphen zu konstruieren. Wir werden Reduktionsregeln definieren, die den Nachweis der Bedienbarkeit in den reduzierten Graphen erhalten. Die in dieser Arbeit entwickelten Algorithmen sind implementiert und in Wombat4ws, einem Analysewerkzeug f&#252;r Web-Services, integriert worden.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Daniela Weinberg</bibtex:author>
      <bibtex:date-added>2010-04-12 13:06:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-04-12 13:09:43 +0200</bibtex:date-modified>
      <bibtex:month>October</bibtex:month>
      <bibtex:pdf>http://www.informatik.hu-berlin.de/top/download/publications/Weinberg2004_da.pdf</bibtex:pdf>
      <bibtex:school>Humboldt-Universit&#228;t zu Berlin</bibtex:school>
      <bibtex:title>Analyse der Bedienbarkeit</bibtex:title>
      <bibtex:type>Diplomarbeit</bibtex:type>
      <bibtex:year>2004</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="Weinberg2003_sa">
    <bibtex:mastersthesis>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Daniela Weinberg</bibtex:author>
      <bibtex:date-added>2010-04-12 13:06:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-04-12 13:07:23 +0200</bibtex:date-modified>
      <bibtex:month>August</bibtex:month>
      <bibtex:pdf>http://www.informatik.hu-berlin.de/top/download/publications/Weinberg2003_sa.pdf</bibtex:pdf>
      <bibtex:school>Humboldt-Universit&#228;t zu Berlin</bibtex:school>
      <bibtex:title>Graphische Repr&#228;sentation von BPEL</bibtex:title>
      <bibtex:type>Studienarbeit</bibtex:type>
      <bibtex:year>2003</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="HabermehlMW_2010_icalp">
    <bibtex:inproceedings>
      <bibtex:abstract>We show that the downward-closure of a Petri Net language is effectively computable. This is mainly done by using the notions defined for showing decidability of the reachability problem of Petri Nets. In particular, we rely on Lambert's construction of marked graph transition sequences &#x2014; special instances of standard coverability graphs that allow us to extract constructively the simple regular expression corresponding to the downward-closure. We also consider the remaining language types for Petri nets common in the literature. For all of them, we provide algorithms that compute the simple regular expressions of their downward-closure.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Peter Habermehl</bibtex:person>
        <bibtex:person>Roland Meyer</bibtex:person>
        <bibtex:person>Harro Wimmel</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Automata, Languages and Programming, 37th International Colloquium, ICALP 2010, Bordeaux, France, July 5-10, 2010, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2010-04-12 12:54:10 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-10-04 18:53:35 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-14162-1_39</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Paul Spirakis</bibtex:person>
        <bibtex:person>Samson Abramsky</bibtex:person>
        <bibtex:person>Friedhelm Meyer auf der Heide</bibtex:person>
      </bibtex:editor>
      <bibtex:month>July</bibtex:month>
      <bibtex:pages>466-477</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>The Downward-Closure of Petri net languages</bibtex:title>
      <bibtex:volume>6199</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-14162-1_39</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Kaschner_2010_zeus">
    <bibtex:inproceedings>
      <bibtex:abstract>An important property of interacting services is their observable behavior. There exist different formalisms to describe service behavior (e.g. BPEL, BPMN, Petri nets, automata). Based on an extension of automata, in previous work we proposed a compact representation to characterize the behavior of sets of services and introduced a set algebra on it. In this paper, we present with Safira a tool which implements the fundamental set operations for such set of services.</bibtex:abstract>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:author>Kathrin Kaschner</bibtex:author>
      <bibtex:booktitle>Proceedings of the 2nd Central-European Workshop on Services and their Composition, ZEUS 2010, Berlin, Germany, February 26-27, 2010</bibtex:booktitle>
      <bibtex:date-added>2010-03-22 13:52:22 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-03-29 23:10:52 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Christian Gierds</bibtex:person>
        <bibtex:person>Jan S&#252;rmeli</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>49-56</bibtex:pages>
      <bibtex:pdf>http://CEUR-WS.org/Vol-563/paper6.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Safira: implementing set algebra for service behaviour</bibtex:title>
      <bibtex:volume>563</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="AalstLLX_2010_tr">
    <bibtex:techreport>
      <bibtex:abstract>A configurable process model describes a family of similar process models in a given domain. Such a model can be configured to obtain a specific process model that is subsequently used to handle individual cases, for instance, to process customer orders. Process configuration is notoriously difficult as there may be all kinds of interdependencies between configuration decisions. In fact, an incorrect configuration may lead to behavioral issues such as deadlocks and livelocks. To address this problem, we present a new verification approach inspired by the "operating guidelines" used for partner synthesis. We view the configuration process as an external service, and compute a characterization of all such services which meet particular requirements via the notion of configuration guideline. As a result, we can characterize all feasible configurations (i. e., configurations without behavioral problems) at design time, instead of repeatedly checking each individual configuration while configuring a process model.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Wil M. P. van der Aalst</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Marcello La Rosa</bibtex:person>
        <bibtex:person>Jingxin Xu</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2010-03-11 19:27:23 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-03-11 19:35:43 +0100</bibtex:date-modified>
      <bibtex:institution>BPMcenter.org</bibtex:institution>
      <bibtex:month>March</bibtex:month>
      <bibtex:number>BPM-10-02</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/AalstLLX_2010_tr.pdf</bibtex:pdf>
      <bibtex:title>Correctness Ensuring Process Configuration: An Approach Based on Partner Synthesis (extended version)</bibtex:title>
      <bibtex:type>BPM Center Report</bibtex:type>
      <bibtex:year>2010</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="OaneaWW_2010_atpn">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Harro Wimmel</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>31st International Conference on Applications and Theory of Petri Nets and Other Models of Concurrency, PETRI NETS 2010, Braga, Portugal, June 21-25, 2010, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2010-03-01 10:27:44 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-06-28 18:37:33 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-13675-7_16</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Johan Lilius</bibtex:person>
        <bibtex:person>Wojciech Penczek</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>267-286</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>New Algorithms for Deciding the Siphon-Trap Property</bibtex:title>
      <bibtex:volume>6128</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-13675-7_16</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannW_2010_atpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Service-oriented computing proposes services as building blocks which can be composed to complex systems. To reason about the correctness of a service, its communication protocol needs to be analyzed. A fundamental correctness criterion for a service is the existence of a partner service, formalized in the notion of controllability.  In this paper, we introduce Wendy, a Petri net-based tool to synthesize partner services. These partners are valuable artifacts to support the design, validation, verification, and adaptation of services. Furthermore, Wendy can calculate an operating guideline, a characterization of the set of all partners of a service. Operating guidelines can be used in many application scenarios from service brokerage to test case generation. Case studies show that Wendy efficiently performs on industrial service models.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Daniela Weinberg</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>31st International Conference on Applications and Theory of Petri Nets and Other Models of Concurrency, PETRI NETS 2010, Braga, Portugal, June 21-25, 2010, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2010-03-01 10:25:49 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-06-28 18:36:20 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-13675-7_18</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Johan Lilius</bibtex:person>
        <bibtex:person>Wojciech Penczek</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>297-307</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannW_2010_atpn.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Wendy: A tool to synthesize partners for services</bibtex:title>
      <bibtex:volume>6128</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-13675-7_18</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2010_zeus">
    <bibtex:inproceedings>
      <bibtex:abstract>Communication is an essential aspect of services. Services do not only realize simple request-response scenarios, but increasingly implement complex and stateful communication protocols. Such a protocol specifies the the order in which messages are sent and received by a service and is an essential part of a service description. Services are usually not executed in isolation, but as a collaboration that is composed of several services. The behavior of such a collaboration is not only determined by the communication protocol of each participating service, but also by the way messages are exchanged. A communication model specifies the properties of the message channels between the service and defines the way how messages are sent and received. This paper studies and classifies several dimensions of communication models and describes their impact to service compositions.</bibtex:abstract>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:booktitle>Proceedings of the 2nd Central-European Workshop on Services and their Composition, ZEUS 2010, Berlin, Germany, February 26-27, 2010</bibtex:booktitle>
      <bibtex:date-added>2010-02-14 18:04:19 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-03-29 23:12:22 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Christian Gierds</bibtex:person>
        <bibtex:person>Jan S&#252;rmeli</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>9-16</bibtex:pages>
      <bibtex:pdf>http://CEUR-WS.org/Vol-563/paper1.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Communication Models for Services</bibtex:title>
      <bibtex:volume>563</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannW_2010_fi">
    <bibtex:article>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2010-01-28 23:50:21 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-02-14 18:04:14 +0100</bibtex:date-modified>
      <bibtex:journal>Fundam. Inform.</bibtex:journal>
      <bibtex:note>(Accepted for publication in January 2010)</bibtex:note>
      <bibtex:title>Compact Representations and Efficient Algorithms for Operating Guidelines</bibtex:title>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1109/ACSD.2009.11</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="MennickeOW_2009_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>We study the decomposition of an arbitrary Petri net into open nets. This means that shared places can be seen as message channels between components. We show that there exists a unique decomposition into atomic components which can be efficiently computed. We further show that every composition of components yields a component and that every component can be built from atomic components. Finally, we briefly discuss potential applications.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Stephan Mennicke</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>16th German Workshop on Algorithms and Tools for Petri Nets, AWPN 2009, Karlsruhe, Germany, September 25, 2009, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2009-09-16 10:11:05 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-09-28 08:52:29 +0200</bibtex:date-modified>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:editor>
        <bibtex:person>Thomas Freytag</bibtex:person>
        <bibtex:person>Andreas Eckleder</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>29-34</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/MennickeOW_2009_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Decomposition into open nets</bibtex:title>
      <bibtex:volume>501</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Wimmel_2008_book">
    <bibtex:book>
      <bibtex:author>Harro Wimmel</bibtex:author>
      <bibtex:date-added>2009-08-29 09:38:18 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 09:39:45 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-85471-5</bibtex:doi>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:title>Entscheidbarkeit bei Petri Netzen - \"Uberblick und Kompendium</bibtex:title>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-85471-5</bibtex:bdsk-url-1>
    </bibtex:book>
  </bibtex:entry>

  <bibtex:entry id="BestDW_2007_fi">
    <bibtex:article>
      <bibtex:abstract>This paper discusses the following results: that bounded Petri nets can be transformed into pomset-equivalent safe nets; that boundedmarked graphs can be transformed into step-language-equivalent safe marked graphs; that safe labelled marked graphs can be transformed into tau -free safe labelled marked graphs; and that marked graphs can be separated. The paper also lists some open problems that have arisen in this context.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Eike Best</bibtex:person>
        <bibtex:person>Philippe Darondeau</bibtex:person>
        <bibtex:person>Harro Wimmel</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2009-08-29 09:28:53 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 09:32:04 +0200</bibtex:date-modified>
      <bibtex:journal>Fundam. Inform.</bibtex:journal>
      <bibtex:number>1-3</bibtex:number>
      <bibtex:pages>75-90</bibtex:pages>
      <bibtex:title>Making Petri Nets Safe and Free of Internal Transitions</bibtex:title>
      <bibtex:url>http://iospress.metapress.com/content/8453256536uj00l1/</bibtex:url>
      <bibtex:volume>80</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://iospress.metapress.com/content/8453256536uj00l1/</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Wimmel_2004_icatpna">
    <bibtex:inproceedings>
      <bibtex:abstract>Based on the algorithms to decide reachability for Petri nets, we show how to decide whether the number of markings reachable on paths between two given markings is finite or infinite.</bibtex:abstract>
      <bibtex:author>Harro Wimmel</bibtex:author>
      <bibtex:booktitle>Applications and Theory of Petri Nets 2004, 25th International Conference, ICATPN 2004, Bologna, Italy, June 21-25, 2004, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2009-08-29 09:27:26 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 09:33:46 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/b98283</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Jordi Cortadella</bibtex:person>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>426-434</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Infinity of Intermediate States Is Decidable for Petri Nets</bibtex:title>
      <bibtex:volume>3099</bibtex:volume>
      <bibtex:year>2004</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/b98283</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Wimmel_2004_icatpnb">
    <bibtex:inproceedings>
      <bibtex:abstract>A safe labelled marked graph (Petri Net) with internal transitions can be transformed into a pomset-equivalent safe labelled marked graph without internal transitions.</bibtex:abstract>
      <bibtex:author>Harro Wimmel</bibtex:author>
      <bibtex:booktitle>Applications and Theory of Petri Nets 2004, 25th International Conference, ICATPN 2004, Bologna, Italy, June 21-25, 2004, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2009-08-29 09:25:35 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 09:33:30 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/b98283</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Jordi Cortadella</bibtex:person>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>411-425</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Eliminating Internal Behaviour in Petri Nets</bibtex:title>
      <bibtex:volume>3099</bibtex:volume>
      <bibtex:year>2004</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/b98283</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="DarondeauW_2003_tr">
    <bibtex:techreport>
      <bibtex:abstract>We show that every finite and bounded marked graph or T-system has a 1-safe labelled version with an identical language.</bibtex:abstract>
      <bibtex:address>Rennes, France</bibtex:address>
      <bibtex:author>
        <bibtex:person>Philippe Darondeau</bibtex:person>
        <bibtex:person>Harro Wimmel</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2009-08-29 09:22:39 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 09:36:45 +0200</bibtex:date-modified>
      <bibtex:institution>INRIA</bibtex:institution>
      <bibtex:month>January</bibtex:month>
      <bibtex:number>INRIA-RR-4708</bibtex:number>
      <bibtex:title>From bounded T-systems to 1-safe T-systems up to language equivalence</bibtex:title>
      <bibtex:type>Technical Report</bibtex:type>
      <bibtex:url>http://www.inria.fr/rrrt/rr-4708.html</bibtex:url>
      <bibtex:year>2003</bibtex:year>
      <bibtex:bdsk-url-1>http://www.inria.fr/rrrt/rr-4708.html</bibtex:bdsk-url-1>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="PrieseW_2002_book">
    <bibtex:book>
      <bibtex:author>
        <bibtex:person>Lutz Priese</bibtex:person>
        <bibtex:person>Harro Wimmel</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2009-08-29 09:21:01 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 09:40:49 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-76971-2</bibtex:doi>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:title>Theoretische Informatik: Petri-Netze</bibtex:title>
      <bibtex:year>2002</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-76971-2</bibtex:bdsk-url-1>
    </bibtex:book>
  </bibtex:entry>

  <bibtex:entry id="BestW_2000_icatpn">
    <bibtex:inproceedings>
      <bibtex:abstract>It is a well-known fact that for every k-safe Petri net, i.e. a Petri net in which no place contains more than k in N tokens under any reachable marking, there is a 1-safe Petri net with the same interleaving behaviour. Indeed these types of Petri nets generate regular languages. In this paper, we show that this equivalence of k-safe and 1-safe Petri nets holds also for their pomset languages, a true-concurrency semantics.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Eike Best</bibtex:person>
        <bibtex:person>Harro Wimmel</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Application and Theory of Petri Nets 2000: 21st International Conference, ICATPN 2000, Aarhus, Denmark, June 2000. Proceedings</bibtex:booktitle>
      <bibtex:date-added>2009-08-29 09:17:46 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 09:34:12 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-44988-4_6</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Mogens Nielsen</bibtex:person>
        <bibtex:person>Dan Simpson</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>63-82</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Reducing k-Safe Petri Nets to Pomset-Equivalent 1-Safe Petri Nets</bibtex:title>
      <bibtex:volume>1825</bibtex:volume>
      <bibtex:year>2000</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/3-540-44988-4_6</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Wimmel_2000_phd">
    <bibtex:phdthesis>
      <bibtex:abstract>Diese Arbeit besch&#228;ftigt sich mit der Semantik von (P/T) Petri-Netzen. Es werden dabei drei verschiedene Varianten f&#252;r die Semantik betrachtet: Erstens die Sprache eines Petri-Netzes, bestehend aus Feuersequenzen (Worten) von Transitionen bzw. deren Labelings, zweitens die Stepsprache, bestehend aus Stepworten, in denen Buchstaben, d.h. Feuerungen von Transitionen, nebenl&#228;ufig sein k&#246;nnen, und drittens die Pomsetsprache, in deren Pomsets Informationen zur Kausalit&#228;t enthalten sind. F&#252;r verschiedene Klassen von Petri-Netzen, so etwa die sicheren und beschr&#228;nkten Netze, S-Systeme (markierte Graphen) und die Klasse der allgemeinen Petri-Netze (ohne Restriktionen) geben wir algebraische Charakterisierungen &#252;ber Abschlusseigenschaften f&#252;r die verschiedenen zugeh&#246;rigen Sprachklassen an, die jeweils f&#252;r alle drei Typen von Sprachen uniform sind. Wir unterscheiden weiter zwischen Klassen von Petri-Netzen mit und ohne (unsichtbare) T-Transitionen und mit oder ohne Finalmarkierungen, soweit dies sinnvoll scheint. F&#252;r die Charakterisierungen &#252;ber Abschlusseigenschaften geben wir kompositionale Semantiken an, aus deren atomaren (Pomset-, Step-) Sprachen sich die Sprachen von beliebigen Petri-Netzen mittels einiger Operationen (gegen die die jeweilige Sprachklasse abgeschlossen ist) gewinnen lassen. Die notwendigen Abschlusseigenschaften weisen wir z.T. mittels einer neuen Normalform f&#252;r Petri-Netze nach, die speziell f&#252;r den Pomsetfall konstruiert wurde. Wir zeigen ferner, dass die Pomsetsprache eines beschr&#228;nkten Netzes stets auch Pomsetsprache eines sicheren Netzes ist, und dass zu jedem Petri-Netz ein Free-Choice-Netz mit derselben Pomsetsprache existiert. Diese Ergebnisse, wie auch einige der Charakterisierungen, waren bisher nur f&#252;r den Fall von Sprachen (aus normalen Worten) von Petri-Netzen bekannt.</bibtex:abstract>
      <bibtex:author>Harro Wimmel</bibtex:author>
      <bibtex:date-added>2009-08-29 09:16:26 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 22:31:50 +0200</bibtex:date-modified>
      <bibtex:school>Universit&#228;t Koblenz-Landau</bibtex:school>
      <bibtex:title>Algebraische Semantiken f&#252;r Petri-Netze</bibtex:title>
      <bibtex:year>2000</bibtex:year>
    </bibtex:phdthesis>
  </bibtex:entry>

  <bibtex:entry id="PrieseW_1998_tcs">
    <bibtex:article>
      <bibtex:abstract>This paper continues a research on universal contexts and semantics for Petri nets started by Nielsen, Priese and Sassone (1995). We consider generalized, labelled Petri nets N where some transitions and places are distinguished as public. They form the interface of N that may communicate with a Petri net context. An elementary calculus, E, is introduced in which one can construct any Petri net with an interface from trivial constants (single places, single transitions) by drawing arcs, adding tokens, and hiding public places and transitions. We prove the existence of a universal context U such that two Petri nets behave the same in any context if their behaviour is equal in the universal context. Let B(U[N]) be the behaviour of N embedded in its universal context, where B may be the interleaving language, step-language, or true-concurrent pomset-language. In any of these cases, B(U[N]) (in contrast to B(N)) turns out to be a compositional semantics of N with respect to the algebra E. In addition, the interleavingand step-semantics are just special cases of the true-concurrency pomset-semantics.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Lutz Priese</bibtex:person>
        <bibtex:person>Harro Wimmel</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2009-08-29 09:13:56 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 09:32:39 +0200</bibtex:date-modified>
      <bibtex:doi>10.1016/S0304-3975(97)00169-2</bibtex:doi>
      <bibtex:journal>Theor. Comput. Sci.</bibtex:journal>
      <bibtex:month>October</bibtex:month>
      <bibtex:number>1-2</bibtex:number>
      <bibtex:pages>219-256</bibtex:pages>
      <bibtex:title>A Uniform Approach to True-Concurrency and Interleaving Semantics for Petri Nets</bibtex:title>
      <bibtex:volume>206</bibtex:volume>
      <bibtex:year>1998</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1016/S0304-3975(97)00169-2</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="WimmelP_1997_concur">
    <bibtex:inproceedings>
      <bibtex:abstract>Sets of pomsets are frequently used as a true-concurrency, linear-time semantics of Petri nets. For a Petri net N, let P(N), a set of pomsets, denote the pomset behaviour of N, and let P:=P(N)|N is a Petri net denote the class of pomset behaviours of Petri nets, a generalization of L, the class of all Petri net languages. We present here an algebraic characterization for P, similar to the known algebraic characterizations for L.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Harro Wimmel</bibtex:person>
        <bibtex:person>Lutz Priese</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>CONCUR '97: Concurrency Theory, 8th International Conference, Warsaw, Poland, July 1-4, 1997, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2009-08-29 09:11:32 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 09:35:49 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-63141-0</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Antoni W. Mazurkiewicz</bibtex:person>
        <bibtex:person>J\'ozef Winkowski</bibtex:person>
      </bibtex:editor>
      <bibtex:month>July</bibtex:month>
      <bibtex:pages>406-420</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Algebraic Characterization of Petri Net Pomset Semantics</bibtex:title>
      <bibtex:volume>1243</bibtex:volume>
      <bibtex:year>1997</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/3-540-63141-0</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LiskeLSW_2009_icsoc">
    <bibtex:inproceedings>
      <bibtex:abstract>Services change over time, be it for internal improvements, be it for external requirements such as new legal regulations. For long running services, it may even be necessary to change a service while instances are actually running and interacting with other services. This problem is referred to as instance migration. We present a novel approach to the behavioral (service protocol) aspects of instance migration. We apply techniques for finitely characterizing the set of all correctly interacting partners to a given service. The approach assures that migration does not introduce behavioral problems with any running partner of the original service. Our technique scales up to services with thousands of states, including models of real WS-BPEL processes.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Nannette Liske</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Service-Oriented Computing - ICSOC 2009, 7th International Conference, Stockholm, Sweden, November 24-27, 2009. Proceedings</bibtex:booktitle>
      <bibtex:date-added>2009-08-11 22:08:55 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-01-04 15:36:38 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-10383-4_44</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Luciano Baresi</bibtex:person>
        <bibtex:person>Chi-Hung Chi</bibtex:person>
        <bibtex:person>Jun Suzuki</bibtex:person>
      </bibtex:editor>
      <bibtex:month>November</bibtex:month>
      <bibtex:pages>607-621</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LiskeLSW_2009_icsoc.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Another Approach to Service Instance Migration</bibtex:title>
      <bibtex:volume>5900</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-10383-4_44</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannW_2009_wsfm">
    <bibtex:inproceedings>
      <bibtex:abstract>A choreography describes the interaction between services. It may be used for specification purposes, for instance serving as a contract in the design of an inter-organizational business process. Typically, not all describable interactions make sense which motivates the study of the realizability problem for a given choreography.  In this paper, we show that realizability can be traced back to the problem of controllability which asks whether a service has compatible partner processes. This way of thinking makes algorithms for controllability available for reasoning about realizability. In addition, it suggests alternative definitions for realizability. We discuss several proposals for defining realizability which differ in the degree of coverage of the specified interaction.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Web Services and Formal Methods, 6th International Workshop, WS-FM 2009, Bologna, Italy, September 4-5, 2009, Revised Selected Papers</bibtex:booktitle>
      <bibtex:date-added>2009-07-14 10:39:49 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-12-19 12:37:18 +0100</bibtex:date-modified>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:doi>10.1007/978-3-642-14458-5_7</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Cosimo Laneve</bibtex:person>
        <bibtex:person>Jianwen Su</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>110-127</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannW_2009_wsfm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Realizability is Controllability</bibtex:title>
      <bibtex:volume>6194</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="AwadDL_2009_bpd">
    <bibtex:inproceedings>
      <bibtex:abstract>When using process models for automation, correctness of the models is a key requirement. While many approaches concentrate on control flow verification only, correct data flow modeling is of similar importance. This paper introduces an approach for detecting and repairing modeling errors that only occur in the interplay between control flow and data flow. The approach is based on Petri nets and detects anomalies in BPMN models. In addition to the diagnosis of the modeling errors, a subset of errors can also be repaired automatically.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Ahmed Awad</bibtex:person>
        <bibtex:person>Gero Decker</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Business Process Management Workshops, BPM 2009 International Workshops, Ulm, Germany, September 2009, Revised Papers</bibtex:booktitle>
      <bibtex:date-added>2009-06-30 22:50:41 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-03-19 07:41:29 +0100</bibtex:date-modified>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:doi>10.1007/978-3-642-12186-9_2</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Stefanie Rinderle-Ma</bibtex:person>
        <bibtex:person>Shazia Sadiq</bibtex:person>
        <bibtex:person>Frank Leymann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>5-16</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/AwadDL_2009_bpd.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Business Information Processing</bibtex:series>
      <bibtex:title>Diagnosing and Repairing Data Anomalies in Process Models</bibtex:title>
      <bibtex:volume>43</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-12186-9_2</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="KaschnerW_2009_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>Compatibility of behavior, i.e. the correct ordering of messages, is one of the core aspects for the interaction between services as parts of an inter-organizational business process. In previous work, we proposed formal representations for service behavior (including Petri nets and service automata) and finite representations of sets thereof (operating guidelines).  In this article, we show how the basic set operations union, intersection, and complement, as well as membership and emptiness tests, can be implemented on finite representations of (typically infinite) sets of services. We motivate the operations by three examples of applications &#x2014; service substitution, selection of behavior, and navigation in a behavioral registry.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kathrin Kaschner</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Business Process Management, 7th International Conference, BPM 2009, Ulm, Germany, September 8-10, 2009, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2009-06-18 11:03:05 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-09-01 18:37:26 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-03848-8_14</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Umeshwar Dayal</bibtex:person>
        <bibtex:person>Johann Eder</bibtex:person>
        <bibtex:person>Jana Koehler</bibtex:person>
        <bibtex:person>Hajo Reijers</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>193-210</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/KaschnerW_2009_bpm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Set Algebra for Service Behavior: Applications and Constructions</bibtex:title>
      <bibtex:volume>5701</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-03848-8_14</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="AalstMSW_2009_sfm">
    <bibtex:inproceedings>
      <bibtex:abstract>As systems become more service oriented and processes increasingly cross organizational boundaries, interaction becomes more important. New technologies support the development of such systems. However, the paradigm shift towards service orientation, requires a fundamentally different way of looking at processes. This survey aims to provide some foundational notions related to service interaction. A set of service interaction patterns is given to illustrate the challenges in this domain. Moreover, key results are given for three of these challenges: (1) How to expose a service?, (2) How to replace and refine services?, and (3) How to generate service adapters? These challenges will be addressed in a Petri net setting. However, the results extend to other languages used in this domain.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Wil M. P. van der Aalst</bibtex:person>
        <bibtex:person>Arjan J. Mooij</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Formal Methods for Web Services, 9th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2009, Bertinoro, Italy, June 1-6, 2009, Advanced Lectures</bibtex:booktitle>
      <bibtex:date-added>2009-06-07 19:57:52 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-06-07 20:02:57 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-01918-0_2</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Marco Bernardo</bibtex:person>
        <bibtex:person>Luca Padovani</bibtex:person>
        <bibtex:person>Gianluigi Zavattaro</bibtex:person>
      </bibtex:editor>
      <bibtex:month>April</bibtex:month>
      <bibtex:pages>42-88</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/AalstMSW_2009_sfm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Service Interaction: Patterns, Formalization, and Analysis</bibtex:title>
      <bibtex:volume>5569</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-01918-0</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="FahlandWJKLVW_2009_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>We report on a case study on control-flow analysis of business process models. We checked 735 industrial business process models from financial services, telecommunications and other domains. We checked these models for soundness (absence of deadlock and lack of synchronization) using three different approaches: the business process verification tool Woflan, the Petri net model checker LoLA and a recently developed technique based on SESE decomposition. We evaluate the various techniques utilized by these approaches with respect to their ability of accelerating the check. Our results show that an average industrial business process model can be checked in a few milliseconds, which enables tight integration of modeling with control-flow analysis. We also briefly compare the diagnostic information delivered by the different approaches.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Dirk Fahland</bibtex:person>
        <bibtex:person>C&#233;dric Favre</bibtex:person>
        <bibtex:person>Barbara Jobstmann</bibtex:person>
        <bibtex:person>Jana Koehler</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Hagen V&#246;lzer</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Business Process Management, 7th International Conference, BPM 2009, Ulm, Germany, September 8-10, 2009, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2009-05-18 10:07:03 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-08-29 08:55:30 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-03848-8_19</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Umeshwar Dayal</bibtex:person>
        <bibtex:person>Johann Eder</bibtex:person>
        <bibtex:person>Jana Koehler</bibtex:person>
        <bibtex:person>Hajo A. Reijers</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>278-293</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/FahlandWJKLVW_2009_bpm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Instantaneous Soundness Checking of Industrial Business Process Models</bibtex:title>
      <bibtex:volume>5701</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-03848-8_19</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="FranceschinisW_2009_icatpn">
    <bibtex:proceedings>
      <bibtex:date-added>2009-05-04 07:08:32 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-06-21 13:41:35 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-02424-5</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Giuliana Franceschinis</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Applications and Theory of Petri Nets, 30th International Conference, PETRI NETS 2009, Paris, France, June 22-26, 2009. Proceedings</bibtex:title>
      <bibtex:volume>5606</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-02424-5</bibtex:bdsk-url-1>
    </bibtex:proceedings>
  </bibtex:entry>

  <bibtex:entry id="ParnjaiSW_2009_zeus">
    <bibtex:inproceedings>
      <bibtex:abstract>We present a finite representation of all substitutable services P' of a given service P. We show that our approach can be used for at least two applications: (1) given a finite set of services P = P1, ..., Pn</bibtex:abstract>
      we provide a representation of all services P' that can substitute every Pi in P, and (2) given a service P'' that cannot substitute a service P, we find the most similar service P* to P'' that can substitute P. },
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:author>
        <bibtex:person>Jarungjit Parnjai</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 1st Central-European Workshop on Services and their Composition, ZEUS 2009, Stuttgart, Germany, March 2-3, 2009</bibtex:booktitle>
      <bibtex:date-added>2009-03-13 19:24:17 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-03-13 19:27:43 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Oliver Kopp</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>29-34</bibtex:pages>
      <bibtex:pdf>http://CEUR-WS.org/Vol-438/paper5.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>A Finite Representation of all Substitutable Services and its Applications</bibtex:title>
      <bibtex:volume>438</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://CEUR-WS.org/Vol-438/paper5.pdf</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="AwadDL_2009_tr">
    <bibtex:techreport>
      <bibtex:abstract>When using process models for automation, correctness of the models is a key requirement. While many approaches concentrate on control flow verification only, correct data flow modeling is of similar importance. This paper introduces an approach for detecting and repairing modeling errors that only occur in the interplay between control flow and data flow. The approach is based on place/transition nets and detects anomalies in BPMN models. In addition to the diagnosis of the modeling errors, a subset of errors can also be repaired automatically.</bibtex:abstract>
      <bibtex:address>Potsdam, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Ahmed Awad</bibtex:person>
        <bibtex:person>Gero Decker</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2009-03-12 23:00:40 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-03-12 23:10:45 +0100</bibtex:date-modified>
      <bibtex:institution>Hasso-Plattner-Institute</bibtex:institution>
      <bibtex:month>March</bibtex:month>
      <bibtex:number>03-2009</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/AwadDL_2009_tr.pdf</bibtex:pdf>
      <bibtex:title>Diagnosing and Repairing Data Anomalies in Process Models</bibtex:title>
      <bibtex:type>BPT Technical Report</bibtex:type>
      <bibtex:year>2009</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="BruniW_2008_wsfm">
    <bibtex:proceedings>
      <bibtex:date-added>2009-03-12 16:18:30 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-05-02 08:11:51 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-01364-5</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Roberto Bruni</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:month>April</bibtex:month>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Web Services and Formal Methods, 5th International Workshop, WS-FM 2008, Milan, Italy, September 4-5, 2008, Revised Selected Papers</bibtex:title>
      <bibtex:volume>5387</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-01364-5</bibtex:bdsk-url-1>
    </bibtex:proceedings>
  </bibtex:entry>

  <bibtex:entry id="WolfSOD_2009_acsd">
    <bibtex:inproceedings>
      <bibtex:abstract>In a service-oriented architecture (SOA), we want to enable a service registry to match a request with a published service where their composition is livelock-free. To this end, we model check the composed system.  We pre-compute and pre-reduce parts of the composed system thus shifting run time from the critical request phase to the less critical publish phase of the SOA approach.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Karsten Wolf</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Janine Ott</bibtex:person>
        <bibtex:person>Robert Danitz</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Ninth International Conference on Application of Concurrency to System Design (ACSD 2009), 1-3 July 2009, Augsburg, Germany</bibtex:booktitle>
      <bibtex:date-added>2009-03-06 12:23:58 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-01-04 15:37:28 +0100</bibtex:date-modified>
      <bibtex:doi>10.1109/ACSD.2009.16</bibtex:doi>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>168-177</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/WolfSOD_2009_acsd.pdf</bibtex:pdf>
      <bibtex:publisher>IEEE Computer Society</bibtex:publisher>
      <bibtex:title>Verifying Livelock Freedom in an SOA Scenario</bibtex:title>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1109/ACSD.2009.16</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannW_2009_acsd">
    <bibtex:inproceedings>
      <bibtex:abstract>Operating guidelines characterize correct interaction (e.g. deadlock freedom) with a service. They can be stored in a service registry. So far, they have been represented as an annotated transition system.  For the sake of saving space in the registry, we want to translate operating guidelines into Petri nets. To make this possible, we carefully investigate regularities in the annotations.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Ninth International Conference on Application of Concurrency to System Design (ACSD 2009), 1-3 July 2009, Augsburg, Germany</bibtex:booktitle>
      <bibtex:date-added>2009-03-05 19:59:33 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-01-04 15:37:31 +0100</bibtex:date-modified>
      <bibtex:doi>10.1109/ACSD.2009.11</bibtex:doi>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>80-88</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannW_2009_acsd.pdf</bibtex:pdf>
      <bibtex:publisher>IEEE Computer Society</bibtex:publisher>
      <bibtex:title>Petrifying Operating Guidelines for Services</bibtex:title>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1109/ACSD.2009.11</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="OaneaW_2009_zeus">
    <bibtex:inproceedings>
      <bibtex:abstract>Composing services makes sense only if they are compatible, i.e. composition does not lead to problems such as livelocks or deadlocks. In general, compatibility can be checked using state space explorations on any kind of formal models of services.  Petri nets, one of the formal model in use, offer a rich theory for reasoning without exploring a state space. Among the techniques is the so-called state equation which forms a linear algebraic necessary condition for reachability of states.  In this article, we show how the state equation can be applied for a necessary condition for compatibility. This way, the number of expensive state space based compatibility checks can be drastically reduced. The condition can be applied even if compatibility is achieved through the construction of a behavioral adapter (mediator).</bibtex:abstract>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:author>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 1st Central-European Workshop on Services and their Composition, ZEUS 2009, Stuttgart, Germany, March 2-3, 2009</bibtex:booktitle>
      <bibtex:date-added>2009-02-18 16:43:15 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-02-25 23:22:54 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Oliver Kopp</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>81-87</bibtex:pages>
      <bibtex:pdf>http://CEUR-WS.org/Vol-438/paper13.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>An efficient necessary condition for compatibility</bibtex:title>
      <bibtex:volume>438</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="KoppL_2009_zeus">
    <bibtex:proceedings>
      <bibtex:booktitle>Services und ihre Komposition</bibtex:booktitle>
      <bibtex:date-added>2009-02-18 16:38:07 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-03-04 15:42:59 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Oliver Kopp</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/KoppL_2009_zeus.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Proceedings of the 1st Central-European Workshop on Services and their Composition, ZEUS 2009, Stuttgart, Germany, March 2-3, 2009</bibtex:title>
      <bibtex:url>http://CEUR-WS.org/Vol-438/</bibtex:url>
      <bibtex:volume>438</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://CEUR-WS.org/Vol-438/</bibtex:bdsk-url-1>
    </bibtex:proceedings>
  </bibtex:entry>

  <bibtex:entry id="Wolf_2009_zeus">
    <bibtex:inproceedings>
      <bibtex:abstract>We outline a fundamental approach to behavioral aspects of services. In the center of this approach, we see behavioral models of services, interactions, and finite representations of sets thereof. Several operations and relations can be defined and their implementation on our representations can be studied. Finally, a number of interesting problems can be traced back to our models and operations. On the boundary of our theory, we place interfaces to other aspects of services.</bibtex:abstract>
      <bibtex:author>Karsten Wolf</bibtex:author>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:booktitle>Proceedings of the 1st Central-European Workshop on Services and their Composition, ZEUS 2009, Stuttgart, Germany, March 2-3, 2009</bibtex:booktitle>
      <bibtex:date-added>2009-02-18 16:34:36 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-02-25 23:23:05 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Oliver Kopp</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>1-7</bibtex:pages>
      <bibtex:pdf>http://CEUR-WS.org/Vol-438/paper1.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>A Theory of Service Behavior</bibtex:title>
      <bibtex:volume>438</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="KaschnerL_2009_zeus">
    <bibtex:inproceedings>
      <bibtex:abstract>Services are loosely coupled interacting software components. Since a service is not executed in isolation, but in composition with other services, its implemented behavior must not differ from its specification. In this paper, we propose an approach to generate test cases which can be used to detect unspecified behavior in an implemented service. Due to the interacting nature of services this is a nontrivial task.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kathrin Kaschner</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 1st Central-European Workshop on Services and their Composition, ZEUS 2009, Stuttgart, Germany, March 2-3, 2009</bibtex:booktitle>
      <bibtex:date-added>2009-02-18 16:32:54 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-02-25 23:23:11 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Oliver Kopp</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>22-28</bibtex:pages>
      <bibtex:pdf>http://CEUR-WS.org/Vol-438/paper4.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Does my service have unspecified behavior?</bibtex:title>
      <bibtex:volume>438</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannW_2009_zeus">
    <bibtex:inproceedings>
      <bibtex:abstract>A choreography describes the interaction between services. It may be used for specification purposes, e.g. serving as a contract in the design of an interorganizational business process. Typically, not all describable interactions make sense which motivates the study of the realizability problem for a given choreography.  In this paper, we show that realizability can be traced back to the problem of controllability which asks whether a service has compatible partner processes. This way of thinking makes algorithms for controllability available for reasoning about realizability. In addition, it suggests alternative definitions for realizability. We discuss several proposals for defining realizability which differ in the degree of coverage of the specified interaction.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 1st Central-European Workshop on Services and their Composition, ZEUS 2009, Stuttgart, Germany, March 2-3, 2009</bibtex:booktitle>
      <bibtex:date-added>2009-02-18 16:29:21 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-02-25 23:23:18 +0100</bibtex:date-modified>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:editor>
        <bibtex:person>Oliver Kopp</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>61-67</bibtex:pages>
      <bibtex:pdf>http://CEUR-WS.org/Vol-438/paper10.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Realizability is Controllability</bibtex:title>
      <bibtex:volume>438</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="StahlW_2008_dke">
    <bibtex:article>
      <bibtex:abstract>We study the correct interaction between services using the following notion for correctness: there is no deadlock in the interaction of the services, and a given set of activities is covered, that is, such an activity can be executed in at least one scenario. The second condition has not been studied before. An operating guideline of a service P is an operational characterization of all deadlock-free interacting partners of P. In this paper, we present an extension of the concept of an operating guideline to characterize all correctly interacting partners of a service P. This extension can be used for answering at least the following two questions. First, given a service R, does R interact correctly with P? Second, given a service P', can P be substituted by P', that is, is every correctly interacting partner of P a correctly interacting partner of P', too?</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-12-18 08:14:48 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-06-03 10:33:48 +0200</bibtex:date-modified>
      <bibtex:doi>10.1016/j.datak.2009.02.012</bibtex:doi>
      <bibtex:journal>Data Knowl. Eng.</bibtex:journal>
      <bibtex:month>September</bibtex:month>
      <bibtex:number>9</bibtex:number>
      <bibtex:pages>819-833</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/StahlW_2008_dke.pdf</bibtex:pdf>
      <bibtex:title>Deciding Service Composition and Substitutability Using Extended Operating Guidelines</bibtex:title>
      <bibtex:volume>68</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1016/j.datak.2009.02.012</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="KaschnerL_2008_wesoa">
    <bibtex:inproceedings>
      <bibtex:abstract>Service-oriented architectures propose loosely coupled interacting services as building blocks for distributed applications. Since distributed services differ from traditional monolithic software systems, novel testing methods are required. Based on the specification of a service, we introduce an approach to automatically generate test cases for black-box testing to check for conformance between the specification and the implementation of a service whose internal behavior might be confidential. Due to the interacting nature of services this is a nontrivial task.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kathrin Kaschner</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Service-Oriented Computing - ICSOC 2008 Workshops, ICSOC 2008 International Workshops, Sydney, Australia, December 1st, 2008, Revised Selected Papers</bibtex:booktitle>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:date-added>2008-11-13 21:03:47 +1000</bibtex:date-added>
      <bibtex:date-modified>2009-04-26 15:07:19 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-01247-1_7</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>George Feuerlicht</bibtex:person>
        <bibtex:person>Winfried Lamersdorf</bibtex:person>
      </bibtex:editor>
      <bibtex:month>April</bibtex:month>
      <bibtex:pages>66-78</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/KaschnerL_2008_wesoa.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Automatic Test Case Generation for Interacting Services</bibtex:title>
      <bibtex:volume>5472</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-01247-1_7</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="AalstLMSW_2010_compj">
    <bibtex:article>
      <bibtex:abstract>To implement an interorganizational process between different enterprizes, one needs to agree on the ``rules of engagement''. These can be specified in terms of a contract that describes the overall intended process and the duties of all parties involved. We propose to use such a process-oriented contract which can be seen as the composition of the public views of all participating parties. Based on this contract each party may locally implement its part of the contract such that the implementation (the private view) agrees on the contract. In this paper, we propose a formal notion for such process-oriented contracts and give a criterion for accordance between a private view and its public view. The public view of a party can be substituted by a private view if and only if the private view accords with the public view. Using the notion of accordance the overall implemented process is guaranteed to be deadlock-free and it is always possible to terminate properly. In addition, we present a technique for automatically checking our accordance criterion. A case study illustrates how our proposed approach can be used in practice.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Wil M. P. van der Aalst</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-11-05 07:53:08 +0100</bibtex:date-added>
      <bibtex:date-modified>2010-01-04 15:29:58 +0100</bibtex:date-modified>
      <bibtex:doi>10.1093/comjnl/bxn064</bibtex:doi>
      <bibtex:journal>Comput. J.</bibtex:journal>
      <bibtex:month>January</bibtex:month>
      <bibtex:number>1</bibtex:number>
      <bibtex:pages>90-106</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/AalstLMSW_2008_compj.pdf</bibtex:pdf>
      <bibtex:title>Multiparty Contracts: Agreeing and Implementing Interorganizational Processes</bibtex:title>
      <bibtex:volume>53</bibtex:volume>
      <bibtex:year>2010</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1093/comjnl/bxn064</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="LohmannVOSA_2009_ijbpim">
    <bibtex:article>
      <bibtex:abstract>We compare two Petri net semantics for the Web Services Business Process Execution Language (BPEL). The comparison reveals different modelling decisions. These decisions together with their consequences are discussed. We also give an overview of the different properties that can be verified on the resulting models. A case study helps to evaluate the corresponding compilers which transform a BPEL process into a Petri net model.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>H.M.W. Verbeek</bibtex:person>
        <bibtex:person>Chun Ouyang</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-11-01 19:50:33 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-07-31 08:14:14 +0200</bibtex:date-modified>
      <bibtex:doi>10.1504/IJBPIM.2009.026986</bibtex:doi>
      <bibtex:journal>Int. J. Business Process Integration and Management</bibtex:journal>
      <bibtex:number>1</bibtex:number>
      <bibtex:pages>60-73</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannVOSA_2008_ijbpim.pdf</bibtex:pdf>
      <bibtex:title>Comparing and Evaluating Petri Net Semantics for BPEL</bibtex:title>
      <bibtex:volume>4</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1504/IJBPIM.2009.026986</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="LohmannVD_2008_topnoc">
    <bibtex:article>
      <bibtex:abstract>In Process-Aware Information Systems, business processes are often modeled in an explicit way. Roughly spoken, the available business process modeling languages can be divided into two groups. Languages from the first group are preferred by academic people but shunned by business people, and include Petri nets and process algebras. These academic languages have a proper formal semantics, which allows the corresponding academic models to be verified in a formal way. Languages from the second group are preferred by business people but disliked by academic people, and include BPEL, BPMN, and EPCs. These business languages often lack any proper semantics, which often leads to debates on how to interpret certain business models. Nevertheless, business models are used in practice, whereas academic models are hardly used. To be able to use, for example, the abundance of Petri net verification techniques on business models, we need to be able to transform these models to Petri nets. In this paper, we investigate a number of Petri net transformations that already exist. For every transformation, we investigate the transformation itself, the constructs in the business models that are problematic for the transformation and the main applications for the transformation.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>H.M.W. Verbeek</bibtex:person>
        <bibtex:person>Remco Dijkman</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-10-31 17:37:35 +0100</bibtex:date-added>
      <bibtex:date-modified>2009-03-29 09:36:10 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-00899-3_3</bibtex:doi>
      <bibtex:journal>LNCS ToPNoC</bibtex:journal>
      <bibtex:month>March</bibtex:month>
      <bibtex:note>Special Issue on Concurrency in Process-Aware Information Systems</bibtex:note>
      <bibtex:number>5460</bibtex:number>
      <bibtex:pages>46-63</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannVD_2008_topnoc.pdf</bibtex:pdf>
      <bibtex:title>Petri Net Transformations for Business Processes - A Survey</bibtex:title>
      <bibtex:volume>II</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-00899-3_3</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="DeckerBKL_2008_icsoc">
    <bibtex:inproceedings>
      <bibtex:abstract>A precise definition of interaction behavior between services is a prerequisite for successful business-to-business integration. Service choreographies provide a view on message exchanges and their ordering constraints from a global perspective. Assuming message sending and receiving as one atomic step allows to reduce the modelers' effort. As downside, problematic race conditions resulting in deadlocks might appear when realizing the choreography using services that exchange messages asynchronously. This paper presents typical issues when desynchronizing service choreographies. Solutions from practice are discussed and a formal approach based on Petri nets is introduced for identifying desynchronizable choreographies.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Gero Decker</bibtex:person>
        <bibtex:person>Alistair Barros</bibtex:person>
        <bibtex:person>Frank Michael Kraft</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Service-Oriented Computing - ICSOC 2008, 6th International Conference, Sydney, Australia, December 1-5, 2008. Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-09-15 19:04:14 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-11-23 20:22:37 +1000</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-89652-4_26</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Athman Bouguettaya</bibtex:person>
        <bibtex:person>Ingolf Kr&#252;ger</bibtex:person>
        <bibtex:person>Tiziana Margaria</bibtex:person>
      </bibtex:editor>
      <bibtex:month>December</bibtex:month>
      <bibtex:pages>331-346</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/DeckerBKL_2008_icsoc.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Non-desynchronizable Service Choreographies</bibtex:title>
      <bibtex:volume>5364</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/DeckerBKL_2008_icsoc.pdf</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="StahlW_2008_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>We calculate a fixed finite set of state space fragments for a service P, where each fragment carries a part of the whole behavior of P. By composing these fragments according to the behavior of a service R we build the state space of their composition P+R which can be checked for deadlocks and livelocks. We show that this approach is applicable to realize a ``find'' request by a service R with a provided service P in SOA.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>15th German Workshop on Algorithms and Tools for Petri Nets, AWPN 2008, Rostock, Germany, September 26-27, 2008, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-08-19 11:12:38 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-08-30 20:15:55 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>69-74</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/StahlW_2008_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>An Approach to Tackle Livelock-Freedom in SOA</bibtex:title>
      <bibtex:volume>380</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Wolf_2008_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Without taking care of the semantics of messages, every message is an isolated entity that can be created and sent at will. This leads to anomalies like a synthesized service that sends a filled form before having received the empty form. In this paper we pick up ideas from adapter synthesis for taking care of semantical constraints and develop them into two directions. First, we show that the approach taken for adapter synthesis can be applied to synthesis of services in general. Second, we argue that the taken approach is in a certain sense complete.</bibtex:abstract>
      <bibtex:author>Karsten Wolf</bibtex:author>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:booktitle>15th German Workshop on Algorithms and Tools for Petri Nets, AWPN 2008, Rostock, Germany, September 26-27, 2008, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-08-19 11:12:05 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-08-30 20:15:49 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>49-54</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Wolf_2008_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>On Synthesizing Behavior that Is Aware of Semantical Constraints</bibtex:title>
      <bibtex:volume>380</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2008_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>An operating guideline (OG) for a service S finitely characterizes the (possibly infinite) set of all services that can interact with S without deadlocks. This paper presents a decompositional approach to calculate an OG for a service whose underlying structure is acyclic and contains free-choice conflicts. This divide-and-conquer approach promises to be more efficient than the classical OG computation algorithm.</bibtex:abstract>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:booktitle>15th German Workshop on Algorithms and Tools for Petri Nets, AWPN 2008, Rostock, Germany, September 26-27, 2008, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-08-19 11:09:43 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-08-30 20:15:13 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>63-68</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2008_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Decompositional Calculation of Operating Guidelines Using Free Choice Conflicts</bibtex:title>
      <bibtex:volume>380</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannW_2008_awpn">
    <bibtex:proceedings>
      <bibtex:booktitle>Algorithmen und Werkzeuge f&#252;r Petrinetze</bibtex:booktitle>
      <bibtex:date-added>2008-08-19 11:08:03 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-08-30 20:15:07 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannW_2008_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>Proceedings of the 15th German Workshop on Algorithms and Tools for Petri Nets, AWPN 2008, Rostock, Germany, September 26-27, 2008</bibtex:title>
      <bibtex:url>http://CEUR-WS.org/Vol-380</bibtex:url>
      <bibtex:volume>380</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://CEUR-WS.org/Vol-380</bibtex:bdsk-url-1>
    </bibtex:proceedings>
  </bibtex:entry>

  <bibtex:entry id="GierdsMW_2008_tr_cs0208">
    <bibtex:techreport>
      <bibtex:abstract>Behavioral adapters are a way to establish proper interaction between services that have been developed independently. We present a novel approach for specifying such adapters, based on domain-specific transformation rules that reflect the elementary operations that adapters can perform. We show how complex adapters that adhere to these rules can be generated using existing controller generation algorithms. We discuss some example applications, including real-world business processes.</bibtex:abstract>
      <bibtex:address>Rostock, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Christian Gierds</bibtex:person>
        <bibtex:person>Arjan J. Mooij</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-08-06 15:53:17 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-08-06 15:57:20 +0200</bibtex:date-modified>
      <bibtex:institution>Universit&#228;t Rostock</bibtex:institution>
      <bibtex:month>August</bibtex:month>
      <bibtex:number>CS-02-08</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/GierdsMW_2008_tr_cs0208.pdf</bibtex:pdf>
      <bibtex:title>Specifying and generating behavioral service adapter based on transformation rules</bibtex:title>
      <bibtex:type>Preprint</bibtex:type>
      <bibtex:year>2008</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Wolf_2008_topnoc">
    <bibtex:article>
      <bibtex:abstract>Controllability for service models is a similar criterion as soundness for workflow models: it establishes a necessary condition for correct behavior of a given service model. Technically, controllability is the problem to decide, for a given service, whether it can interact correctly with at least one other service. Parameters to the problem are the established correctness criterion (e.g. deadlock freedom, livelock freedom, quasi-liveness), the shape of partners (centralized partners versus independently acting partners), or the shape of communication (asynchronous versus synchronous).  In this article, we survey and partly extend various recent results concern- ing the verification of controllability for Petri net based service models. Significant extensions include the study of livelock freedom as correctness criterion as well as the new results on autonomous multi-port controllability.</bibtex:abstract>
      <bibtex:author>Karsten Wolf</bibtex:author>
      <bibtex:date-added>2008-07-10 09:13:19 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-03-29 09:37:16 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-00899-3_9</bibtex:doi>
      <bibtex:journal>LNCS ToPNoC</bibtex:journal>
      <bibtex:month>March</bibtex:month>
      <bibtex:note>Special Issue on Concurrency in Process-Aware Information Systems</bibtex:note>
      <bibtex:number>II</bibtex:number>
      <bibtex:pages>152-171</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Wolf_2008_topnoc.pdf</bibtex:pdf>
      <bibtex:title>Does my service have partners?</bibtex:title>
      <bibtex:volume>5460</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-00899-3_9</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="MassutheSSW_2008_ipl">
    <bibtex:article>
      <bibtex:abstract>We study open nets as Petri net models of web services, with a link to the practically relevant language WS-BPEL. For those nets, we investigate the problem of serviceableness which we consider as fundamental as the successful notion of soundness for workflow nets, i.e. Petri net models of business processes and workflows. While we could give algorithmic solutions to the serviceableness problem for subclasses of open nets in earlier work, this article shows that the problem is in general undecidable.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-07-09 14:22:08 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-10-27 19:49:17 +0100</bibtex:date-modified>
      <bibtex:doi>10.1016/j.ipl.2008.07.006</bibtex:doi>
      <bibtex:journal>Inf. Process. Lett.</bibtex:journal>
      <bibtex:month>November</bibtex:month>
      <bibtex:number>6</bibtex:number>
      <bibtex:pages>374-378</bibtex:pages>
      <bibtex:title>Can I find a Partner? Undecidablity of Partner Existence for Open Nets</bibtex:title>
      <bibtex:volume>108</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1016/j.ipl.2008.07.006</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2008_wsfm">
    <bibtex:inproceedings>
      <bibtex:abstract>Controllability is a fundamental correctness criterion for interacting service models. A service model is controllable if there exists a partner service such that their composition is free of deadlocks and livelocks. Whereas controllability can be automatically decided, the existing decision algorithm gives no information about the reasons of why a service model is uncontrollable. This paper introduces a diagnosis framework to find these reasons which can help to fix uncontrollable service models.</bibtex:abstract>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:booktitle>Web Services and Formal Methods, 5th International Workshop, WS-FM 2008, Milan, Italy, September 4-5, 2008, Revised Selected Papers</bibtex:booktitle>
      <bibtex:date-added>2008-06-24 11:42:28 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-05-02 08:10:05 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-642-01364-5_12</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Roberto Bruni</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:month>April</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:pages>191-206</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2008_wsfm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Why does my service have no partners?</bibtex:title>
      <bibtex:volume>5387</bibtex:volume>
      <bibtex:year>2009</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-642-01364-5_12</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Oanea_2003_mt">
    <bibtex:mastersthesis>
      <bibtex:address>Ia\csi, Romania</bibtex:address>
      <bibtex:author>Olivia Oanea</bibtex:author>
      <bibtex:date-added>2008-06-23 18:56:44 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-23 18:59:22 +0200</bibtex:date-modified>
      <bibtex:month>June</bibtex:month>
      <bibtex:school>University ``A.I.Cuza'' of Ia\csi, Faculty of Computer Science</bibtex:school>
      <bibtex:title>Model Checking Petri Nets</bibtex:title>
      <bibtex:type>Master thesis</bibtex:type>
      <bibtex:year>2003</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="Oanea_2002_da">
    <bibtex:mastersthesis>
      <bibtex:address>Ia\csi, Romania</bibtex:address>
      <bibtex:author>Olivia Oanea</bibtex:author>
      <bibtex:date-added>2008-06-23 18:51:39 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-23 18:59:02 +0200</bibtex:date-modified>
      <bibtex:month>September</bibtex:month>
      <bibtex:school>University ``A.I.Cuza'' of Ia\csi, Faculty of Computer Science</bibtex:school>
      <bibtex:title>Decidability and Complexity of Petri Net Problems</bibtex:title>
      <bibtex:type>Diploma thesis</bibtex:type>
      <bibtex:year>2002</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="HeeOSSVL_2006_csp">
    <bibtex:inproceedings>
      <bibtex:abstract>In this paper we consider adaptive workflow nets, a subclass of nested nets that allows more comfort and expressive power for modelling adaptation and exception handling in workflow nets. We define two important behavioral properties of adaptive workflow nets: soundness and circumspectness. Soundness means that a proper final marking (state) can be reached from any marking which is reachable from the initial marking, and no garbage will be left. Circumspectness means that the upper layer is always ready to handle any exception that can happen in a lower layer. Since adaptive workflow nets can have an infinite state space, we use an abstraction to reduce the problem of verifying soundness and circumspectness to a finite one.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
        <bibtex:person>Irina A. Lomazova</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings Concurrency Specification and Programming (CS&amp;P'2006, Wandlitz, Germany, September 27-29, 2006)</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 20:16:56 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-22 19:51:53 +0200</bibtex:date-modified>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>92-103</bibtex:pages>
      <bibtex:pdf>http://www2.informatik.hu-berlin.de/ hs/Aktivitaeten/2006_CSP/CSP06_09.pdf</bibtex:pdf>
      <bibtex:title>Checking Properties of Adaptive Workflow Nets</bibtex:title>
      <bibtex:year>2006</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="HeeOSV_2006_tr0608">
    <bibtex:techreport>
      <bibtex:abstract>We consider nested nets, i.e. Petri nets in which tokens can be Petri nets themselves. We study value semantics of nested nets rather than reference semantics, and apply nested nets to model adaptive workflow, i.e. flexible workflow that can be modified during the execution. A typical domain with a great need for this kind of workflow is health care from which domain we choose the running example. To achieve the desired flexibility we allow transitions that create new nets out of the existing ones. Therefore, nets with completely new structure can be created at the run time. We show that by careful selection of basic operations on the nets we can obtain a powerful modeling formalism that enforces correctness of models. Moreover, the formalism can be implemented based on existing workflow engines.</bibtex:abstract>
      <bibtex:address>Eindhoven, The Netherlands</bibtex:address>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-06-20 20:14:42 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-22 19:50:08 +0200</bibtex:date-modified>
      <bibtex:institution>Eindhoven University of Technology</bibtex:institution>
      <bibtex:number>06/08</bibtex:number>
      <bibtex:pdf>http://alexandria.tue.nl/extra1/wskrap/publichtml/200608.pdf</bibtex:pdf>
      <bibtex:title>Verifying Generalized Soundness for Workflow Nets</bibtex:title>
      <bibtex:type>Computer Science Report</bibtex:type>
      <bibtex:year>2006</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="HeeLOSSV_2006_tr0602">
    <bibtex:techreport>
      <bibtex:abstract>We improve the decision procedure from [7] for the problem of generalized soundness for workflow nets: \Every marking reachable from an initial marking with k tokens on the initial place terminates properly, i.e. it can reach a marking with k tokens on the final place, for an arbitrary natural number k". Moreover, our new decision procedure returns a counterexample in case the workflow net is not generalized sound. We also report on experimental results obtained with the prototype we made and explain how the procedure can be used for the compositional verification of large workflows.</bibtex:abstract>
      <bibtex:address>Eindhoven, The Netherlands</bibtex:address>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Irina A. Lomazova</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-06-20 20:09:40 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-22 19:50:26 +0200</bibtex:date-modified>
      <bibtex:institution>Eindhoven University of Technology</bibtex:institution>
      <bibtex:number>06/02</bibtex:number>
      <bibtex:pdf>http://alexandria.tue.nl/extra1/wskrap/publichtml/200602.pdf</bibtex:pdf>
      <bibtex:title>Nested Nets for Adaptive Systems</bibtex:title>
      <bibtex:type>Computer Science Report</bibtex:type>
      <bibtex:year>2006</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="TipleaO_2003_smi">
    <bibtex:article>
      <bibtex:author>
        <bibtex:person>Ferucio Laurentiu Tiplea</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-06-20 20:00:31 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 20:04:57 +0200</bibtex:date-modified>
      <bibtex:journal>An. Univ. Timis., Ser. Mat.-Inform.</bibtex:journal>
      <bibtex:pages>229-245</bibtex:pages>
      <bibtex:pdf>http://www.win.tue.nl/ ooanea/papers/mc.pdf</bibtex:pdf>
      <bibtex:title>Model Checking for Linear Time $\mu$-calculus and Extended Petri Nets</bibtex:title>
      <bibtex:volume>XLI</bibtex:volume>
      <bibtex:year>2003</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="LaurentiuO_2003_synasc">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Ferucio Laurentiu Tiplea</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>5th International Workshop "Symbolic and Numeric Algorithms for Scientific Computing" SYNASC 2003, Timisoara (Romania), Oct 1-4, 2003</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 19:53:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 20:06:28 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Tudor Jebelean</bibtex:person>
        <bibtex:person>Viorel Negru</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pages>297-310</bibtex:pages>
      <bibtex:title>Model Checking Linear for Time $\mu$-Calculus for Extended Petri Nets</bibtex:title>
      <bibtex:year>2003</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Oanea_2002_tr0204">
    <bibtex:techreport>
      <bibtex:abstract>Petri net theory plays a very important role in modeling and analysing parallel and distributed systems. It provides a simple mathematical structure, and basic properties can be cleanly analysed. The aim of this paper is to give an overview on the basic decision problems in the theory of Petri nets. We discuss both decidability and complexity aspects. We have also a contribution in the area of home markings. We prove that the home marking problem for inhibitor Petri nets is undecidable.</bibtex:abstract>
      <bibtex:address>Ia\csi, Romania</bibtex:address>
      <bibtex:author>Olivia Oanea</bibtex:author>
      <bibtex:date-added>2008-06-20 19:50:26 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-23 18:54:24 +0200</bibtex:date-modified>
      <bibtex:institution>University ``A.I.Cuza'' of Ia\csi, Faculty of Computer Science</bibtex:institution>
      <bibtex:month>September</bibtex:month>
      <bibtex:number>TR 02-04</bibtex:number>
      <bibtex:ps>http://thor.info.uaic.ro/ tr/tr02-04.ps</bibtex:ps>
      <bibtex:title>Decidability and Complexity of Petri Net Problems</bibtex:title>
      <bibtex:year>2002</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="MelinteOOT_2002_tr0202">
    <bibtex:techreport>
      <bibtex:abstract>In this paper we study the home marking problem for Petri nets, and some related concepts to it like confluence, noetherianity, and state space inclusion. We show that the home marking problem for inhibitor Petri nets is undecidable. We relate then the existence of home markings to confluence and noetherianity and prove that confluent and noetherian Petri nets have an unique home marking. Finally, we define some versions of the state space inclusion problem related to the home marking and sub-marking problems, and discuss their decidability status.</bibtex:abstract>
      <bibtex:address>Ia\csi, Romania</bibtex:address>
      <bibtex:author>
        <bibtex:person>Roxana Melinte</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Ioana Olga</bibtex:person>
        <bibtex:person>Ferucio Laurentiu Tiplea</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-06-20 19:45:15 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 19:47:32 +0200</bibtex:date-modified>
      <bibtex:institution>University ``A.I.Cuza'' of Ia\csi, Faculty of Computer Science</bibtex:institution>
      <bibtex:month>February</bibtex:month>
      <bibtex:number>TR 02-02</bibtex:number>
      <bibtex:ps>http://thor.info.uaic.ro/ tr/tr02-02.ps</bibtex:ps>
      <bibtex:title>The Home Marking Problem and Some Related Concepts</bibtex:title>
      <bibtex:year>2002</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="MelinteOOT_2002_promise">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Roxana Melinte</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Ioana Olga</bibtex:person>
        <bibtex:person>Ferucio Laurentiu Tiplea</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Prozessorientierte Methoden und Werkzeuge f&#252;r die Entwicklung von Informationssystemen - Promise 2002, 9.-11. Oktober 2002, Potsdam</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 19:42:01 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 19:49:20 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>J&#246;rg Desel</bibtex:person>
        <bibtex:person>Mathias Weske</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pages>104-115</bibtex:pages>
      <bibtex:pdf>http://sunsite.informatik.rwth-aachen.de/Publications/CEUR-WS//Vol-65/09melinte.pdf</bibtex:pdf>
      <bibtex:publisher>GI</bibtex:publisher>
      <bibtex:series>Lecture Notes in Informatics (LNI)</bibtex:series>
      <bibtex:title>The Home Marking Problem and Some Related Concepts</bibtex:title>
      <bibtex:volume>P-21</bibtex:volume>
      <bibtex:year>2002</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="MelinteOOT_2002_ac">
    <bibtex:article>
      <bibtex:abstract>In this paper we study the home marking problem for Petri nets, and some related concepts to it like confluence, noetherianity, and state space inclusion. We show that the home marking problem for inhibitor Petri nets is undecidable. We relate then the existence of home markings to confluence and noetherianity and prove that confluent and noetherian Petri nets have an unique home marking. Finally, we define some versions of the state space inclusion problem related to the home marking and sub-marking problems, and discuss their decidability status.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Roxana Melinte</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Ioana Olga</bibtex:person>
        <bibtex:person>Ferucio Laurentiu Tiplea</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-06-20 16:37:05 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 19:39:50 +0200</bibtex:date-modified>
      <bibtex:journal>Acta Cybern.</bibtex:journal>
      <bibtex:number>3</bibtex:number>
      <bibtex:pages>467-478</bibtex:pages>
      <bibtex:title>The Home Marking Problem and Some Related Concepts</bibtex:title>
      <bibtex:volume>15</bibtex:volume>
      <bibtex:year>2002</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="HeeOSSV_2008_dke">
    <bibtex:article>
      <bibtex:abstract>In this paper we study the use of case history for control structures in workflow processes. History-dependent control offers much more modeling power than classical control structures and it solves several semantical problems of industrial modeling frameworks. In particular, we introduce a history-dependent join. We study the modeling power by means of workflow patterns. Since proper completion (i.e. the ability of any configuration reachable from the initial one to reach the final one) is always an important ``sanity check'' of process modeling, we introduce a modeling method that guarantees this property holds. Finally we consider an implementation of the proposed control structures on top of an existing workflow engine.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-06-20 16:23:15 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 20:11:49 +0200</bibtex:date-modified>
      <bibtex:doi>10.1016/j.datak.2007.06.005</bibtex:doi>
      <bibtex:journal>Data Knowl. Eng.</bibtex:journal>
      <bibtex:month>January</bibtex:month>
      <bibtex:number>1</bibtex:number>
      <bibtex:pages>24-37</bibtex:pages>
      <bibtex:title>History-Based Joins: Semantics, Soundness and Implementation</bibtex:title>
      <bibtex:volume>64</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1016/j.datak.2007.06.005</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="HeeOS_2005_otm">
    <bibtex:inproceedings>
      <bibtex:abstract>Business processes are becoming more and more complex and at the same time their correctness is becoming a critical issue: The costs of errors in business information systems are growing due to the growing scale of their application and the growing degree of automation. In this paper we consider Extended Event-driven Process Chains (eEPCs), a language which is widely used for modeling business processes, documenting industrial reference models and designing workflows. We describe how to translate eEPCs into timed colored Petri nets in order to verify processes given by eEPCs with the CPN Tools.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>On the Move to Meaningful Internet Systems 2005: CoopIS, DOA, and ODBASE, OTM Confederated International Conferences CoopIS, DOA, and ODBASE 2005, Agia Napa, Cyprus, October 31 - November 4, 2005, Proceedings, Part I</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 16:08:47 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 19:06:04 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/11575771_14</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Robert Meersman</bibtex:person>
        <bibtex:person>Zahir Tari</bibtex:person>
        <bibtex:person>Mohand-Said Hacid</bibtex:person>
        <bibtex:person>John Mylopoulos</bibtex:person>
        <bibtex:person>Barbara Pernici</bibtex:person>
        <bibtex:person>\"Ozalp Babaoglu</bibtex:person>
        <bibtex:person>Hans-Arno Jacobsen</bibtex:person>
        <bibtex:person>Joseph P. Loyall</bibtex:person>
        <bibtex:person>Michael Kifer</bibtex:person>
        <bibtex:person>Stefano Spaccapietra</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pages>183-201</bibtex:pages>
      <bibtex:pdf>http://www.win.tue.nl/ ooanea/papers/HOSCoopIS05.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Colored Petri Nets to Verify Extended Event-Driven Process Chains</bibtex:title>
      <bibtex:volume>3760</bibtex:volume>
      <bibtex:year>2005</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/11575771_14</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="HeeOSSV_2006_msvveis">
    <bibtex:inproceedings>
      <bibtex:abstract>Choices in business processes are often based on the process history saved as a log-file listing events and their time stamps. In this paper we introduce a finite-path variant of the timed propositional logics with past for specifying guards in business process models. The novelty is due to the introduction of boundary points start and now corresponding to the starting and current observation points. Reasoning in presence of boundary points requires three-valued logics as one needs to distinguish between temporal formulas that hold, those that do not hold and ``unknown'' ones corresponding to ``open cases''. Finally, we extend a sub-language of the logics to take uncertainty into account.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Modelling, Simulation, Verification and Validation of Enterprise Information Systems, Proceedings of the 4th International Workshop on Modelling, Simulation, Verification and Validation of Enterprise Information Systems, MSVVEIS 2006, In conjunction with ICEIS 2006, Paphos, Cyprus, May 2006</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 16:08:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-22 19:22:05 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Joseph Barjis</bibtex:person>
        <bibtex:person>Ulrich Ultes-Nitsche</bibtex:person>
        <bibtex:person>Juan Carlos Augusto</bibtex:person>
      </bibtex:editor>
      <bibtex:month>May</bibtex:month>
      <bibtex:pages>76-85</bibtex:pages>
      <bibtex:pdf>http://www.msvveis.org/modelling.pdf</bibtex:pdf>
      <bibtex:publisher>INSTICC Press</bibtex:publisher>
      <bibtex:title>Modelling History-Dependent Business Processes</bibtex:title>
      <bibtex:year>2006</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="HeeOSSV_2006_scp">
    <bibtex:article>
      <bibtex:abstract>Choices in business processes are often based on the process history saved as a log-file listing events and their time stamps. In this paper we introduce LogLogics, a finite-path variant of the Timed Propositional Temporal Logic with Past, which can be in particular used for specifying guards in business process models. The novelty is due to the presence of boundary points corresponding to the starting and current observation points, which gives rise to a three-valued logic allowing us to distinguish between temporal formulas that hold for any log extended with some possible past and future (true), those that do not hold for any extended log (false) and those that hold for some but not all extended logs (unknown). We reduce the check of the truth value of a LogLogics formula to a check on a finite abstraction and present an evaluation algorithm. We also define LogLogics patterns for commonly occurring properties.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-06-20 16:07:23 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 16:11:43 +0200</bibtex:date-modified>
      <bibtex:doi>10.1016/j.scico.2006.08.004</bibtex:doi>
      <bibtex:journal>Sci. Comput. Program.</bibtex:journal>
      <bibtex:month>March</bibtex:month>
      <bibtex:number>1</bibtex:number>
      <bibtex:pages>30-40</bibtex:pages>
      <bibtex:title>LogLogics: A logic for history-dependent business processes</bibtex:title>
      <bibtex:volume>65</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1016/j.scico.2006.08.004</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="HeeOPSW_2006_acsd">
    <bibtex:inproceedings>
      <bibtex:abstract>This paper presents Yasper, a tool for modeling, analyzing and simulating workflow systems, based on Petri nets. Yasper puts Petri net modeling in the hands of business analysts and software architecture designers. They can specify systems in familiar terms (XOR choice, workflow, cases, roles, processing time and cost), and can directly run manual and automatic simulations on the resulting models to analyze correctness and performance. Yasper was designed to cooperate with other tools, such as Petri net analyzers, and off-the-shelf software for data (color) handling and forms handling.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Reinier Post</bibtex:person>
        <bibtex:person>Lou J. Somers</bibtex:person>
        <bibtex:person>Jan Martijn E. M. van der Werf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Sixth International Conference on Application of Concurrency to System Design (ACSD 2006), 28-30 June 2006, Turku, Finland</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 16:06:46 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-22 19:47:49 +0200</bibtex:date-modified>
      <bibtex:doi>10.1109/ACSD.2006.37</bibtex:doi>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>279-282</bibtex:pages>
      <bibtex:publisher>IEEE Computer Society</bibtex:publisher>
      <bibtex:title>Yasper: a tool for workflow modeling and analysis</bibtex:title>
      <bibtex:year>2006</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1109/ACSD.2006.37</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="HeeLOSSV_2006_atpn">
    <bibtex:inproceedings>
      <bibtex:abstract>We consider nested nets, i.e. Petri nets in which tokens can be Petri nets themselves. We study the value semantics of nested nets rather than the reference semantics, and apply nested nets to model adaptive workflow, i.e. flexible workflow that can be modified during the execution. A typical domain with a great need for this kind of workflow is health care, from which domain we choose the running example. To achieve the desired flexibility we allow transitions that create new nets out of the existing ones. Therefore, nets with completely new structure can be created at the run time. We show that by careful selection of basic operations on the nets we can obtain a powerful modeling formalism that enforces correctness of models. Moreover, the formalism can be implemented based on existing workflow engines.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Irina A. Lomazova</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Petri Nets and Other Models of Concurrency - ICATPN 2006, 27th International Conference on Applications and Theory of Petri Nets and Other Models of Concurrency, Turku, Finland, June 26-30, 2006, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 16:05:33 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 16:33:29 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/11767589_14</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Susanna Donatelli</bibtex:person>
        <bibtex:person>P. S. Thiagarajan</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>241-260</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Nested Nets for Adaptive Systems</bibtex:title>
      <bibtex:volume>4024</bibtex:volume>
      <bibtex:year>2006</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/11767589_14</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="HeeOSSVL_2007_fi">
    <bibtex:article>
      <bibtex:abstract>In this paper we consider adaptive workflow nets, a class of nested nets that allows more comfort and expressive power for modeling adaptability and exception handling in workflow nets. We define two important behavioural properties of adaptive workflow nets: soundness and circumspectness. Soundness means that a proper final marking (state) can be reached from any marking which is reachable from the initial marking, and no garbage will be left. Circumspectness means that the upper layer is always ready to handle any exception that can happen in a lower layer. We define a finite state abstraction for adaptive workflow nets and show that soundness and circumspectness can be verified on this abstraction.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
        <bibtex:person>Irina A. Lomazova</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-06-20 16:04:44 +0200</bibtex:date-added>
      <bibtex:date-modified>2010-01-28 23:52:18 +0100</bibtex:date-modified>
      <bibtex:journal>Fundam. Inform.</bibtex:journal>
      <bibtex:month>August</bibtex:month>
      <bibtex:number>3-4</bibtex:number>
      <bibtex:pages>347-362</bibtex:pages>
      <bibtex:title>Checking Properties of Adaptive Workflow Nets</bibtex:title>
      <bibtex:url>http://iospress.metapress.com/content/b04436367455777t/?p=0cec039f767e4c0dba96537aab9fcdd5&amp;pi=7</bibtex:url>
      <bibtex:volume>79</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://iospress.metapress.com/content/b04436367455777t/?p=0cec039f767e4c0dba96537aab9fcdd5&amp;pi=7</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="HeeOSSV_2006_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>In this paper we study the use of case history for control structures in workflow processes. In particular we introduce a history-dependent join. History dependent control offers much more modeling power than classical control structures and it solves several semantical problems of industrial modeling frameworks. We study the modeling power by means of workflow patterns. Since proper completion (i.e. the ability of any configuration reachable from the initial one to reach the final one) is always an important ''sanity check'' of process modeling, we introduce a modeling method that guarantees this property for the new control structures. Finally we consider an implementation of the proposed control structures on top of an existing workflow engine.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Business Process Management, 4th International Conference, BPM 2006, Vienna, Austria, September 5-7, 2006, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 16:03:54 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 16:31:28 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/11841760_16</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Schahram Dustdar</bibtex:person>
        <bibtex:person>Jos&#233; Luiz Fiadeiro</bibtex:person>
        <bibtex:person>Amit P. Sheth</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>225-240</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>History-Based Joins: Semantics, Soundness and Implementation</bibtex:title>
      <bibtex:volume>4102</bibtex:volume>
      <bibtex:year>2006</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/11841760_16</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="HeeOSV_2006_psi">
    <bibtex:inproceedings>
      <bibtex:abstract>We improve the decision procedure from [10] for the problem of generalized soundness of workflow nets. A workflow net is generalized sound iff every marking reachable from an initial marking with k tokens on the initial place terminates properly, i.e. it can reach a marking with k tokens on the final place, for an arbitrary natural number k. Our new decision procedure not only reports whether the net is sound or not, but also returns a counterexample in case the workflow net is not generalized sound. We report on experimental results obtained with the prototype we made and explain how the procedure can be used for the compositional verification of large workflows.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Olivia Oanea</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Marc Voorhoeve</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Perspectives of Systems Informatics, 6th International Andrei Ershov Memorial Conference, PSI 2006, Novosibirsk, Russia, June 27-30, 2006. Revised Papers</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 16:02:11 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-22 19:20:56 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-70881-0_21</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Irina Virbitskaite</bibtex:person>
        <bibtex:person>Andrei Voronkov</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>235-247</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Verifying Generalized Soundness for Workflow Nets</bibtex:title>
      <bibtex:volume>4378</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-70881-0_21</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Oanea_2007_phd">
    <bibtex:phdthesis>
      <bibtex:address>Eindhoven, The Netherlands</bibtex:address>
      <bibtex:author>Olivia Oanea</bibtex:author>
      <bibtex:date-added>2008-06-20 16:01:14 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-11-05 08:12:40 +0100</bibtex:date-modified>
      <bibtex:month>December</bibtex:month>
      <bibtex:pdf>http://alexandria.tue.nl/extra2/200711965.pdf</bibtex:pdf>
      <bibtex:school>Department of Mathematics and Computer Science, Eindhoven University of Technology</bibtex:school>
      <bibtex:title>Verification of soundness and other properties of business processes</bibtex:title>
      <bibtex:year>2007</bibtex:year>
    </bibtex:phdthesis>
  </bibtex:entry>

  <bibtex:entry id="Oanea_2008_pnds">
    <bibtex:inproceedings>
      <bibtex:author>Olivia Oanea</bibtex:author>
      <bibtex:booktitle>Proc. of the International Workshop on Petri Nets and Distributed Systems (PNDS'2008)</bibtex:booktitle>
      <bibtex:date-added>2008-06-20 16:00:21 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-20 16:09:52 +0200</bibtex:date-modified>
      <bibtex:month>June</bibtex:month>
      <bibtex:title>Soundness and related concepts for nested workflow nets</bibtex:title>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="StahlW_2008_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>We present a finite representation of all services M where the composition with a given service N is deadlock-free, and a given set of activities of N can be covered (i.e. is not dead). Our representation is an extension of the existing notion of an operating guideline which only cared about deadlock freedom. We further present an algorithm to decide whether a service M matches with the extended operating guideline of N.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Business Process Management, 6th International Conference, BPM 2008, Milan, Italy, September 1-4, 2008, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-05-13 10:15:24 +0200</bibtex:date-added>
      <bibtex:date-modified>2009-07-31 08:21:01 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-85758-7_11</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Marlon Dumas</bibtex:person>
        <bibtex:person>Manfred Reichert</bibtex:person>
        <bibtex:person>Ming-Chien Shan</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>116-131</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/StahlW_2008_bpm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Covering Places and Transitions in Open Nets</bibtex:title>
      <bibtex:volume>5240</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-85758-7_11</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2008_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>Many work has been conducted to analyze service choreographies to assert manyfold correctness criteria. While errors can be detected automatically, the correction of defective services is usually done manually. This paper introduces a graph-based approach to calculate the minimal edit distance between a given defective service and synthesized correct services. This edit distance helps to automatically fix found errors while keeping the rest of the service untouched. A prototypic implementation shows that the approach is applicable to real-life services.</bibtex:abstract>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:booktitle>Business Process Management, 6th International Conference, BPM 2008, Milan, Italy, September 1-4, 2008, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-05-12 18:10:26 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-10-04 20:19:04 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-85758-7_12</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Marlon Dumas</bibtex:person>
        <bibtex:person>Manfred Reichert</bibtex:person>
        <bibtex:person>Ming-Chien Shan</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>132-147</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2008_bpm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Correcting Deadlocking Service Choreographies Using a Simulation-Based Graph Edit Distance</bibtex:title>
      <bibtex:volume>5240</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-85758-7_12</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannK_2008_yrsoc">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Oliver Kopp</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>3rd Young Researchers Workshop on Service Oriented Computing, YR-SOC 2008, London, UK, 12-13 June 2008, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-04-13 16:27:39 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-17 22:58:09 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Monika Solanki</bibtex:person>
        <bibtex:person>Barry Norton</bibtex:person>
        <bibtex:person>Stephan Reiff-Marganiec</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:pages>74-75</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannK_2008_yrsoc.pdf</bibtex:pdf>
      <bibtex:title>Tools4BPEL4Chor</bibtex:title>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="KaschnerL_2008_yrsoc">
    <bibtex:inproceedings>
      <bibtex:abstract>Service-oriented computing (SOC) proposes loosely coupled interacting services as building blocks for distributed applications. This distributed nature makes the guarantee of correctness a challenging task. Based on the specification of a service (the public view), we introduce an approach to automatically generate test cases for black-box testing to check for compliance between the specification and the implementation of a service whose internal behavior might be secret.</bibtex:abstract>
      <bibtex:address>London, UK</bibtex:address>
      <bibtex:author>
        <bibtex:person>Kathrin Kaschner</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>3rd Young Researchers Workshop on Service Oriented Computing, YR-SOC 2008, London, UK, 12-13 June 2008, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-04-13 16:26:33 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-17 22:57:22 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Monika Solanki</bibtex:person>
        <bibtex:person>Barry Norton</bibtex:person>
        <bibtex:person>Stephan Reiff-Marganiec</bibtex:person>
      </bibtex:editor>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>21-26</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/KaschnerL_2008_yrsoc.pdf</bibtex:pdf>
      <bibtex:publisher>Imperial College</bibtex:publisher>
      <bibtex:title>Automatic Test Case Generation for Services</bibtex:title>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2008_yrsoc">
    <bibtex:inproceedings>
      <bibtex:abstract>Many work has been conducted to analyze services and service choreographies to assert manyfold correctness criteria. While errors can be detected automatically, the correction of defective services is usually done manually. This paper introduces a graph-based approach to calculate the minimal edit distance between a given defective service and synthesized correct services. This edit distance helps to automatically fix found errors while keeping the rest of the service untouched.</bibtex:abstract>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:booktitle>3rd Young Researchers Workshop on Service Oriented Computing, YR-SOC 2008, London, UK, 12-13 June 2008, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2008-04-13 16:24:53 +0200</bibtex:date-added>
      <bibtex:date-modified>2008-06-17 22:58:12 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Monika Solanki</bibtex:person>
        <bibtex:person>Barry Norton</bibtex:person>
        <bibtex:person>Stephan Reiff-Marganiec</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:pages>13-20</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2008_yrsoc.pdf</bibtex:pdf>
      <bibtex:title>Fixing Deadlocking Service Choreographies Using a Simulation-based Graph Edit Distance</bibtex:title>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="MassutheSSW_2008_tr_cs0108">
    <bibtex:techreport>
      <bibtex:abstract>We study open nets as Petri net models of web services, with a link to the practically relevant language WS-BPEL. For those nets, we investigate the problem of serviceableness which we consider as fundamental as the successful notion of soundness for workflow nets, i.e. Petri net models of business processes and workflows. While we could give algorithmic solutions to the serviceableness problem for subclasses of open nets in earlier work, this article shows that the problem is in general undecidable.</bibtex:abstract>
      <bibtex:address>Rostock, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Alexander Serebrenik</bibtex:person>
        <bibtex:person>Natalia Sidorova</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-03-20 11:24:55 +0100</bibtex:date-added>
      <bibtex:date-modified>2008-07-21 10:04:33 +0200</bibtex:date-modified>
      <bibtex:institution>Universit&#228;t Rostock</bibtex:institution>
      <bibtex:month>March</bibtex:month>
      <bibtex:number>CS-01-08</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/MassutheSSW_2008_tr_cs0108.pdf</bibtex:pdf>
      <bibtex:title>Can I find a Partner?</bibtex:title>
      <bibtex:type>Preprint</bibtex:type>
      <bibtex:year>2008</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="AalstMSW_2007_hub_tr213">
    <bibtex:techreport>
      <bibtex:abstract>A contract specifies an interorganizational process together with a distribution of responsibilities for the activities among the parties involved. In this paper, we formally show how a party can implement its part of the contract such that the implementation accords with the contract. We propose a formal notion of a contract and give a criterion for accordance between a local implementation and a contract such that, if all local implementations accord with the contract, the overall process is deadlock-free and it is always possible to terminate properly. Then, we sketch a technique for automatically checking the proposed accordance criterion. Finally, we present accordance-preserving transformation rules. These rules can be used to implement a part of the contract while preserving the accordance criterion.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Wil M. P. van der Aalst</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2008-02-14 14:11:02 +0100</bibtex:date-added>
      <bibtex:date-modified>2008-03-12 10:35:14 +0100</bibtex:date-modified>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>June</bibtex:month>
      <bibtex:number>213</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/AalstMSW_2007_hub_tr213.pdf</bibtex:pdf>
      <bibtex:title>Multiparty Contracts: Agreeing and Implementing Interorganizational Processes</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2007</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="KoenigLMSW_2008_www">
    <bibtex:inproceedings>
      <bibtex:abstract>WS-BPEL defines a standard for executable processes. Executable processes are business processes which can be automated through an IT infrastructure. The WS-BPEL specification also introduces the concept of abstract processes: In contrast to their executable siblings, abstract processes are not executable and can have parts where business logic is disguised. Nevertheless, the WS-BPEL specification introduces a notion of compatibility between such an under-specified abstract process and a fully specified executable one. Basically, this compatibility notion defines a set of syntactical rules that can be augmented or restricted by profiles. So far, there exist two of such profiles: the Abstract Process Profile for Observable Behavior and the Abstract Process Profile for Templates. None of these profiles defines a concept of behavioral equivalence. Therefore, both profiles are too strict with respect to the rules they impose when deciding whether an executable process is compatible to an abstract one. In this paper, we propose a novel profile that extends the existing Abstract Process Profile for Observable Behavior by defining a behavioral relationship. We also show that our novel profile allows for more flexibility when deciding whether an executable and an abstract process are compatible.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Dieter K&#246;nig</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Simon Moser</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 17th International Conference on World Wide Web, WWW 2008, Beijing, China, April 21-25, 2008</bibtex:booktitle>
      <bibtex:date-added>2008-01-15 22:21:55 +0100</bibtex:date-added>
      <bibtex:date-modified>2008-08-30 23:06:30 +0200</bibtex:date-modified>
      <bibtex:doi>10.1145/1367497.1367603</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Wei-Ying Ma</bibtex:person>
        <bibtex:person>Andrew Tomkins</bibtex:person>
        <bibtex:person>Xiaodong Zhang</bibtex:person>
      </bibtex:editor>
      <bibtex:month>April</bibtex:month>
      <bibtex:organization>ACM</bibtex:organization>
      <bibtex:pages>785-794</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/KoenigLMSW_2008_www.pdf</bibtex:pdf>
      <bibtex:slides>foo</bibtex:slides>
      <bibtex:title>Extending the Compatibility Notion for Abstract WS-BPEL Processes</bibtex:title>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1145/1367497.1367603</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannK_2008_mod">
    <bibtex:inproceedings>
      <bibtex:abstract>On the one hand, Petri net models have a successful history in the modeling, simulation, and verification of workflows and business processes. On the other hand, BPEL is the de facto standard for describing executable Web service-based business processes. With abstract BPEL processes, BPEL can also be used as modeling language. However, being a complicated language with many syntactic constraints, abstract BPEL processes impede a straightforward modeling.  In this paper, we introduce a fully-automatic translation of Petri net models into abstract BPEL processes which can be refined to executable BPEL processes. This approach combines strengths of Petri nets in modeling and verification with the ability to execute BPEL processes. Furthermore, it completes the Tools4BPEL framework to synthesize BPEL processes which are correct by design.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Jens Kleine</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Modellierung 2008, 12.-14. M&#228;rz 2008, Berlin, Proceedings</bibtex:booktitle>
      <bibtex:date-added>2007-12-22 10:59:02 +0100</bibtex:date-added>
      <bibtex:date-modified>2008-03-20 11:47:14 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Thomas K&#252;hne</bibtex:person>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Friedrich Steimann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>57-72</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannK_2008_mod.pdf</bibtex:pdf>
      <bibtex:publisher>GI</bibtex:publisher>
      <bibtex:series>Lecture Notes in Informatics (LNI)</bibtex:series>
      <bibtex:title>Fully-automatic Translation of Open Workflow Net Models into Simple Abstract BPEL Processes</bibtex:title>
      <bibtex:volume>P-127</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="KoenigLMSW_2007_tr_cs0207">
    <bibtex:techreport>
      <bibtex:abstract>WS-BPEL defines a standard for executable business processes. Executable processes are business processes which can be automated through an IT infrastructure. The WS-BPEL specification also introduces the concept of abstract processes: In contrast to their executable siblings, abstract processes are not executable and can have parts where business logic is disguised. Nevertheless, the WS-BPEL specification introduces a notion of compatibility between such an under-specified abstract process and a fully specified executable one. Basically, this compatibility notion defines a set of syntactical rules that can be augmented or restricted by profiles. So far, there exists two of such profiles: the Abstract Process Profile for Observable Behavior and the Abstract Process Profile for Templates. None of these profiles defines a concept of behavioral equivalence. Therefore, both profiles are too strict with respect to the rules they impose when deciding whether an executable process is compatible to an abstract one. In this paper, we propose a novel profile that extends the existing Abstract Process Profile for Observable Behavior by defining a behavioral relationship. We also show that our novel profile allows for more flexibility when deciding whether an executable and an abstract process are compatible.</bibtex:abstract>
      <bibtex:address>Rostock, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Dieter K&#246;nig</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Simon Moser</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-added>2007-11-21 12:41:21 +0100</bibtex:date-added>
      <bibtex:date-modified>2007-11-21 13:10:47 +0100</bibtex:date-modified>
      <bibtex:institution>Universit&#228;t Rostock</bibtex:institution>
      <bibtex:month>November</bibtex:month>
      <bibtex:number>CS-02-07</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/KoenigLMSW_2007_tr_cs0207.pdf</bibtex:pdf>
      <bibtex:title>Extending the Compatibility Notion for Abstract WS-BPEL Processes</bibtex:title>
      <bibtex:type>Preprint</bibtex:type>
      <bibtex:year>2007</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="LoLA">
    <bibtex:misc>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:date-added>2007-11-12 12:48:29 +0100</bibtex:date-added>
      <bibtex:date-modified>2008-01-15 23:33:01 +0100</bibtex:date-modified>
      <bibtex:howpublished>Petrinetzbasiertes Werkzeug zur Verifikation diverser temporallogischer Spezifikationen. Integriert in die Werkzeuge CPN-AMI (Univ. Paris VI), Model Checking Kit (Univ. Stuttgart) und Helena (CNAM Paris). Ca. 30.000 Zeilen Quelltext.</bibtex:howpublished>
      <bibtex:title>LoLA: A Low Level Analyser</bibtex:title>
      <bibtex:url>http://www.informatik.hu-berlin.de/ kschmidt/lola.html</bibtex:url>
      <bibtex:year>1999</bibtex:year>
      <bibtex:bdsk-url-1>http://www.informatik.hu-berlin.de/ kschmidt/lola.html</bibtex:bdsk-url-1>
    </bibtex:misc>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1997_tud_al9">
    <bibtex:techreport>
      <bibtex:abstract>Symmetric net structure yields symmetric net behaviour. Thus, knowing the symmetries of a net, redundant calculations can be skipped.  We present a framework for the calculation of symmetries for several net classes including place-transition nets, timed nets, stochastic nets, self-modifying nets, nets with inhibitor arcs, and many others. Our approach allows the specification of difffierent symmetry groups. Additionally it provides facilities either to calculate symmetries on demand while running the actual analysis algorithm, or to calculate them in advance. For the latter case we define and calculate a ground set of symmetries. Such a set has polynomial size and is sufficient for an efficient implementation of the for all symmetries loop and the partition of net elements into equivalence classes. These two constructions are the usual way to integrate symmetries into an analysis algorithm.</bibtex:abstract>
      <bibtex:address>Dresden, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:date-added>2007-11-12 11:53:44 +0100</bibtex:date-added>
      <bibtex:date-modified>2007-11-12 11:54:08 +0100</bibtex:date-modified>
      <bibtex:institution>Dresden University of Technology</bibtex:institution>
      <bibtex:number>MATH-AL-9-1997</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1997_tud_al8.pdf</bibtex:pdf>
      <bibtex:title>Model-Checking with Coverability Graphs</bibtex:title>
      <bibtex:type>Technical Report</bibtex:type>
      <bibtex:year>1997</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="MinorS_2006_mod">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Mirjam Minor</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Modellierung 2006, 22.-24. M&#228;rz 2006, Innsbruck, Tirol, Austria, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-05-14 23:36:43 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Heinrich C. Mayr</bibtex:person>
        <bibtex:person>Ruth Breu</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>293-296</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/MinorS_2006_mod.pdf</bibtex:pdf>
      <bibtex:publisher>GI</bibtex:publisher>
      <bibtex:series>Lecture Notes in Informatics (LNI)</bibtex:series>
      <bibtex:title>Automatic Transformation and Enlargement of Similarity Models for Case-Based Reasoning</bibtex:title>
      <bibtex:volume>P-82</bibtex:volume>
      <bibtex:year>2006</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2002_promise">
    <bibtex:inproceedings>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Prozessorientierte Methoden und Werkzeuge f&#252;r die Entwicklung von Informationssystemen - Promise 2002, 9.-11. Oktober 2002, Potsdam</bibtex:booktitle>
      <bibtex:date-modified>2008-01-31 15:12:46 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>J&#246;rg Desel</bibtex:person>
        <bibtex:person>Mathias Weske</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:pages>94-103</bibtex:pages>
      <bibtex:publisher>GI</bibtex:publisher>
      <bibtex:series>Lecture Notes in Informatics (LNI)</bibtex:series>
      <bibtex:title>Distributed Verification with LoLA</bibtex:title>
      <bibtex:volume>P-21</bibtex:volume>
      <bibtex:year>2002</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2002_csp">
    <bibtex:inproceedings>
      <bibtex:abstract>We report work in progress on a distributed version of explicit state space generation in the Petri net verification tool LoLA. We propose a data structure where all available memory of all involved workstations can be fully exploited, and load balancing actions are possible at any time while the verification is running. I t is even possible to extend the set of involved workstations which a verification is running.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Workshop Concurrency, Specification and Programming CS&amp;P 2002, Berlin; Oct. 7-9, Vol. 2</bibtex:booktitle>
      <bibtex:date-modified>2008-01-16 08:11:25 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Hans-Dieter Burkhard</bibtex:person>
        <bibtex:person>L. Czaja</bibtex:person>
        <bibtex:person>G. Lindemann</bibtex:person>
        <bibtex:person>A. Skowdron</bibtex:person>
        <bibtex:person>Peter H. Starke</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:note>Appeared as Informatik-Berichte Nr. 161</bibtex:note>
      <bibtex:pages>317-326</bibtex:pages>
      <bibtex:publisher>Humbolt-Universit&#228;t zu Berlin</bibtex:publisher>
      <bibtex:title>Distributed Verification with LoLA</bibtex:title>
      <bibtex:year>2002</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1999_hub_tr122">
    <bibtex:techreport>
      <bibtex:abstract>We present three methods for the integration of symmetries into reachability analysis. Two of them lead to perfect reduction but their runtime depends on the symmetry structure. The third one works always fast but does not always yield perfect reduction.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:number>122</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1999_hub_tr122.pdf</bibtex:pdf>
      <bibtex:title>Integrating Low Level Symmetries into Reachability Analysis</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>1999</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1998_pnn">
    <bibtex:article>
      <bibtex:abstract>In INA 2.1, the whole symmetry approach has been revised. We calculate and store only a generating set of the symmetries. This yields a signicant save of time and space. For every iteration of the symmetries during the generation of reduced reachability or coverability graphs, we compose the symmetries systematically without storing more symmetries permanently than the generating set. The time for composing the symmetries, instead of jumping from pointer to pointer in the old version, is compensated by the ability to exclude whole blocks of symmetries from the iteration.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:journal>Petri Net Newsletter</bibtex:journal>
      <bibtex:pages>22-30</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1998_pnn.pdf</bibtex:pdf>
      <bibtex:title>On the New Low Level Symmetry Tool in INA</bibtex:title>
      <bibtex:volume>54</bibtex:volume>
      <bibtex:year>1998</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1997_tud_al8">
    <bibtex:techreport>
      <bibtex:abstract>Symmetric net structure yields symmetric net behaviour. Thus, knowing the symmetries of a net, redundant calculations can be skipped.  We present a framework for the calculation of symmetries for several net classes including place-transition nets, timed nets, stochastic nets, self-modifying nets, nets with inhibitor arcs, and many others. Our approach allows the specification of difffierent symmetry groups. Additionally it provides facilities either to calculate symmetries on demand while running the actual analysis algorithm, or to calculate them in advance. For the latter case we define and calculate a ground set of symmetries. Such a set has polynomial size and is sufficient for an efficient implementation of the for all symmetries loop and the partition of net elements into equivalence classes. These two constructions are the usual way to integrate symmetries into an analysis algorithm.</bibtex:abstract>
      <bibtex:address>Dresden, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:institution>Dresden University of Technology</bibtex:institution>
      <bibtex:number>MATH-AL-8-1997</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1997_tud_al8.pdf</bibtex:pdf>
      <bibtex:title>How to Calculate Symmetries of Petri Nets</bibtex:title>
      <bibtex:type>Technical Report</bibtex:type>
      <bibtex:year>1997</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1994_csp">
    <bibtex:inproceedings>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Workshop CS&amp;P Berlin 1994</bibtex:booktitle>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1994_hub_tr31.pdf</bibtex:pdf>
      <bibtex:title>Parameterized Reachability Trees for Algebraic Petri Nets</bibtex:title>
      <bibtex:year>1994</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1995_awpn">
    <bibtex:inproceedings>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Workshop Algorithmen und Werkzeuge f&#252;r Petrinetze, Oldenburg, October 10-11, 1995</bibtex:booktitle>
      <bibtex:editor>
        <bibtex:person>J&#246;rg Desel</bibtex:person>
        <bibtex:person>H. Fleischhack</bibtex:person>
        <bibtex:person>Andreas Oberweis</bibtex:person>
        <bibtex:person>M. Sonnenschein</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:organization>Universit&#228;t Oldenburg</bibtex:organization>
      <bibtex:pages>1-3</bibtex:pages>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1995_awpn.pdf</bibtex:pdf>
      <bibtex:title>Symmetrieberechnung</bibtex:title>
      <bibtex:year>1995</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1995_csp">
    <bibtex:inproceedings>
      <bibtex:abstract>We consider several applications of net symmetries for various Petri net classes. We show, that almost all computations of symmetry groups for different net classes and almost all decision problems which appear when applying symmetric reductions can be traced back to a single algorithm. This is a very pleasing result for a multi purpose analysis tool like INA (see for instance [Fel92]). For the two exceptions from this general result - the computation of symmetry groups for self-modifying nets ([Val77]) and the decision of the coverability problem for place/transition nets we present extensions of the basic algorithm.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Proc. Workshop CS&amp;P, Warsaw, Poland</bibtex:booktitle>
      <bibtex:month>October</bibtex:month>
      <bibtex:pages>147-162</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1995_csp.pdf</bibtex:pdf>
      <bibtex:title>Symmetry Calculation</bibtex:title>
      <bibtex:year>1995</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="SchmidtS_1991_pnn">
    <bibtex:article>
      <bibtex:author>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Peter H. Starke</bibtex:person>
      </bibtex:author>
      <bibtex:journal>Petri Net Newsletter</bibtex:journal>
      <bibtex:month>December</bibtex:month>
      <bibtex:pages>25-30</bibtex:pages>
      <bibtex:title>An Algorithm to Compute the Symmetries of Petri Nets</bibtex:title>
      <bibtex:volume>40</bibtex:volume>
      <bibtex:year>1991</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1993_pnn">
    <bibtex:article>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:journal>Petri Net Newsletter</bibtex:journal>
      <bibtex:pages>9-25</bibtex:pages>
      <bibtex:title>Symmetries of Petri Nets</bibtex:title>
      <bibtex:volume>43</bibtex:volume>
      <bibtex:year>1993</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1994_awpn">
    <bibtex:inproceedings>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Algorithmen und Werkzeuge f&#252;r Petrinetze, Workshop der GI-Fachrgruppe 0.0.1 ``Petrinetze und verwandte Systemmodelle'', Berlin</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:18:06 +0100</bibtex:date-modified>
      <bibtex:month>October</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>55-60</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1994_awpn.pdf</bibtex:pdf>
      <bibtex:title>Symbolische Analysemethoden f&#252;r algebraische Petrinetze</bibtex:title>
      <bibtex:year>1994</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1994_hub_tr31">
    <bibtex:techreport>
      <bibtex:abstract>A detailed observation of the structure of T-invariants leads to the definition of a subset of invariants, which generates the whole set of invariants by linear combination and instantiation and the elements of which have a simple structure by means of computation. Then an algorithmically insoluble problem concerning T-invariants is presented to justify the non-termination of the algorithm which computes this subset of invariants. The algorithm consists mainly of a clever application of term unification.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>September</bibtex:month>
      <bibtex:number>31</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1994_hub_tr31.pdf</bibtex:pdf>
      <bibtex:title>T-Invariants of Algebraic Petri Nets</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>1994</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1993_csp">
    <bibtex:inproceedings>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Workshop on Concurrency, Specification and Programming (CS&amp;P'93), Warsaw, Poland, Proceedings</bibtex:booktitle>
      <bibtex:pages>196-218</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1993_csp.pdf</bibtex:pdf>
      <bibtex:title>Computation of Invariants for Algebraic Petri Nets</bibtex:title>
      <bibtex:year>1993</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1994_hub_tr33">
    <bibtex:techreport>
      <bibtex:abstract>A definition of Petri net symmetries is given and an algorithm is introduced, which computes these symmetries. Then three examples are given how algorithms from different fields of Petri net analysis can be improved using symmetries, namely computation of reachability graphs, semipositive place invariants and structural deadlocks, respectively.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>October</bibtex:month>
      <bibtex:number>33</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1994_hub_tr33.pdf</bibtex:pdf>
      <bibtex:title>Symmetries of Petri Nets</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>1994</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1993_da">
    <bibtex:mastersthesis>
      <bibtex:abstract>Nach der Definition des Begriffs algebraischer Petrinetze und der Diskussion der dazugehorenden Invariantenbegrie werden die wesentlichen Entwurfsentscheidungen zur Implementation der Umgebung des Programms IVAN Invariant Verification of Algebraic Nets besprochen Dieses Programm soll gegebene Invarianten auf Korrektheit &#252;berprufen und Hilfswerkzeuge zur Unterstutzung der Suche nach Invarianten anbieten Zur Umgebung von IVAN gehoren ein Kommandointerpreter zur interaktiven Anwendung der Werkzeuge und zur Bearbeitung von algebraischen Netzen und Invarianten sowie ein Parser zum Einlesen externer Netz und Invariantenbeschreibungen.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:date-modified>2008-05-08 18:29:30 +0200</bibtex:date-modified>
      <bibtex:month>November</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1993_da.pdf</bibtex:pdf>
      <bibtex:school>Humboldt-Universit&#228;t zu Berlin, Fachbereich Informatik</bibtex:school>
      <bibtex:title>Implementation der Umgebung eines Programms zur Pr&#252;fung und Berechnung von Invarianten algebraischer Petrinetze</bibtex:title>
      <bibtex:type>Diplomarbeit</bibtex:type>
      <bibtex:year>1993</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1995_atpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Parameterized reachability trees have been proposed by M. Lindquist for predicate/transition nets. We discuss the application of this concept to algebraic nets. For this purpose a modification of several definitions is necessary due to the different net descriptions, transition rules and theoretical backgrounds. That's why we present the concept from the bottom for algebraic nets. Furthermore we discuss the combination of parameterized reachability analysis with the well known stubborn set method.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Application and Theory of Petri Nets 1995, 16th International Conference, Turin, Italy, June 26-30, 1995, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:17:44 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-60029-9_51</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Giorgio De Michelis</bibtex:person>
        <bibtex:person>Michel Diaz</bibtex:person>
      </bibtex:editor>
      <bibtex:pages>392-411</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Parameterized Reachability Trees for Algebraic Petri Nets</bibtex:title>
      <bibtex:volume>935</bibtex:volume>
      <bibtex:year>1995</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/3-540-60029-9_51</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1995_strict">
    <bibtex:inproceedings>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Structures in Concurrency Theory, Proceedings of the International Workshop on Structures in Concurrency Theory (STRICT), Berlin, 11-13 May 1995</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:17:37 +0100</bibtex:date-modified>
      <bibtex:editor>J&#246;rg Desel</bibtex:editor>
      <bibtex:month>May</bibtex:month>
      <bibtex:pages>310-325</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1995_strict.pdf</bibtex:pdf>
      <bibtex:title>On the Computation of Place Invariants for Algebraic Petri Nets</bibtex:title>
      <bibtex:year>1995</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="BestEWW_2007_psi">
    <bibtex:inproceedings>
      <bibtex:abstract>We study whether transition sequences that transform markings with multiples of a number k on each place can be separated into k sequences, each transforming one k-th of the original marking. We prove that such a separation is possible for marked graph Petri nets, and present an inseparable sequence for a free-choice net.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Eike Best</bibtex:person>
        <bibtex:person>Javier Esparza</bibtex:person>
        <bibtex:person>Harro Wimmel</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Perspectives of Systems Informatics, 6th International Andrei Ershov Memorial Conference, PSI 2006, Novosibirsk, Russia, June 27-30, 2006. Revised Papers</bibtex:booktitle>
      <bibtex:date-modified>2009-04-26 01:34:02 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-70881-0_1</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Irina Virbitskaite</bibtex:person>
        <bibtex:person>Andrei Voronkov</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>1-18</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Seperability of Confict-Free Petri Nets</bibtex:title>
      <bibtex:volume>4378</bibtex:volume>
      <bibtex:year>2006</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-70881-0_1</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Wolf_2007_atpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Most specific characteristics of (Place/Transition) Petri nets can be traced back to a few basic features including the monotonicity of the enabling condition, the linearity of the firing rule, and the locality of both. These features enable ``Petri net'' analysis techniques such as the invariant calculus, the coverability graph technique, approaches based on unfolding, or structural (such as siphon/trap based) analysis. In addition, most verification techniques developed outside the realm of Petri nets can be applied to Petri nets as well.  In this paper, we want to demonstrate that the basic features of Petri nets do not only lead to additional analysis techniques, but as well to improved implementations of formalism-independent techniques. As an example, we discuss the explicit generation of a state space. We underline our arguments with some experience from the implementation and use of the Petri net based state space tool LoLA.</bibtex:abstract>
      <bibtex:author>Karsten Wolf</bibtex:author>
      <bibtex:booktitle>28th International Conference on Applications and Theory of Petri Nets and Other Models of Concurrency, ICATPN 2007, Siedlce, Poland, June 25-29, 2007, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2009-05-04 10:58:47 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-73094-1_5</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Jetty Kleijn</bibtex:person>
        <bibtex:person>Alex Yakovlev</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:note>Invited lecture</bibtex:note>
      <bibtex:pages>29-42</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Wolf_2007_atpn.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Generating Petri Net State Spaces</bibtex:title>
      <bibtex:volume>4546</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-73094-1_5</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Wolf_2007_sttt">
    <bibtex:article>
      <bibtex:abstract>In the context of Petri nets, we propose an automated construction of a progress measure which is an important pre-requisite for a state space reduction technique called the sweep-line method. Our construction is based on linear-algebraic techniques concerning the transition vectors of the Petri net under consideration. We further discuss the possible combination of the sweep-line method with other state space reduction techniques (partial order reduction, the symmetry method).</bibtex:abstract>
      <bibtex:author>Karsten Wolf</bibtex:author>
      <bibtex:doi>10.1007/s10009-005-0201-1</bibtex:doi>
      <bibtex:journal>STTT</bibtex:journal>
      <bibtex:month>June</bibtex:month>
      <bibtex:number>3</bibtex:number>
      <bibtex:pages>195-203</bibtex:pages>
      <bibtex:title>Automated Generation of a Progress Measure for the Sweep-Line Method</bibtex:title>
      <bibtex:volume>8</bibtex:volume>
      <bibtex:year>2006</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/s10009-005-0201-1</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="MassutheW_2007_ijbpim">
    <bibtex:article>
      <bibtex:abstract>Interorganisational cooperation is more and more organised by the paradigm of services. Service-Oriented Architectures (SOA) provide a general framework for service interaction. SOA describe three roles of services, the service provider, the service requester and the service broker, together with the three operations publish, find and bind. We provide a formal method based on non-deterministic automata to model services and their interaction. In this paper, we restrict ourselves to finite and acyclic automata. We suggest operating guidelines as a convenient and intuitive artefact to realise the publish operation. In our approach, the find operation reduces to a matching problem between the requester's service and the published operating guidelines. If matching services are actually bound together, our approach guarantees deadlock-free interaction. In this paper, matching of deterministic as well as non-deterministic automata with operating guidelines is presented.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-modified>2009-05-19 10:08:08 +0200</bibtex:date-modified>
      <bibtex:doi>10.1504/IJBPIM.2007.015129</bibtex:doi>
      <bibtex:journal>Int. J. Business Process Integration and Management</bibtex:journal>
      <bibtex:number>2</bibtex:number>
      <bibtex:pages>81-90</bibtex:pages>
      <bibtex:title>An Algorithm for Matching Nondeterministic Services with Operating Guidelines</bibtex:title>
      <bibtex:volume>2</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1504/IJBPIM.2007.015129</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="LohmannMW_2007_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>Recently, we introduced the concept of an operating guideline of a service as a structure that characterizes all its properly interacting partner services. The hitherto considered correctness criterion is deadlock freedom of the composition of both services. In practice, there are intended and unintended deadlock-freely interacting partners of a service. In this paper, we provide a formal approach to express intended and unintended behavior as behavioral constraints. With such a constraint, unintended partners can be "filtered" yielding a customized operating guideline. Customized operating guidelines can be applied to validate a service and for service discovery.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Business Process Management, 5th International Conference, BPM 2007, Brisbane, Australia, September 24-28, 2007, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:06:02 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-75183-0_20</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Gustavo Alonso</bibtex:person>
        <bibtex:person>Peter Dadam</bibtex:person>
        <bibtex:person>Michael Rosemann</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>271-287</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannMW_2007_bpm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Behavioral Constraints for Services</bibtex:title>
      <bibtex:volume>4714</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-75183-0_20</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="FrenklerS_2005_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Wie erweitern in dieser Arbeit Workflow-Module um ein Konzept, mit dem derEinflu\ss eines Datenbanksystems auf die Bedienbarkeit eines Gesch&#228;ftsprozesses untersucht werden kann. Wir integrieren transaktionale Eigenschaften als internes Verhalten in Workflow-Module und k&#246;nnen damit Bedienbarkeit und Einhaltung transaktionaler Eigenschaften durch Analyse entscheiden.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Carsten Frenkler</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:booktitle>12. Workshop ``Algorithmen und Werkzeuge f&#252;r Petrinetze'' (AWPN 2005), Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-01-16 08:10:14 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:note>Appeared as Informatik-Berichte Nr. 192</bibtex:note>
      <bibtex:pages>72-77</bibtex:pages>
      <bibtex:pdf>http://www2.informatik.hu-berlin.de/top/download/publications/awpn2005.pdf</bibtex:pdf>
      <bibtex:publisher>Humboldt-Universit&#228;t zu Berlin</bibtex:publisher>
      <bibtex:title>Modellierung und Analyse transaktionaler Gesch&#228;ftsprozesse</bibtex:title>
      <bibtex:year>2005</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="SchmidtS_2005_hub_tr192">
    <bibtex:techreport>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>September</bibtex:month>
      <bibtex:number>192</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/SchmidtS_2005_hub_tr192.pdf</bibtex:pdf>
      <bibtex:title>12. Workshop Algorithmen und Werkzeuge f&#252;r Petrinetze (AWPN 2005), Proceedings</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2005</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="ReisigSS_2005_hub_tr182">
    <bibtex:techreport>
      <bibtex:abstract>Verteilte Gesch&#228;ftsprozesse nutzen das Internet, um auf heterogenen Rechnerstrukturen Dienste auszubieten. Modellierungstechniken und Implementierungssprachen f&#252;r solche Dienste werfen im Vergleich mit herk&#246;mmlichen Rechnern grundlegend neue Fragestellungen auf. Wir diskutieren einige davon und zeigen, wie Petrinetze ihre Beantwortung erm&#246;glichen.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>February</bibtex:month>
      <bibtex:number>182</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/ReisigSS_2005_hub_tr182.pdf</bibtex:pdf>
      <bibtex:title>Verteilte Gesch&#228;ftsprozesse modellieren und analysieren</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2005</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1996_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Zur Verifikation der im Titel genannten Klasse von Formeln einer &#252;ber der Interleaving-Semantik eines Platz-Transitions-Netzes interpretierten Branching-Time-Logik werden nur die terminalen stark zusammenh&#228;ngenden Komponenten des Erreichbarkeitsgraphen ben&#246;tigt. Das vorgeschlagene Verfahren kombiniert die Methode sturer Mengen zum m&#246;glichst schnellen und sparsamen Erreichen der terminalen Komponenten eines Graphen mit der symbolischen Berechnung von Erreichbarkeitsmengen mit Entscheidungsgraphen zur vollst&#228;ndigen, aber kompakten Repr&#228;sentation der terminalen Komponenten.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:booktitle>3. Workshop Algorithmen und Werkzeuge f&#252;r Petrinetze (AWPN 1996)</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:17:13 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>J&#246;rg Desel</bibtex:person>
        <bibtex:person>Ekkart Kindler</bibtex:person>
        <bibtex:person>Andreas Oberweis</bibtex:person>
      </bibtex:editor>
      <bibtex:month>October</bibtex:month>
      <bibtex:organization>Universit&#228;t Karlsruhe</bibtex:organization>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1996_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>Universit&#228;t Karlsruhe</bibtex:publisher>
      <bibtex:title>Ein Verfahren zur Verifikation von `Immer m&#246;glich' und `M&#246;glich, da\ss immer'-Eigenschaften</bibtex:title>
      <bibtex:year>1996</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1996_phd">
    <bibtex:phdthesis>
      <bibtex:abstract>The text of this book is a dissertation, submitted to Humboldt-University in Berlin. It deals with symbolic analysis methods for algebraic Petri nets. For this kind of high-level nets algebraic specifications are used to describe the individuality of tokens. Though it is possible to specify infinite data types and therefore many standard properties are undecidable for this net class there should be a computer aid for the analysis of algebraic nets.  The formalism of algebraic specifications provides a syntactic framework for symbolic calculations, in particular rewriting techniques for deciding equivalence of descriptions and solving equations. We study how these techniques can be involved in well known Petri net analysis methods, namely invariant calculus and reachability graph construction.  Chapter I introduces the main concepts used in the remaining chapters. It contains a short introduction of algebraic specifications, the definition of algebraic Petri nets and their interpretation.  In chapter II we compare invariant definitions for place transition nets, coloured nets and algebraic nets. Then we investigate the structure of place invariants and transition invariants for algebraic nets and end up in the characterization of small generator sets. We develop an algorithm to enumerate such a generator set. Thereby the calculations are traced back to unification problems. We prove that an algorithm which computes a generator set for all transition invariants cannot always terminate since it is undecidable whether an algebraic net has non-trivial transition invariants or not. We propose simplifications of the analysis problems which allow to circumvent the major computational problems.  In chapter III we take up the idea of parameterized reachability graphs which have been introduced for predicate/transition nets. We translate this method to the formalism of algebraic nets. Thereby we apply several improvements which allow stronger implications between the graph and the behavior of the underlying nets. We present ideas how the stubborn set method can be used to reduce the size of a parametrized reachability graph.  Chapter IV contains examples where we demonstrate our methods and general conclusions.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:date-modified>2010-09-03 14:34:48 +0200</bibtex:date-modified>
      <bibtex:note>Erschienen im Dieter Bertz Verlag. 246 Seiten, ISBN 3-929470-54-3</bibtex:note>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1996_phd.pdf</bibtex:pdf>
      <bibtex:school>Humboldt-Universit&#228;t zu Berlin, Mathematisch-Naturwissenschaftliche Fakult&#228;t II</bibtex:school>
      <bibtex:title>Symbolische Analysemethoden f&#252;r algebraische Petri-Netze</bibtex:title>
      <bibtex:type>Dissertation</bibtex:type>
      <bibtex:year>1996</bibtex:year>
    </bibtex:phdthesis>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2005_da">
    <bibtex:mastersthesis>
      <bibtex:abstract>Die Temporal Logic of Distributed Actions (TLDA) ist eine neue temporale Logik miteiner Halbordnungssemantik und eignet sich somit zur Spezifikation verteilter Systeme. Allerdings existieren f&#252;r TLDA noch keine Werkzeuge, die die Spezifikation und Verifikation unterst&#252;tzen. Die Verf&#252;gbarkeit solcher Werkzeuge tr&#228;gt jedoch entscheidend zur Verbreitung der Logik bei. In [Loh05] wurde mit der Ausarbeitung und Implementierung einer schrittbasierten Interleavingsemantik f&#252;r TLDA die Grundlage f&#252;r die Entwicklung eines expliziten TLDA-Modelcheckers gelegt. Der genaue Zusammenhang zwischen der Halbordnungs- und Interleavingsemantik wurde jedoch nicht bewiesen. Au\sserdem handelt es sich bei der Implementierung der Interleavingsemantik um einen Brute-Force-Prototyp, der nur f&#252;r sehr einfach Spezifikationen in der Lage ist das Transitionssystem zu konstruieren. Die formale Fundierung sowie die Ausarbeitung effizienter Algorithmen und Datenstrukturen ist Inhalt dieser Arbeit. Anhand mehrerer Fallstudien untersuchen wir die Leistungsf&#228;higkeit des erweiterten Prototyps und illustrieren die Beziehung zwischen der Halbordnungs- und Interleavingsemantik.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:month>September</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2005_da.pdf</bibtex:pdf>
      <bibtex:school>Humboldt-Universit&#228;t zu Berlin, Institut f&#252;r Informatik</bibtex:school>
      <bibtex:title>Formale Fundierung und effizientere Algorithmen f&#252;r die schrittbasierte TLDA-Interleavingsemantik</bibtex:title>
      <bibtex:type>Diplomarbeit</bibtex:type>
      <bibtex:year>2005</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2005_sa">
    <bibtex:mastersthesis>
      <bibtex:abstract>Die Temporal Logic of Distributed Actions (TLDA) ist eine temporale Logik mit einer Halbordnungssemantik und eignet sich somit zur Spezifikation verteilter Systeme. Allerdings gibt es noch wenig Erfahrung bei der computergest&#252;tzten Verifikation halbordnungsbasierter Formalismen. Viele bekannte effiziente Algorithmen des expliziten Modelchecking setzen ein Transitionssystem und somit eine Interleavingsemantik voraus. In dieser Arbeit wird eine Interleavingsemantik f&#252;r TLDA vorgeschlagen und ein Prototyp entwickelt, der f&#252;r eine bestimmte Klasse von TLDA-Spezifikationen das Transitionssystem aufbaut. Die entwickelte Semantik soll zusammen mit dem Prototypen die Grundlage f&#252;r die weitere Arbeit an einem Modelchecker f&#252;r TLDA sein.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:month>June</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2005_sa.pdf</bibtex:pdf>
      <bibtex:school>Humboldt-Universit&#228;t zu Berlin, Institut f&#252;r Informatik</bibtex:school>
      <bibtex:title>Implementierung einer schrittbasierten Interleavingsemantik f&#252;r die Temporal Logic of Distributed Actions (TLDA)</bibtex:title>
      <bibtex:type>Studienarbeit</bibtex:type>
      <bibtex:year>2005</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="KoppFL_2006_bmbf">
    <bibtex:inproceedings>
      <bibtex:abstract>Unternehmens&#252;bergreifende Gesch&#228;ftsprozesse werden zunehmend nach dem Paradigma der Services organisiert. Dabei stellen sich Fragen nach der Komponierbarkeit, Bedienbarkeit, Austauschbarkeit sowie der R&#252;cksetzbarkeit (Kompensation) im Fehlerfall. In diesem Vorhaben werden Methoden und Werkzeuge zum Umgang mit solchen Fragen entwickelt, am Beispiel der Gesch&#228;ftsprozess-Modellierungssprache BPEL erprobt und in ein Entwurfswerkzeug der Firma Gedilan Technologies integriert.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Oliver Kopp</bibtex:person>
        <bibtex:person>Carsten Frenkler</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Forschungsoffensive ``Software Engineering 2006'', Statuskonferenz, 26.-28. Juni 2006</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:08:28 +0100</bibtex:date-modified>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:month>July</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/KoppFL_2006_bmbf.pdf</bibtex:pdf>
      <bibtex:publisher>Bundesministerium f&#252;r Bildung und Forschung (BMBF)</bibtex:publisher>
      <bibtex:title>Korrektheit und Zuverl&#228;ssigkeit zusammengesetzter Web Services am Beispiel der Gesch&#228;ftsprozess-Modellierungssprache BPEL</bibtex:title>
      <bibtex:year>2006</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="KaschnerMW_2006_awpn">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Kathrin Kaschner</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Tagungsband des 13. Workshops Algorithmen und Werkzeuge f&#252;r Petri-Netze, AWPN'06</bibtex:booktitle>
      <bibtex:date-modified>2008-01-16 08:09:53 +0100</bibtex:date-modified>
      <bibtex:editor>Daniel Moldt</bibtex:editor>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:month>September</bibtex:month>
      <bibtex:note>Appeared as Bericht FBI-HH-B-267</bibtex:note>
      <bibtex:pages>54-61</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/KaschnerMW_2006_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>Universit&#228;t Hamburg</bibtex:publisher>
      <bibtex:title>Symbolische Repr&#228;sentation von Bedienungsanleitungen f&#252;r Services</bibtex:title>
      <bibtex:year>2006</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannKLR_2007_wsfm">
    <bibtex:inproceedings>
      <bibtex:abstract>Choreographies offer means to capture global interactions between business processes of different partners. BPEL4Chor has been introduced to describe these interactions using BPEL. Currently, there are no formal methods available to verify BPEL4Chor choreographies. In this paper, we present how BPEL4Chor choreographies can be completely verified using Petri nets. A case study undermines that our verification techniques scale. Additionally, we show how the verification techniques can be used to generate a stub process for a partner taking part in a choreography. This is especially useful when the behavior of one participant is intended to follow the corresponding requirements of the other participants. Thus, the missing participant behavior can be generated and the error-prone design of that participant can be skipped.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Oliver Kopp</bibtex:person>
        <bibtex:person>Frank Leymann</bibtex:person>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Web Services and Formal Methods, Forth International Workshop, WS-FM 2007, Brisbane, Australia, September 28-29, 2007, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-04-13 20:37:38 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-79230-7_4</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Marlon Dumas</bibtex:person>
        <bibtex:person>Reiko Heckel</bibtex:person>
      </bibtex:editor>
      <bibtex:month>April</bibtex:month>
      <bibtex:pages>46-60</bibtex:pages>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannKLR_2007_wsfm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Analyzing BPEL4Chor: Verification and Participant Synthesis</bibtex:title>
      <bibtex:volume>4937</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-79230-7_4</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2007_wsfm">
    <bibtex:inproceedings>
      <bibtex:abstract>We present an extension of a Petri net semantics for the Web Service Business Execution Language (WS-BPEL). This extension covers the novel activities and constructs introduced by the recent WS-BPEL 2.0 specification. Furthermore, we simplify several aspects of the Petri net semantics to allow for more compact models suited for computer-aided verification.</bibtex:abstract>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:booktitle>Web Services and Formal Methods, Forth International Workshop, WS-FM 2007, Brisbane, Australia, September 28-29, 2007, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-04-13 20:38:22 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-79230-7_6</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Marlon Dumas</bibtex:person>
        <bibtex:person>Reiko Heckel</bibtex:person>
      </bibtex:editor>
      <bibtex:month>April</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:pages>77-91</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2007_wsfm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>A Feature-Complete Petri Net Semantics for WS-BPEL 2.0</bibtex:title>
      <bibtex:volume>4937</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-79230-7_6</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="AalstLMSW_2007_wsfm">
    <bibtex:inproceedings>
      <bibtex:abstract>Service orientation is a means for integrating across diverse systems. Each resource, whether an application, system, or trading partner, can be accessed as a service. The resulting architecture, often referred to as SOA, has been an important enabler for interorganizational processes. Apart from technological issues that need to be addressed, it is important that all parties involved in such processes agree on the "rules of engagement". Therefore, we propose to use a contract that specifies the composition of the public views of all participating parties. Each party may then implement its part of the contract such that the implementation (i.e., the private view) accords with the contract. In this paper, we define a suitable notion of accordance inspired by the asynchronous nature of services. Moreover, we present several transformation rules for incrementally building a private view such that accordance with the contract is guaranteed by construction. These rules include adding internal tasks as well as the reordering of messages and are therefore much more powerful than existing correctness-preserving construction rules.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Wil M. P. van der Aalst</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Web Services and Formal Methods, Forth International Workshop, WS-FM 2007, Brisbane, Australia, September 28-29, 2007, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-04-13 20:39:02 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-79230-7_10</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Marlon Dumas</bibtex:person>
        <bibtex:person>Reiko Heckel</bibtex:person>
      </bibtex:editor>
      <bibtex:month>April</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>yes</bibtex:pubreviewed>
      <bibtex:pages>139-153</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/AalstLMSW_2007_wsfm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>From Public Views to Private Views &#x2014; Correctness-by-Design for Services</bibtex:title>
      <bibtex:volume>4937</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-79230-7_10</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="ReisigBFLMS_2007_festschrift">
    <bibtex:inproceedings>
      <bibtex:abstract>The recent success of service-oriented architectures gives rise to some fundamental questions: To what extent do services constitute a new paradigm of computation? What are the elementary ingredients of this paradigm? What are adequate notions of semantics, composition, equivalence? How can services be modeled and analyzed? This paper addresses and answers those questions, thus preparing the ground for forthcoming software design techniques.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Jan Bretschneider</bibtex:person>
        <bibtex:person>Dirk Fahland</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Formal Methods and Hybrid Real-Time Systems, Essays in Honor of Dines Bj&#248;rner and Chaochen Zhou on the Occasion of Their 70th Birthdays, Papers presented at a Symposium held in Macao, China, September 24-25, 2007</bibtex:booktitle>
      <bibtex:date-modified>2008-05-16 00:15:37 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-75221-9_25</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Cliff B. Jones</bibtex:person>
        <bibtex:person>Zhiming Liu</bibtex:person>
        <bibtex:person>Jim Woodcock</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>521-538</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/ReisigBFLMS_2007_festschrift.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Services as a Paradigm of Computation</bibtex:title>
      <bibtex:volume>4700</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-75221-9_25</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2007_hubtr212">
    <bibtex:techreport>
      <bibtex:abstract>We present an extension of a Petri net semantics for the Web Service Business Execution Language (WS-BPEL). This extension covers the novel activities and constructs introduced by the recent WS-BPEL 2.0 specification. Furthermore, we simplify several aspects of the Petri net semantics to allow for more compact models suited for computer-aided verification. This technical report is the extended version of the papers [1, 2] and can be seen as the sequel of [3].</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>August</bibtex:month>
      <bibtex:number>212</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2007_hubtr212.pdf</bibtex:pdf>
      <bibtex:title>A Feature-Complete Petri Net Semantics for WS-BPEL 2.0 and its Compiler BPEL2oWFN</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2007</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="LohmannVOSA_2007_tue_0723">
    <bibtex:techreport>
      <bibtex:abstract>We compare two Petri net semantics for the Web Services Business Process Execution Language (BPEL). The comparison reveals different modeling decisions. These decisions together with their consequences are discussed.We also give an overview of the different properties that can be verified on the resulting models. A case study helps to evaluate the corresponding compilers which transform a BPEL process into a Petri net model.</bibtex:abstract>
      <bibtex:address>Eindhoven, The Netherlands</bibtex:address>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>H.M.W. Verbeek</bibtex:person>
        <bibtex:person>Chun Ouyang</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Wil M. P. van der Aalst</bibtex:person>
      </bibtex:author>
      <bibtex:institution>Eindhoven University of Technology</bibtex:institution>
      <bibtex:month>August</bibtex:month>
      <bibtex:number>07/23</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannVOSA_2007_tue_0723.pdf</bibtex:pdf>
      <bibtex:title>Comparing and Evaluating Petri Net Semantics for BPEL</bibtex:title>
      <bibtex:type>Computer Science Report</bibtex:type>
      <bibtex:year>2007</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="ReisigWBKLMS_2007_ercim">
    <bibtex:article>
      <bibtex:abstract>Interacting services raise a number of new software engineering challenges. To meet these challenges, the behaviour of the involved services must be considered. We present results regarding the behaviour of services in isolation, the interaction of services in choreographies, the exchangeability of a service, and the synthesis of desired partner services.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
        <bibtex:person>Jan Bretschneider</bibtex:person>
        <bibtex:person>Kathrin Kaschner</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:author>
      <bibtex:date-modified>2010-10-01 22:19:05 +0200</bibtex:date-modified>
      <bibtex:journal>ERCIM News</bibtex:journal>
      <bibtex:month>July</bibtex:month>
      <bibtex:pages>28-29</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/ReisigWBKLMS_2007_ercim.pdf</bibtex:pdf>
      <bibtex:title>Challenges in a Service-Oriented World</bibtex:title>
      <bibtex:url>http://ercim-news.ercim.org/content/view/213/408</bibtex:url>
      <bibtex:volume>70</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://ercim-news.ercim.org/content/view/213/408</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2007_fabpws">
    <bibtex:inproceedings>
      <bibtex:abstract>We present an extension of a Petri net semantics for the Web Service Business Execution Language (WS-BPEL). This extension covers the novel activities and constructs introduced by the recent WS-BPEL 2.0 specification. Furthermore, we simplify several aspects of the Petri net semantics to allow for more compact models suited for computer-aided verification.</bibtex:abstract>
      <bibtex:address>Siedlce, Poland</bibtex:address>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:booktitle>Proceedings of the Workshop on Formal Approaches to Business Processes and Web Services (FABPWS'07)</bibtex:booktitle>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:date-modified>2008-08-30 22:48:28 +0200</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Kees van Hee</bibtex:person>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>21-35</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2007_fabpws.pdf</bibtex:pdf>
      <bibtex:publisher>University of Podlasie</bibtex:publisher>
      <bibtex:title>A Feature-Complete Petri Net Semantics for WS-BPEL 2.0</bibtex:title>
      <bibtex:year>2007</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannMW2007_hub_tr214">
    <bibtex:techreport>
      <bibtex:abstract>Recently, we introduced the concept of an operating guideline of a service as a structure that characterizes all its properly interacting partner services. The hitherto considered correctness criterion is deadlock freedom of the composition of both services. In practice, there are intended and unintended deadlock-freely interacting partners of a service. In this paper, we provide a formal approach to express intended and unintended behavior as behavioral constraints. With such a constraint, unintended partners can be ``filtered'' yielding a customized operating guideline. Customized operating guidelines can be applied to validate a service and for service discovery.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>May</bibtex:month>
      <bibtex:number>214</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannMW2007_hub_tr214.pdf</bibtex:pdf>
      <bibtex:title>Behavioral Constraints for Services</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2007</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="KaschnerMW_2007_pnn">
    <bibtex:article>
      <bibtex:author>
        <bibtex:person>Kathrin Kaschner</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:date-modified>2008-01-15 23:07:47 +0100</bibtex:date-modified>
      <bibtex:journal>Petri Net Newsletter</bibtex:journal>
      <bibtex:month>April</bibtex:month>
      <bibtex:pages>21-28</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/KaschnerMW_2007_pnn.pdf</bibtex:pdf>
      <bibtex:title>Symbolic Representation of Operating Guidelines for Services</bibtex:title>
      <bibtex:volume>72</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="LohmannMSW_2008_dke">
    <bibtex:article>
      <bibtex:abstract>We address the problem of analyzing the interaction between WS-BPEL processes. We present a technology chain that starts out with a WS-BPEL process and translates it into a Petri net model. On the model we decide controllability of the process (the existence of a partner process, such that both can interact properly) and compute its operating guideline (a characterization of all properly interacting partner processes). To manage processes of realistic size, we present a concept of a flexible model generation which allows the generation of compact Petri net models. A case study demonstrates the value of this technology chain.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Daniela Weinberg</bibtex:person>
      </bibtex:author>
      <bibtex:date-modified>2008-08-30 23:25:49 +0200</bibtex:date-modified>
      <bibtex:doi>10.1016/j.datak.2007.06.006</bibtex:doi>
      <bibtex:journal>Data Knowl. Eng.</bibtex:journal>
      <bibtex:month>January</bibtex:month>
      <bibtex:number>1</bibtex:number>
      <bibtex:pages>38-54</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannMSW_2008_dke.pdf</bibtex:pdf>
      <bibtex:title>Analyzing Interacting WS-BPEL Processes Using Flexible Model Generation</bibtex:title>
      <bibtex:volume>64</bibtex:volume>
      <bibtex:year>2008</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1016/j.datak.2007.06.006</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="LohmannMW_2007_atpn">
    <bibtex:inproceedings>
      <bibtex:abstract>We study services modeled as open workflow nets (oWFN) and describe their behavior as service automata. Based on service automata, we introduce the concept of an operating guideline, extending the work of [1, 2] which was restricted to acyclic services. An operating guideline gives complete information about how to properly interact (in this paper: deadlock-freely and with limited communication) with an oWFN N. It can be executed thus forming a properly interacting partner of N, or it can be used to support service discovery. An operating guideline for N is a particular service automaton S that is enriched with Boolean annotations. S interacts properly with the service automaton Prov, representing the behavior of N , and is able to simulate every other service that interacts properly with Prov . The attached annotations give complete information about whether or not a simulated service interacts properly with Prov, too.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>28th International Conference on Applications and Theory of Petri Nets and Other Models of Concurrency, ICATPN 2007, Siedlce, Poland, June 25-29, 2007, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:07:35 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/978-3-540-73094-1_20</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Jetty Kleijn</bibtex:person>
        <bibtex:person>Alex Yakovlev</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>321-341</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannMW_2007_atpn.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Operating Guidelines for Finite-State Services</bibtex:title>
      <bibtex:volume>4546</bibtex:volume>
      <bibtex:year>2007</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/978-3-540-73094-1_20</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannMW2006_hub_tr210">
    <bibtex:techreport>
      <bibtex:abstract>We introduce the concept of an operating guideline for an arbitrary finite-state service P, extending the work of [1, 2] which was restricted to acyclic services.  An operating guideline gives complete information about how to correctly (in this paper: deadlock-free) communicate with P. It can further be executed or used for service discovery.  An operating guideline for P is a particular service S that is enriched with annotations. S communicates deadlock-free with P and is able to simulate every other service that communicates deadlock-free with P. The attached annotations give complete information about whether or not a simulated service is deadlock-free, too.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
      </bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>December</bibtex:month>
      <bibtex:number>210</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannMW2006_hub_tr210.pdf</bibtex:pdf>
      <bibtex:title>Operating Guidelines for Finite-State Services</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2006</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="ReisigFLMSWWK_2006_isola">
    <bibtex:inproceedings>
      <bibtex:abstract>The paradigm of Service-Oriented Computing (SOC) provides a framework for interorganizational business processes and for the emerging programming-in-the-large. The basic idea of SOC, the interaction of services, rises a lot of issues such as proper termination of interacting services or substitution of a service by another one. Such issues can be addressed by means of models of services. We show how services can intelligibly be modeled, and we present algorithms and tools to analyze properties of service models. To make sure that our models properly reflect real world issues of services, we model and investigate services represented in established languages such as WS-BPEL.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Dirk Fahland</bibtex:person>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Daniela Weinberg</bibtex:person>
        <bibtex:person>Karsten Wolf</bibtex:person>
        <bibtex:person>Kathrin Kaschner</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Second International Symposium on Leveraging Applications of Formal Methods, Verification and Validation, 2006 (ISoLA 2006), 15-19 November 2006, Paphos, Cyprus</bibtex:booktitle>
      <bibtex:date-modified>2008-05-16 11:54:44 +0200</bibtex:date-modified>
      <bibtex:doi>10.1109/ISoLA.2006.58</bibtex:doi>
      <bibtex:month>November</bibtex:month>
      <bibtex:pages>11-17</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/ReisigFLMSWWK_2006_isola.pdf</bibtex:pdf>
      <bibtex:publisher>IEEE Computer Society</bibtex:publisher>
      <bibtex:title>Analysis Techniques for Service Models</bibtex:title>
      <bibtex:year>2006</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1109/ISoLA.2006.58</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="LohmannMSW_2006_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>This paper addresses the problem of analyzing theinteraction between BPEL processes. We present a technology chain that starts out with a BPEL process and transforms it into a Petri net model. On the model we decide controllability of the process (the existence of a partner process, such that both can interact properly) and compute its operating guideline (a characterization of all properly interacting partner processes). A case study demonstrates the value of this technology chain.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Niels Lohmann</bibtex:person>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
        <bibtex:person>Daniela Weinberg</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Business Process Management, 4th International Conference, BPM 2006, Vienna, Austria, September 5-7, 2006, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-01-24 19:10:28 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/11841760_3</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Schahram Dustdar</bibtex:person>
        <bibtex:person>Jos&#233; Luiz Fiadeiro</bibtex:person>
        <bibtex:person>Amit P. Sheth</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>17-32</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/LohmannMSW_2006_bpm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Analyzing Interacting BPEL Processes</bibtex:title>
      <bibtex:volume>4102</bibtex:volume>
      <bibtex:year>2006</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/11841760_3</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Lohmann_2006_atpndc">
    <bibtex:inproceedings>
      <bibtex:abstract>Finite prefixes of branching processes are a compact way to represent the state space of finite safe systems. McMillan in [1] formulated a cut-off criterion stating under which conditions the (usually infinite) maximal branching process can be truncated without loosing reachable markings. However, this criterion depends on the reachable markings itself and thus suffers the state explosion problem. In this work, we propose local cut-off criteria that base on partial markings.</bibtex:abstract>
      <bibtex:address>Turku, Finland</bibtex:address>
      <bibtex:author>Niels Lohmann</bibtex:author>
      <bibtex:booktitle>Proceedings of the Doctoral Consortium ACSD &amp; Petri Nets 2006</bibtex:booktitle>
      <bibtex:editor>J&#246;rg Desel</bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2006_atpndc.pdf</bibtex:pdf>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:publisher>&#197;bo Academy</bibtex:publisher>
      <bibtex:title>A Local Cut-off Criterion for Unfoldings of Safe Petri Nets</bibtex:title>
      <bibtex:year>2006</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Kaschner_2006_da">
    <bibtex:mastersthesis>
      <bibtex:abstract>Moderne Software-Systeme werden zunehmend nach dem Paradigma der Serviceorientierten Architektur (SOA) aus unabh&#228;ngigen Services zusammengesetzt, die definierte Funktionen zur Verf&#252;gung stellen und Nachrichten miteinander austauschen. Eine M&#246;glichkeit zur Gew&#228;hrleistung der reibungslosen Kommunikation besteht in der Bereitstellung einer Bedienungsanleitung durch den Service Provider, mit der der Service Broker anhand eines Pr&#252;fverfahrens - dem Matching - entscheiden kann, ob der Service eines Service Requesters zu dem angebotenen Service passt. F&#252;r die praktische Anwendung m&#252;ssen Bedienungsanleitungen in geeigneter Weise kodiert werden. In der vorliegenden Arbeit werden dazu Bin&#228;re Entscheidungsdiagramme (BDDs) genutzt. F&#252;r das Matching wird der Service des Service Requesters durch einen Serviceautomaten modelliert, der seinerseits ebenfalls in eine BDD-Darstellung &#252;berf&#252;hrt wird. Darauf aufbauend wird schlie\sslich ein Matching-Algorithmus entwickelt und seine Korrektheit bewiesen. Die Effizienz der Kodierung durch BDDs und die Funktionsweise des BDD-basierten Matching-Algorithmus wird an Beispielen gezeigt.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Kathrin Kaschner</bibtex:author>
      <bibtex:date-modified>2008-06-22 19:29:02 +0200</bibtex:date-modified>
      <bibtex:month>March</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Kaschner_2006_da.pdf</bibtex:pdf>
      <bibtex:school>Humboldt-Universit&#228;t zu Berlin, Institut f&#252;r Informatik</bibtex:school>
      <bibtex:title>BDD-basiertes Matching von Services</bibtex:title>
      <bibtex:type>Diplomarbeit</bibtex:type>
      <bibtex:year>2006</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="RochS_2006_icatpn">
    <bibtex:inproceedings>
      <bibtex:abstract>In many well-known extensions of place-transition nets, including read arcs, inhibitory arcs, reset arcs, priorities and signal arcs, it is sometimes possible to reach a marking through firing a step of transitions which cannot be reached through firing a sequence of single transitions. For state space analysis, it is thus recommendable to consider, in each state, all steps of transitions for firing. Since the number of activated steps may be exponential in the number of transitions, we have, in addition to the well-known state explosion problem, another explosion which we call step explosion. In this paper, we present an approach for alleviating step explosion. We furthermore discuss the joint application of our method with partial order reduction and in the context of CTL model checking.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Stephan Roch</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Petri Nets and Other Models of Concurrency &#x2014; ICATPN 2006, 27th International Conference on Applications and Theory of Petri Nets and Other Models of Concurrency, Turku, Finland, June 26-30, 2006, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-05-14 23:37:17 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/11767589_19</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Susanna Donatelli</bibtex:person>
        <bibtex:person>P. S. Thiagarajan</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>342-361</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>On the Step Explosion Problem</bibtex:title>
      <bibtex:volume>4024</bibtex:volume>
      <bibtex:year>2006</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/11767589_19</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Kaschner_2006_sa">
    <bibtex:mastersthesis>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Kathrin Kaschner</bibtex:author>
      <bibtex:month>January</bibtex:month>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Kaschner_2006_sa.pdf</bibtex:pdf>
      <bibtex:school>Humboldt-Universit&#228;t zu Berlin, Institut f&#252;r Informatik</bibtex:school>
      <bibtex:title>Repr&#228;sentation von Bedienungsanleitungen durch BDDs</bibtex:title>
      <bibtex:type>Studienarbeit</bibtex:type>
      <bibtex:year>2006</bibtex:year>
    </bibtex:mastersthesis>
  </bibtex:entry>

  <bibtex:entry id="ReisigSS_2005_ife">
    <bibtex:article>
      <bibtex:abstract>Zur ad&#228;quaten Nutzung von Workflow-Implementierungen kommunizierender Gesch&#228;ftsprozesse werden Konzepte vorgeschlagen, die von konkreten Implementierungen abstrahieren. Auf der Basis von Petrinetzen werden unterschiedliche Varianten der Bedienbarkeit von Workflows charakterisiert und daf&#252;r Entscheidungsalgorithmen vorgestellt. Die Angemessenheit des Ansatzes wird am Beispiel der Semantik von Komponenten der Gesch&#228;ftsprozess-Modellierungssprache BPEL demonstriert.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:author>
      <bibtex:doi>10.1007/s00450-005-0209-5</bibtex:doi>
      <bibtex:journal>Inform., Forsch. Entwickl.</bibtex:journal>
      <bibtex:month>October</bibtex:month>
      <bibtex:number>1-2</bibtex:number>
      <bibtex:pages>90-101</bibtex:pages>
      <bibtex:title>Kommunizierende Workflow-Services modellieren und analysieren</bibtex:title>
      <bibtex:volume>20</bibtex:volume>
      <bibtex:year>2005</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/s00450-005-0209-5</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="HinzSS_2005_bpm">
    <bibtex:inproceedings>
      <bibtex:abstract>We present a Petri net semantics for the Business Process Execution Language for Web Services (BPEL). Our semantics covers the standard behaviour of BPEL as well as the exceptional behaviour (e.g. faults, events, compensation). The semantics is implemented as a parser that translates BPEL specifications into the input language of the Petri net model checking tool LoLA. We demonstrate that the semantics is well suited for computer aided verification purposes.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Sebastian Hinz</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the Third International Conference on Business Process Management (BPM 2005)</bibtex:booktitle>
      <bibtex:doi>10.1007/11538394_15</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Wil M. P. van der Aalst</bibtex:person>
        <bibtex:person>B. Benatallah</bibtex:person>
        <bibtex:person>F. Casati</bibtex:person>
        <bibtex:person>F. Curbera</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>220-235</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/HinzSS_2005_bpm.pdf</bibtex:pdf>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Transforming BPEL to Petri Nets</bibtex:title>
      <bibtex:volume>3649</bibtex:volume>
      <bibtex:year>2005</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/11538394_15</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="MassutheS_2005_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>In the service-oriented architecture (SOA), we distinguish three roles of service owners:service providers, service requesters, and service brokers, and the three standard operations publish, find, and bind. We provide a formal method based on Petri nets to model services. We suggest operating guidelines as a convenient and intuitive artifact to realize publish. Then, the find operation reduces to a matching problem between the requester?s service and the operating guideline.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>12. Workshop ``Algorithmen und Werkzeuge f&#252;r Petrinetze'' (AWPN 2005), Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-01-16 08:11:58 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:note>Appeared as Informatik-Berichte Nr. 192</bibtex:note>
      <bibtex:pages>78-83</bibtex:pages>
      <bibtex:pdf>http://www2.informatik.hu-berlin.de/top/download/publications/awpn2005.pdf</bibtex:pdf>
      <bibtex:publisher>Humboldt-Universit&#228;t zu Berlin</bibtex:publisher>
      <bibtex:title>Operating Guidelines for Services</bibtex:title>
      <bibtex:year>2005</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="MassutheS_2005_qsic">
    <bibtex:inproceedings>
      <bibtex:abstract>In the service-oriented architecture (SOA), we distinguish three roles of service owners: service providers, service requesters, and service brokers. Each service provider publishes information to the broker about how requesters can interact with its service. Thus, the broker can assign a fitting service provider to a querying requester. We propose the information published to the broker to be operating guidelines. Operating guidelines are essentially communication instructions for the service requester. We present an automata-theoretic approach that is centered around operating guidelines and is capable of implementing all tasks arising in the SOA.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Fifth International Conference on Quality Software (QSIC 2005), 19-20 September 2005, Melbourne, Australia</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:10:17 +0100</bibtex:date-modified>
      <bibtex:doi>10.1109/QSIC.2005.47</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Kai-Yuan Cai</bibtex:person>
        <bibtex:person>Atsushi Ohnishi</bibtex:person>
        <bibtex:person>M.F. Lau</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pages>452-457</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/MassutheS_2005_qsic.pdf</bibtex:pdf>
      <bibtex:publisher>IEEE Computer Society</bibtex:publisher>
      <bibtex:title>Operating Guidelines &#x2014; an Automata-Theoretic Foundation for the Service-Oriented Architecture</bibtex:title>
      <bibtex:year>2005</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1109/QSIC.2005.47</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="WeinbergS_2005_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>The internet today has grown to be more than just being a basisfor exchanging information. It steadily becomes a platform for processing business processes. Many companies distribute their service with the help of web services or integrate other web services into their own workflow. However, before a web service gets published it should be examined well. We will introduce a way of examining the controllability of a web service. We propose the interaction graph of a web service, that is modelled by an open workflow net. To verify whether such a net is controllable or not it is sufficient to construct a reduced interaction graph. We will define reduction rules that minimize the size of the graph greatly. The analysis using the interaction graph as well as the reduction rules are implemented and have been integrated into an analysis tool kit for web services.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Daniela Weinberg</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>12. Workshop ``Algorithmen und Werkzeuge f&#252;r Petrinetze'' (AWPN 2005), Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-01-16 08:10:52 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:note>Appeared as Informatik-Berichte Nr. 192</bibtex:note>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>60-65</bibtex:pages>
      <bibtex:pdf>http://www2.informatik.hu-berlin.de/top/download/publications/awpn2005.pdf</bibtex:pdf>
      <bibtex:publisher>Humboldt-Universit&#228;t zu Berlin</bibtex:publisher>
      <bibtex:title>Reduction Rules for Interaction Graphs</bibtex:title>
      <bibtex:year>2005</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="MassutheS_2005_hub_tr193">
    <bibtex:techreport>
      <bibtex:abstract>Abstract Interorganizational cooperation is more and more organizedby the paradigm of services. The service-oriented architecture (SOA) provides a general framework for service interaction. It describes three roles, service provider, service requester, and service broker, together with the operations publish, find, and bind. We provide a formal method based on nondeterministic automata to model services and their interaction. We suggest operating guidelines as a convenient and intuitive artifact to realize publish. In our approach, the find operation reduces to a matching problem between the requester?s service and operating guidelines. In this paper, matching of deterministic as well as nondeterministic automata with operating guidelines is presented.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:month>June</bibtex:month>
      <bibtex:number>193</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/MassutheS_2005_hub_tr193.pdf</bibtex:pdf>
      <bibtex:title>Matching Nondeterministic Services with Operating Guidelines</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2005</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="SchlingloffMS_2005_entcs">
    <bibtex:article>
      <bibtex:abstract>We give an overview on web services and the web service technology stack. We then show how to build Petri net models of web services formulated in the specification language BPEL4WS. We define an abstract correctness criterion for these models and study the automated verification according to this criterion. Finally, we relate correctness of web service models to the model checking problem for alternating temporal logics.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Bernd-Holger Schlingloff</bibtex:person>
        <bibtex:person>Axel Martens</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:doi>10.1016/j.entcs.2004.11.011</bibtex:doi>
      <bibtex:journal>Electr. Notes Theor. Comput. Sci.</bibtex:journal>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>3-26</bibtex:pages>
      <bibtex:title>Modeling and Model Checking Web Services</bibtex:title>
      <bibtex:volume>126</bibtex:volume>
      <bibtex:year>2005</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1016/j.entcs.2004.11.011</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="MassutheRS_2005_amct">
    <bibtex:article>
      <bibtex:abstract>Interorganizational cooperation is more andmore organized by the paradigm of services. The serviceorientedarchitecture (SOA) provides a general frameworkfor service interaction. It describes three roles, serviceprovider, service requester, and service broker, togetherwith the three operations publish, find, and bind.We provide a formal method based on Petri nets tomodel services and their cooperation. We characterizewell-behaving pairs of requester's and provider's servicesand suggest operating guidelines as a convenient andintuitive artifact to realize publish. In our approach, thefind operation reduces to a matching problem between therequester's service and the operating guideline. Binding ofa requester's and a provider's service is therefore guaranteedto result in a well-behaving cooperating service. Atthis time, the approach is limited to acyclic Petri nets.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:journal>AMCT</bibtex:journal>
      <bibtex:number>3</bibtex:number>
      <bibtex:pages>35-43</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/MassutheRS_2005_amct.pdf</bibtex:pdf>
      <bibtex:title>An Operating Guideline Approach to the SOA</bibtex:title>
      <bibtex:volume>1</bibtex:volume>
      <bibtex:year>2005</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="MassutheRS_2005_hub_tr191">
    <bibtex:techreport>
      <bibtex:abstract>Interorganizational cooperation is more and more organized by the paradigm of services. The service-oriented architecture (SOA) provides a general framework for service interaction. It describes three roles, service provider, service requester, and service broker, together with the three operations publish, find, and bind. We provide a formal method based on Petri nets to model services and their cooperation. We characterize well-behaving pairs of requester?s and provider?s services and suggest operating guidelines as a convenient and intuitive artifact to realize publish. Then, the find operation reduces to a matching problem between the requester?s service and the operating guideline. Binding of a requester?s and a provider?s service is therefore guaranteed to result in a well-behaving cooperating service.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:number>191</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/MassutheRS_2005_hub_tr191.pdf</bibtex:pdf>
      <bibtex:title>An Operating Guideline Approach to the SOA</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2005</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="MassutheRS_2005_seefm">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Wolfgang Reisig</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>2nd South-East European Workshop on Formal Methods 2005 (SEEFM05), 18-19 November 2005, Ohrid, Republic of Macedonia</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:12:27 +0100</bibtex:date-modified>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/MassutheRS_2005_seefm.pdf</bibtex:pdf>
      <bibtex:publisher>SEERC</bibtex:publisher>
      <bibtex:title>An Operating Guideline Approach to the SOA</bibtex:title>
      <bibtex:year>2005</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="MassutheS_2005_hub_tr189">
    <bibtex:techreport>
      <bibtex:abstract>We propose operating guidelines as artifacts for publishing information about how to communicate with a business process that is intended to be provided as a service. We present an approach to compute operating guidelines fully automatically. We compare operating guidelines with the concept of public view.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>
        <bibtex:person>Peter Massuthe</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:date-modified>2008-01-15 23:12:36 +0100</bibtex:date-modified>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:number>189</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/MassutheS_2005_hub_tr189.pdf</bibtex:pdf>
      <bibtex:title>Operating Guidelines &#x2014; an Alternative to Public View</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2005</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2005_hub_tr180">
    <bibtex:techreport>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:number>180</bibtex:number>
      <bibtex:title>Controllability of Distributed Business Processes</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>2005</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2005_emisa">
    <bibtex:inproceedings>
      <bibtex:abstract>An open workflow net is basically a workflow net extended with a message passing interface. Open workflow nets are adequate models for services or parts of inter-organizational business processes. We investigate the problem of control lability, a natural counterpart of soundness in classical workflow nets (as studied by van der Aalst). We distinguish centralized, distributed, and local controllability and provide solutions to all problems.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Enterprise Modelling and Information Systems Architectures, Proceedings of the Workshop in Klagenfurt, October 24-25, 2005</bibtex:booktitle>
      <bibtex:date-modified>2008-01-31 15:12:27 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>J&#246;rg Desel</bibtex:person>
        <bibtex:person>Ulrich Frank</bibtex:person>
      </bibtex:editor>
      <bibtex:pages>236-249</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_2005_emisa.pdf</bibtex:pdf>
      <bibtex:publisher>GI</bibtex:publisher>
      <bibtex:series>Lecture Notes in Informatics (LNI)</bibtex:series>
      <bibtex:title>Controllability of Open Workflow Nets</bibtex:title>
      <bibtex:volume>P-75</bibtex:volume>
      <bibtex:year>2005</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="SchmidtS_2004_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>We translated a small business process into a recently defined Petri net semantic. Then we used the tool LoLA for validating the semantic as well as for proving relevant properties of the particular process.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Christian Stahl</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Proceedings of the 11th Workshop on Algorithms and Tools for Petri Nets (AWPN'04)</bibtex:booktitle>
      <bibtex:date-modified>2008-01-16 08:10:59 +0100</bibtex:date-modified>
      <bibtex:editor>Ekkart Kindler</bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:note>Appeared as Bericht tr-ri-04-251</bibtex:note>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pages>1-6</bibtex:pages>
      <bibtex:pdf>http://wwwcs.upb.de/cs/kindler/events/AWPN04/material/proceedings.pdf</bibtex:pdf>
      <bibtex:publisher>Universit&#228;t Paderborn</bibtex:publisher>
      <bibtex:title>A Petri Net Semantic for BPEL4WS &#x2014; Validation and Application</bibtex:title>
      <bibtex:year>2004</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="WangSYHW_2004_tse">
    <bibtex:article>
      <bibtex:author>
        <bibtex:person>Farn Wang</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Fang Yu</bibtex:person>
        <bibtex:person>Geng-Dian Huang</bibtex:person>
        <bibtex:person>Bow-Yaw Wang</bibtex:person>
      </bibtex:author>
      <bibtex:doi>10.1109/TSE.2004.15</bibtex:doi>
      <bibtex:journal>IEEE Trans. Software Eng.</bibtex:journal>
      <bibtex:month>June</bibtex:month>
      <bibtex:number>6</bibtex:number>
      <bibtex:pages>403-417</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/WangSYHW_2004_tse.pdf</bibtex:pdf>
      <bibtex:title>BDD-Based Safety-Analysis of Concurrent Software with Pointer Data Structures Using Graph Automorphism Symmetry Reduction</bibtex:title>
      <bibtex:volume>30</bibtex:volume>
      <bibtex:year>2004</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1109/TSE.2004.15</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2004_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>We estabilish a theory of distributed usability. To do so, it is however neccessary to modify the already existing theory of central usability.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Proceedings of the 11th Workshop on Algorithms and Tools for Petri Nets (AWPN 04)</bibtex:booktitle>
      <bibtex:date-modified>2008-01-16 08:11:17 +0100</bibtex:date-modified>
      <bibtex:editor>Ekkart Kindler</bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:note>Appeared as Bericht tr-ri-04-251</bibtex:note>
      <bibtex:pages>19-24</bibtex:pages>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:pdf>http://wwwcs.upb.de/cs/kindler/events/AWPN04/material/proceedings.pdf</bibtex:pdf>
      <bibtex:publisher>Universit&#228;t Paderborn</bibtex:publisher>
      <bibtex:title>Distributed Usability of Web Services</bibtex:title>
      <bibtex:year>2004</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2004_tacas">
    <bibtex:inproceedings>
      <bibtex:abstract>In the context of Petri nets, we propose an automated construction of a progress measure which is an important pre-requisite for a state space reduction technique called the sweep-line method. Our construction is based on linear-algebraic considerations concerning the transition vectors of the Petri net under consideration.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Tools and Algorithms for the Construction and Analysis of Systems, 10th International Conference, TACAS 2004, Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2004, Barcelona, Spain, March 29-April 2, 2004, Proceedings.</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:13:17 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/b96393</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Kurt Jensen</bibtex:person>
        <bibtex:person>Andreas Podelski</bibtex:person>
      </bibtex:editor>
      <bibtex:pages>192-204</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Automated Generation of a Progress Measure for the Sweep-Line Method</bibtex:title>
      <bibtex:volume>2988</bibtex:volume>
      <bibtex:year>2004</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/b96393</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="KristensenSV_2006_fmsd">
    <bibtex:article>
      <bibtex:abstract>This paper presents two stubborn set methods for alleviating the state explosion problem when reasoning about state properties. The first method makes it possible to determine whether a state of the system is reachable in which a given state predicate holds. The second method makes it possible to determine if from all reachable states it is possible to reach a state where a given state predicate holds. The novelty of the two methods is that they rely on so-called up sets and down sets rather than the notion of visible transitions which causes earlier methods to give only limited reduction of the state space, especially when considering state predicates referring to many of the state variables of the system. The suggested stubborn set methods have been implemented in the LoLA tool, and we report on some experimental results obtained with this computer tool together with some general guidance for applying the two question-guided stubborn set methods and their different implementations in verification. The two methods are presented in the context of Petri Nets, but are applicable also to other state and action oriented modelling formalisms for which the basic stubborn set theory is applicable.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Lars Michael Kristensen</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Antii Valmari</bibtex:person>
      </bibtex:author>
      <bibtex:doi>10.1007/s10703-006-0006-1</bibtex:doi>
      <bibtex:journal>Formal Methods in System Design</bibtex:journal>
      <bibtex:month>November</bibtex:month>
      <bibtex:number>3</bibtex:number>
      <bibtex:pages>215-251</bibtex:pages>
      <bibtex:title>Question-Guided Stubborn Set Methods for State Properties</bibtex:title>
      <bibtex:volume>29</bibtex:volume>
      <bibtex:year>2006</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/s10703-006-0006-1</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2003_fi">
    <bibtex:article>
      <bibtex:abstract>We report work in progress on a distributed version of explicit state space generation in the Petri net verification tool LoLA. We propose a data structure where all available memory of all involved workstations can be fully exploited, and load balancing actions are possible at any time while the verification is running. It is even possible to extend the set of involved workstations while a verification is running.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:journal>Fundam. Inform.</bibtex:journal>
      <bibtex:number>2-3</bibtex:number>
      <bibtex:pages>253-262</bibtex:pages>
      <bibtex:title>Distributed Verification with LoLA</bibtex:title>
      <bibtex:url>http://iospress.metapress.com/openurl.asp?genre=article&amp;issn=0169-2968&amp;volume=54&amp;issue=2&amp;spage=253</bibtex:url>
      <bibtex:volume>54</bibtex:volume>
      <bibtex:year>2003</bibtex:year>
      <bibtex:bdsk-url-1>http://iospress.metapress.com/openurl.asp?genre=article%7B%5C&amp;%7Dissn=0169-2968%7B%5C&amp;%7Dvolume=54%7B%5C&amp;%7Dissue=2%7B%5C&amp;%7Dspage=253</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2003_tacas">
    <bibtex:inproceedings>
      <bibtex:abstract>The linear algebraic invariant calculus is a powerful technique for the verification of Petri nets. Traditionally it is used for structural verification, i.e. for avoiding the explicit construction of a state space. In this paper, we study the use of Petri net invariants for reducing the memory resources required during state space construction. While place invariants help to reduce the amount of memory needed for each single state (without reducing the number of states as such), transition invariants can be used to reduce the number of states to be stored. Interestingly, our approach does not require computing invariants in full, let alone storing them permanently. All information we need can be deduced from an upper triangular form of the Petri net's incidence matrix. Experiments prove that the place invariant technique leads to improvements in both memory and run time costs while transition invariants lead to a space/time tradeoff that can be controlled heuristically.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2003), 9th International Conference, Part of ETAPS 2003, Warsaw, Poland</bibtex:booktitle>
      <bibtex:date-modified>2009-08-29 09:46:16 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-36577-X_35</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Hubert Garavel</bibtex:person>
        <bibtex:person>John Hatcliff</bibtex:person>
      </bibtex:editor>
      <bibtex:month>April</bibtex:month>
      <bibtex:pages>473-488</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Using Petri Net Invariants in State Space Construction</bibtex:title>
      <bibtex:volume>2619</bibtex:volume>
      <bibtex:year>2003</bibtex:year>
      <bibtex:bdsk-url-1>http://www.springerlink.com/content/20v8eyakvde5e558/</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2002_habil">
    <bibtex:phdthesis>
      <bibtex:abstract>Verification is the task of determining whether a (model of a) system holds a given behavioral property. State space verification comprises a class of computer aided verification techniques where the property is verified through exhaustive exploration of the reachable states of the system. Brute force implementations of state space verification are intractable, due to the well known state explosion problem. Explicit state space verification techniques explore the state space one state at a time, and rely usually on data structures where the size of the data structure increases monotonously with an increasing number of explored states. They alleviate state explosion by constructing a reduced state space that, by a mathematically founded construction, behaves like the original system with respect to the specified properties. Thereby, decrease of the number of states in the reduced system is the core issue of a reduction technique thus reducing the amount of memory required. An explicit state space verification technique comprises of - a theory that establishes whether, and how, certain properties can be preserved through a construction of a reduced state space; - a set of procedures to execute the actual construction efficiently. In this thesis, we contribute to several existing explicit state space verification techniques in either of these two respects. We extend the class of stubborn set methods (an instance of partial order reduction) by constructions that preserve previously unsupported classes of properties. Many existing constructions rely on the existence of "invisible" actions, i.e. actions whose effect does not immediately influence the verified property. We propose efficient constructions that can be applied without having such invisible actions, and prove that they preserve reachability properties as well as certain classes of more complex behavioral system properties. This way, so called "global" properties can now be approached with better stubborn set methods. We pick up a graph automorphism based approach to symmetry reduction and propose a set of construction algorithms that make this approach feasible. In difference to established symmetry techniques that rely on special "symmetry creating" data types, a broader range of symmetries can be handled with our approach thus obtaining smaller reduced state spaces. Coverability graph construction leads to a finite representation of an infinite state space of a Petri net by condensing diverging sequences of states to their limit. We prove rules to determine temporal logic properties of the original system from its coverability graph, far beyond the few properties known to be preserved so far. We employ the Petri net concept of linear algebraic invariants for compressing states as well as for leaving states out of explicit storage. Compression uses place invariants for replacing states by smaller fingerprints that still uniquely identify a state (unlike many hash compression techniques). For reducing the number of explicitly stored states, we rely on the capability of Petri net transition invariants to characterize cycles in the state space. For termination of an exhaustive exploration of a finite state space, it is sufficient to cover all cycles with explicitly stored states. Both techniques are easy consequences of well known facts about invariants. As a novel contribution, we observe that both techniques can be applied without computing an explicit representation of (a generating set for) the respective invariants. This speeds up the constructions considerably and saves a significant amount of memory. For all presented techniques, we illustrate their capabilities to reduce the complexity of state space reduction using a few academic benchmark examples. We address compatibility issues, i.e. the possibility to apply techniques in combination, or in connection with different strategies for exploring the reduced state space. We propose a scheme to distribute state space exploration on a cluster of workstations and discuss consequences for using this scheme for state space reduction. We collect observations concerning the impact of the choice of system description formalisms, and property specification languages, on the availability of explicit state space verification techniques.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:month>December</bibtex:month>
      <bibtex:pdf>http://edoc.hu-berlin.de/habilitationen/schmidt-karsten-2002-11-15/PDF/Schmidt.pdf</bibtex:pdf>
      <bibtex:school>Humboldt-Universit&#228;t zu Berlin, Mathematisch-Naturwissenschaftliche Fakult&#228;t II</bibtex:school>
      <bibtex:title>Explicit State Space Verification</bibtex:title>
      <bibtex:type>Habilitationsschrift</bibtex:type>
      <bibtex:url>http://edoc.hu-berlin.de/docviews/abstract.php?lang=ger&amp;id=20155</bibtex:url>
      <bibtex:year>2002</bibtex:year>
      <bibtex:bdsk-url-1>http://edoc.hu-berlin.de/docviews/abstract.php?lang=ger&amp;id=20155</bibtex:bdsk-url-1>
    </bibtex:phdthesis>
  </bibtex:entry>

  <bibtex:entry id="WangS_2002_forte">
    <bibtex:inproceedings>
      <bibtex:abstract>We formally define the model of software with pointer data structures. We developed symbolic algorithms for the manipulation of conditions and assignments with indirect operands for verification with BDD-like data-structures. We rely on two techniques, including inactive variable elimination and process-symmetry reduction in the data-structure configuration, to contain the time and memory complexity. We use binary permutation for efficiency but also identify the possibility of anomaly of image false reachability. We implemented the techniques in tool red and compare performance with Mur and SMC against several other benchmarks.</bibtex:abstract>
      <bibtex:author>
        <bibtex:person>Farn Wang</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Formal Techniques for Networked and Distributed Sytems &#x2014; FORTE 2002 : 22nd IFIP WG 6.1 International Conference, Houston, Texas, USA, November 11-14, 2002. Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2009-08-29 09:47:13 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-36135-9_4</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Doron Peled</bibtex:person>
        <bibtex:person>Moshe Y. Vardi</bibtex:person>
      </bibtex:editor>
      <bibtex:month>November</bibtex:month>
      <bibtex:pages>50-64</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Symmetric Symbolic Safety-Analysis of Concurrent Software with Pointer Data Structures</bibtex:title>
      <bibtex:volume>2529</bibtex:volume>
      <bibtex:year>2002</bibtex:year>
      <bibtex:bdsk-url-1>http://www.springerlink.com/content/n2pndprxhtjxwnf1/</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2001_fi">
    <bibtex:article>
      <bibtex:abstract>Given a (possibly partially defined) state, all count vectors of transition sequences reaching that state are solutions to a corresponding Petri net state equation. We propose a search strategy where sequences corresponding to a minimal solution of the state equation are explored first. Then step by step the search space is relaxed to arbitrary count vectors. This heuristics relies on the observation that in many (though provably not in all) cases, minimal solutions of the state equation can be realized as a firing sequence. If no target state is reachable, either the state equation does not have solutions, or our search method would yield the full state space. We study the impact of the state equation on reachability, present an algorithm that exploits information from the state equation and discuss its application in stateless search as well as its combination with stubborn set reduction.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:journal>Fundam. Inform.</bibtex:journal>
      <bibtex:month>October</bibtex:month>
      <bibtex:number>3-4</bibtex:number>
      <bibtex:pages>325-335</bibtex:pages>
      <bibtex:title>Narrowing Petri Net State Spaces Using the State Equation</bibtex:title>
      <bibtex:url>http://iospress.metapress.com/openurl.asp?genre=article&amp;issn=0169-2968&amp;volume=47&amp;issue=3&amp;spage=325</bibtex:url>
      <bibtex:volume>47</bibtex:volume>
      <bibtex:year>2001</bibtex:year>
      <bibtex:bdsk-url-1>http://iospress.metapress.com/openurl.asp?genre=article&amp;issn=0169-2968&amp;volume=47&amp;issue=3&amp;spage=325</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2001_wcsp">
    <bibtex:inproceedings>
      <bibtex:address>Warsaw, Poland</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Workshop on Concurrency, Specification and Programming (CS&amp;P 2001), Proceedings</bibtex:booktitle>
      <bibtex:title>Using Invariants for State Space Reduction</bibtex:title>
      <bibtex:year>2001</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2000_fi">
    <bibtex:article>
      <bibtex:abstract>The general stubborn set approach to CTL model checking [2] has the drawback that one either finds a stubborn set with only one enabled transition or one has to expand all enabled transitions. This restriction does not apply in our approach to a fragment of CTL. Furthermore, our reduction does not depend on the invisibility of transitions in a stubborn set.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:date-modified>2008-01-15 23:14:37 +0100</bibtex:date-modified>
      <bibtex:journal>Fundam. Inform.</bibtex:journal>
      <bibtex:month>August</bibtex:month>
      <bibtex:number>1-4</bibtex:number>
      <bibtex:pages>331-341</bibtex:pages>
      <bibtex:title>Stubborn Sets for Model Checking the EF/AG Fragment of CTL</bibtex:title>
      <bibtex:volume>43</bibtex:volume>
      <bibtex:year>2000</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2000_icatpn">
    <bibtex:inproceedings>
      <bibtex:abstract>With LoLA, we put recently developed state space oriented algorithms to other tool developers disposal. Providing a simple interface was a major design goal such that it is as easy as possible to integrate LoLA into tools of different application domains. LoLA supports place/transition nets. Implemented verification techniques cover standard properties (liveness, reversibility, boundedness, reachability, dead transitions, deadlocks, home states) as well as satisfiability of state predicates and CTL model checking. For satisfiability, both exhaustive search and heuristically goal oriented system execution are supported. For state space reduction, LoLA features symmetries, stubborn sets, and coverability graphs.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Application and Theory of Petri Nets 2000: 21st International Conference, ICATPN 2000, Aarhus, Denmark, June 2000. Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2009-08-29 09:19:44 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-44988-4_27</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Mogens Nielsen</bibtex:person>
        <bibtex:person>Dan Simpson</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>465-474</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>LoLA: A Low Level Analyser</bibtex:title>
      <bibtex:volume>1825</bibtex:volume>
      <bibtex:year>2000</bibtex:year>
      <bibtex:bdsk-url-1>http://www.springerlink.com/content/q6x36k7lcxtxhbxt/</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2000_ai">
    <bibtex:article>
      <bibtex:abstract>Symmetric net structure yields symmetric net behaviour. Thus, knowing the symmetries of a net, redundant calculations can be skipped. We present a framework for the calculation of symmetries for several net classes including place/transition nets, timed nets, stochastic nets, self-modifying nets, nets with inhibitor arcs, and many others. Our approach allows the specification of different symmetry groups. Additionally it provides facilities either to calculate symmetries on demand while running the actual analysis algorithm, or to calculate them in advance. For the latter case we define and calculate a ground set of symmetries. Such a set has polynomial size and is sufficient for an efficient implementation of the for all symmetries loop and the partition of net elements into equivalence classes. These two constructions are the usual way to integrate symmetries into an analysis algorithm.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:doi>10.1007/s002360050002</bibtex:doi>
      <bibtex:journal>Acta Inf.</bibtex:journal>
      <bibtex:number>7</bibtex:number>
      <bibtex:pages>545-590</bibtex:pages>
      <bibtex:title>How to Calculate Symmetries of Petri Nets</bibtex:title>
      <bibtex:volume>36</bibtex:volume>
      <bibtex:year>2000</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/s002360050002</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2000_csp">
    <bibtex:inproceedings>
      <bibtex:abstract>Given a (possibly partially defined) state, all firing count vectors that correspond to sequences reaching that state are solutions to a corresponding Petri net state equation. We propose a search strategy that first explores sequences corresponding to a minimal solution of the state equation and then step by step relaxes the search space to other solutions of the equation. This heuristics relies on the observation that in many cases a shortest sequence reaching a state corresponds to a minimal solution of the state equation. Should the target state be non-reachable, our algorithm usually does not reduce the state space at all. We study the impact of the state equation on reachability, present an algorithm that exploits information from the state equation and discuss its application in stateless search as well as its combination with stubborn set reduction.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Proceedings of the workhop on Concurrency, Specification and Programming, Oct 9-11, 2000, Berlin</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:14:50 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Hans-Dieter Burkhard</bibtex:person>
        <bibtex:person>L. Czaja</bibtex:person>
        <bibtex:person>A. Skowdron</bibtex:person>
        <bibtex:person>Peter H. Starke</bibtex:person>
      </bibtex:editor>
      <bibtex:organization>Humbolt-Universit&#228;t zu Berlin</bibtex:organization>
      <bibtex:pages>243-253</bibtex:pages>
      <bibtex:title>Narrowing the State Space of Petri Nets Using the State Equation</bibtex:title>
      <bibtex:year>2000</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2000_tacas">
    <bibtex:inproceedings>
      <bibtex:abstract>We present three methods for the integration of symmetries into reachability analysis. Two of them lead to maximal reduction but their runtime depends on the symmetry structure. The third one works always fast but does not always yield maximal reduction. Keywords: symmetries, automorphisms, reachability analysis.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Tools and Algorithms for the Construction and Analysis of Systems: 6th International Conference, TACAS 2000, Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2000, Berlin, Germany, March/April 2000. Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2009-08-29 09:48:04 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-46419-0_22</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Susanne Graf</bibtex:person>
        <bibtex:person>Michael I. Schwartzbach</bibtex:person>
      </bibtex:editor>
      <bibtex:month>March</bibtex:month>
      <bibtex:pages>315-330</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Integrating Low Level Symmetries into Reachability Analysis</bibtex:title>
      <bibtex:volume>1785</bibtex:volume>
      <bibtex:year>2000</bibtex:year>
      <bibtex:bdsk-url-1>http://www.springerlink.com/content/d8dckgmuf9p3bq3c/</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_2000_pnn">
    <bibtex:article>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:journal>Petri Net Newsletter</bibtex:journal>
      <bibtex:pages>30-44</bibtex:pages>
      <bibtex:title>Flexible net Inscriptions with LoLA</bibtex:title>
      <bibtex:volume>59</bibtex:volume>
      <bibtex:year>2000</bibtex:year>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1999_fmsd">
    <bibtex:article>
      <bibtex:abstract>We show that several formulas of a temporal logic can be verified using the coverability graph of the underlying system. Of course, the procedure is not capable of verifying all formulae, since already the reachability problem for (unbounded) Petri nets is computationally hard. Thus, the procedure returns true, false, or unknown for a query. The formulae that can be verified cover most of the well known standard properties which have been listed in the context of coverability graph analysis so far.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:doi>10.1023/A:1008753219837</bibtex:doi>
      <bibtex:journal>Formal Methods in System Design</bibtex:journal>
      <bibtex:month>November</bibtex:month>
      <bibtex:number>3</bibtex:number>
      <bibtex:pages>239-254</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:title>Model-Checking with Coverability Graphs</bibtex:title>
      <bibtex:volume>15</bibtex:volume>
      <bibtex:year>1999</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1023/A:1008753219837</bibtex:bdsk-url-1>
    </bibtex:article>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1999_awpn">
    <bibtex:inproceedings>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>6. Workshop Algorithmen und Werkzeuge f&#252;r Petrinetze (AWPN'99), Frankfurt, Germany, October 11.-12., 1999</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:15:07 +0100</bibtex:date-modified>
      <bibtex:month>October</bibtex:month>
      <bibtex:pages>48-53</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1999_awpn.pdf</bibtex:pdf>
      <bibtex:publisher>CEUR-WS.org</bibtex:publisher>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:series>CEUR Workshop Proceedings</bibtex:series>
      <bibtex:title>LoLA wird Pfadfinder</bibtex:title>
      <bibtex:volume>26</bibtex:volume>
      <bibtex:year>1999</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1999_csp">
    <bibtex:inproceedings>
      <bibtex:address>Warsaw</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Workshop on Concurrency, Specification and Programming (CS&amp;P'99), Proceedings</bibtex:booktitle>
      <bibtex:pages>204-213</bibtex:pages>
      <bibtex:title>Stubborn Sets for Modelchecking the EF/AG-Fragment of CTL</bibtex:title>
      <bibtex:year>1999</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1999_hub_tr123">
    <bibtex:techreport>
      <bibtex:abstract>The general stubborn set approach to CTL model checking has the drawback that one either finds a stubborn set with only one enabled transition or one has to expand all enabled transitions. This restriction does not apply in our approach to a fragment of CTL. Furthermore, our reduction does not depend on the invisibility of transitions in a stubborn set.</bibtex:abstract>
      <bibtex:address>Berlin, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:institution>Humboldt-Universit&#228;t zu Berlin</bibtex:institution>
      <bibtex:number>123</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1999_hub_tr123.pdf</bibtex:pdf>
      <bibtex:title>Stubborn Sets for Model Checking the EF/AG Fragment of CTL</bibtex:title>
      <bibtex:type>Informatik-Berichte</bibtex:type>
      <bibtex:year>1999</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1999_icatpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Stubborn sets are a tool for state space reduction preserving certain system properties. We present stubborn set approaches for all popular Petri net standard properties. This extends the list of properties that can be analysed successfully (including boundedness, reversibility). For other properties, our approach can lead to larger reductions (reachability) than previous ones. Furthermore, shortest and cheapest witness paths for several properties are now preserved.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Applications and Theory of Petri Nets 1999: 20th International Conference, ICATPN'99, Williamsburg, Virginia, USA, June 1999. Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2009-08-29 09:48:55 +0200</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-48745-X_4</bibtex:doi>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>46-65</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Stubborn Sets for Standard Properties</bibtex:title>
      <bibtex:volume>1639</bibtex:volume>
      <bibtex:year>1999</bibtex:year>
      <bibtex:bdsk-url-1>http://www.springerlink.com/content/mtj3p6183xchedr9/</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="NeuendorfSKX_1998_csp">
    <bibtex:inproceedings>
      <bibtex:author>
        <bibtex:person>Klaus-Peter Neuendorf</bibtex:person>
        <bibtex:person>Karsten Schmidt</bibtex:person>
        <bibtex:person>Dimitris Kiritsis</bibtex:person>
        <bibtex:person>Paul Xirouchakis</bibtex:person>
      </bibtex:author>
      <bibtex:booktitle>Workshop Concurrency, Specification and Programming, 28-30 September 1998</bibtex:booktitle>
      <bibtex:date-modified>2008-01-16 08:11:30 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Hans-Dieter Burkhard</bibtex:person>
        <bibtex:person>L. Czaja</bibtex:person>
        <bibtex:person>Peter H. Starke</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:note>Appeared as Informatik-Berichte Nr. 110</bibtex:note>
      <bibtex:organization>Humbolt-Universit&#228;t zu Berlin</bibtex:organization>
      <bibtex:pages>156-161</bibtex:pages>
      <bibtex:title>Workflow Modelling and Analysis with Chameleon Nets</bibtex:title>
      <bibtex:year>1998</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1998_csp">
    <bibtex:inproceedings>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Workshop Concurrency, Specification and Programming, 28-30 September 1998</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:15:50 +0100</bibtex:date-modified>
      <bibtex:editor>
        <bibtex:person>Hans-Dieter Burkhard</bibtex:person>
        <bibtex:person>L. Czaja</bibtex:person>
        <bibtex:person>Peter H. Starke</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:note>Appeared as Informatik-Berichte Nr. 110</bibtex:note>
      <bibtex:organization>Humboldt-Universit&#228;t zu Berlin</bibtex:organization>
      <bibtex:pages>204-213</bibtex:pages>
      <bibtex:title>Goal Oriented Stubborn Sets</bibtex:title>
      <bibtex:year>1998</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1998_awpn">
    <bibtex:inproceedings>
      <bibtex:abstract>Various approaches to incorporate known symmetries of ordinary Petri nets into the reachability analysis are sketched and evaluated.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>5. Workshop Algorithmen und Werkzeuge f&#252;r Petrinetze (AWPN 1998)</bibtex:booktitle>
      <bibtex:editor>
        <bibtex:person>J&#246;rg Desel</bibtex:person>
        <bibtex:person>P. Kemper</bibtex:person>
        <bibtex:person>Ekkart Kindler</bibtex:person>
        <bibtex:person>Andreas Oberweis</bibtex:person>
      </bibtex:editor>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:organization>Universit&#228;t Dortmund</bibtex:organization>
      <bibtex:pages>101-106</bibtex:pages>
      <bibtex:title>Symmetrien in der Erreichbarkeitsanalyse</bibtex:title>
      <bibtex:year>1998</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1997_icatpn1">
    <bibtex:inproceedings>
      <bibtex:abstract>Commoner's Theorem establishes a relation between siphons, traps and liveness in free choice systems. Most proofs of this theorem do explicitly involve the finiteness of the net. Therefore we cannot apply the theorem directly to high level nets with infinite color domains. We prove generalisations of both the `if' and the `only if' direction to the infinite case which unfortunately cannot be combined to an `iff' statement. We present examples which show that there are both live and non-live nets in the grey zone left by our generalisations. Our approach enlarges the application area of Commoner's theorem to infinite Petri nets, compared with an earlier generalisation to a class of free choice predicate event system, but does not cover the other approach completely.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Application and Theory of Petri Nets 1997, 18th International Conference, ICATPN '97, Toulouse, France, June 23-27, 1997, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:16:11 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-63139-9_41</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Pierre Az&#233;ma</bibtex:person>
        <bibtex:person>Gianfranco Balbo</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>271-289</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Siphons, Traps, and High-Level Nets with Infinite Color Domains</bibtex:title>
      <bibtex:volume>1248</bibtex:volume>
      <bibtex:year>1997</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/3-540-63139-9_41</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1997_icatpn2">
    <bibtex:inproceedings>
      <bibtex:abstract>Siphons and traps are structures which allow for some implications on the net's behaviour and can be used in manual correctness proofs for concurrent systems. We introduce symbolic representations of siphons and traps which work quite well even in infinite cases and are still intuitively readable. The verification of symbolic siphons and traps is traced back to unification and structural induction on the terms. This approach is motivated by some additional considerations. For unification and other proposed structural reasoning mechanisms tool support is given by completeness proof tools studied in the theorem-proving community.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Application and Theory of Petri Nets 1997, 18th International Conference, ICATPN '97, Toulouse, France, June 23-27, 1997, Proceedings</bibtex:booktitle>
      <bibtex:date-modified>2008-01-15 23:16:43 +0100</bibtex:date-modified>
      <bibtex:doi>10.1007/3-540-63139-9_49</bibtex:doi>
      <bibtex:editor>
        <bibtex:person>Pierre Az&#233;ma</bibtex:person>
        <bibtex:person>Gianfranco Balbo</bibtex:person>
      </bibtex:editor>
      <bibtex:month>June</bibtex:month>
      <bibtex:pages>427-446</bibtex:pages>
      <bibtex:publisher>Springer-Verlag</bibtex:publisher>
      <bibtex:series>Lecture Notes in Computer Science</bibtex:series>
      <bibtex:title>Verification of Siphons and Traps for Algebraic Petri nets</bibtex:title>
      <bibtex:volume>1248</bibtex:volume>
      <bibtex:year>1997</bibtex:year>
      <bibtex:bdsk-url-1>http://dx.doi.org/10.1007/3-540-63139-9_49</bibtex:bdsk-url-1>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1997_awpn">
    <bibtex:inproceedings>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>4. Workshop Algorithmen und Werkzeuge f&#252;r Petrinetze (AWPN 1997)</bibtex:booktitle>
      <bibtex:editor>
        <bibtex:person>J&#246;rg Desel</bibtex:person>
        <bibtex:person>Ekkart Kindler</bibtex:person>
        <bibtex:person>Andreas Oberweis</bibtex:person>
      </bibtex:editor>
      <bibtex:month>September</bibtex:month>
      <bibtex:pubtype>workshop</bibtex:pubtype>
      <bibtex:pubreviewed>no</bibtex:pubreviewed>
      <bibtex:organization>Humbolt-Universit&#228;t zu Berlin</bibtex:organization>
      <bibtex:pages>43-48</bibtex:pages>
      <bibtex:title>Modelchecking on Symbolic Reachability Graphs of Petri nets</bibtex:title>
      <bibtex:year>1997</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1997_csp">
    <bibtex:inproceedings>
      <bibtex:address>Warsaw, Poland</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Workshop on Concurrency, Specification and Programming (CS&amp;P'97), Proceedings</bibtex:booktitle>
      <bibtex:pages>112-123</bibtex:pages>
      <bibtex:title>Modelchecking with Coverability Graphs</bibtex:title>
      <bibtex:year>1997</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1997_hut_tra44">
    <bibtex:techreport>
      <bibtex:address>Helsinki, Finland</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:institution>Helsinki University of Technology</bibtex:institution>
      <bibtex:number>A44</bibtex:number>
      <bibtex:title>Applying Reduction Rules to Algebraic Petri nets</bibtex:title>
      <bibtex:type>Technical Report</bibtex:type>
      <bibtex:year>1997</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1997_tud_al10">
    <bibtex:techreport>
      <bibtex:address>Dresden, Germany</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:institution>Dresden University of Technology</bibtex:institution>
      <bibtex:number>MATH-AL-10-1997</bibtex:number>
      <bibtex:title>Model Checking on Symbolic Reachability Graphs of Petri nets</bibtex:title>
      <bibtex:type>Technical Report</bibtex:type>
      <bibtex:year>1997</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1996_csp">
    <bibtex:inproceedings>
      <bibtex:abstract>We overview recent results concerning the symbolic verification and calculation of siphons and traps for algebraic Petri nets and their relation to the net behavior.</bibtex:abstract>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:booktitle>Workshop on Concurrency, Specification and Programming (CS&amp;P'96), Berlin, Proceedings</bibtex:booktitle>
      <bibtex:month>October</bibtex:month>
      <bibtex:pages>157-168</bibtex:pages>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1996_csp.pdf</bibtex:pdf>
      <bibtex:title>Siphons and Traps for Algebraic Petri nets</bibtex:title>
      <bibtex:year>1996</bibtex:year>
    </bibtex:inproceedings>
  </bibtex:entry>

  <bibtex:entry id="Schmidt_1996_hut_tra39">
    <bibtex:techreport>
      <bibtex:abstract>We present a symbolic approach to the calculation of siphons and traps for algebraic Petri nets where the color domains are specied without equations and with at most unary operation symbols.</bibtex:abstract>
      <bibtex:address>Helsinki, Finland</bibtex:address>
      <bibtex:author>Karsten Schmidt</bibtex:author>
      <bibtex:institution>Helsinki University of Technology</bibtex:institution>
      <bibtex:month>August</bibtex:month>
      <bibtex:number>A39</bibtex:number>
      <bibtex:pdf>http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Schmidt_1996_hut_tra39.pdf</bibtex:pdf>
      <bibtex:title>How to Calculate Symbolically Siphons and Traps of Algebraic Petri Nets</bibtex:title>
      <bibtex:type>Technical Report</bibtex:type>
      <bibtex:year>1996</bibtex:year>
    </bibtex:techreport>
  </bibtex:entry>

  <!-- manual cleanup may be required... -->
</bibtex:file>
